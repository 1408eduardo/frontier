(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{364:function(e,t,a){"use strict";a.r(t);var n=a(42),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"substrate-node-template-release-process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substrate-node-template-release-process"}},[e._v("#")]),e._v(" Substrate Node Template Release Process")]),e._v(" "),a("blockquote",[a("p",[e._v("NOTE: this is a\n"),a("a",{attrs:{href:"https://github.com/paritytech/substrate/blob/master/docs/node-template-release.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("copy from Subtrate"),a("OutboundLink")],1),e._v(" -\nthere is NO frontier template on the devhub at present. This file only serves as a reference.")])]),e._v(" "),a("ol",[a("li",[a("p",[e._v("This release process has to be run in a github checkout Substrate directory with your work\ncommitted into "),a("code",[e._v("https://github.com/paritytech/substrate/")]),e._v(", because the build script will check\nthe existence of your current git commit ID in the remote repository.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Assume you are in root directory of Substrate. Run:\n\n```bash\ncd .maintain/\n./node-template-release.sh <output tar.gz file>\n```\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Expand the output tar gzipped file and replace files in current Substrate Node Template by\nrunning the following command.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("```bash\n# This is where the tar.gz file uncompressed\ncd substrate-node-template\n# rsync with force copying. Note the slash at the destination directory is important\nrsync -avh * <destination node-template directory>/\n# For dry-running add `-n` argument\n# rsync -avhn * <destination node-template directory>/\n```\n\nThe above command only copies existing files from the source to the destination, but does not\ndelete files/directories that are removed from the source. So you need to manually check and\nremove them in the destination.\n")])])])]),e._v(" "),a("li",[a("p",[e._v("There are actually three packages in the Node Template, "),a("code",[e._v("node-template")]),e._v(" (the node),\n"),a("code",[e._v("node-template-runtime")]),e._v(" (the runtime), and "),a("code",[e._v("pallet-template")]),e._v(", and each has its own "),a("code",[e._v("Cargo.toml")]),e._v(".\nInside these three files, dependencies are listed in expanded form and linked to a certain git\ncommit in Substrate remote repository, such as:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("```toml\n[dev-dependencies.sp-core]\ndefault-features = false\ngit = 'https://github.com/paritytech/substrate.git'\nrev = 'c1fe59d060600a10eebb4ace277af1fee20bad17'\nversion = '3.0.0'\n```\n\nWe will update each of them to the shortened form and link them to the Rust\n[crate registry](https://crates.io/). After confirming the versioned package is published in\nthe crate, the above will become:\n\n```toml\n[dev-dependencies]\nsp-core = { version = '3.0.0', default-features = false }\n```\n\nP.S: This step can be automated if we update `node-template-release` package in\n`.maintain/node-template-release`.\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Once the three "),a("code",[e._v("Cargo.toml")]),e._v("s are updated, compile and confirm that the Node Template builds.\nThen commit the changes to a new branch in\n"),a("a",{attrs:{href:"https://github.com/substrate-developer-hub/substrate-node-template",target:"_blank",rel:"noopener noreferrer"}},[e._v("Substrate Node Template"),a("OutboundLink")],1),e._v(",\nand make a PR.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("> Note that there is a chance the code in Substrate Node Template works with the linked Substrate git\ncommit but not with published packages due to the latest (as yet) unpublished features. In this case,\nrollback that section of the Node Template to its previous version to ensure the Node Template builds.\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Once the PR is merged, tag the merged commit in master branch with the version number "),a("code",[e._v("vX.Y.Z+A")]),e._v("\n(e.g. "),a("code",[e._v("v3.0.0+1")]),e._v("). The "),a("code",[e._v("X")]),e._v("(major), "),a("code",[e._v("Y")]),e._v("(minor), and "),a("code",[e._v("Z")]),e._v("(patch) version number should follow\nSubstrate release version. The last digit is any significant fixes made in the Substrate Node\nTemplate apart from Substrate. When the Substrate version is updated, this digit is reset to 0.")])])]),e._v(" "),a("h2",{attrs:{id:"troubleshooting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[e._v("#")]),e._v(" Troubleshooting")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Running the script "),a("code",[e._v("./node-template-release.sh <output tar.gz file>")]),e._v(", after all tests passed\nsuccessfully, seeing the following error message:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("```\nthread 'main' panicked at 'Creates output file: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }', src/main.rs:250:10\n")])])]),a("p",[e._v("note: run with "),a("code",[e._v("RUST_BACKTRACE=1")]),e._v(" environment variable to display a backtrace ```")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("This is likely due to that your output path is not a valid `tar.gz` filename or you don't have write\npermission to the destination. Try with a simple output path such as `~/node-tpl.tar.gz`.\n")])])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);