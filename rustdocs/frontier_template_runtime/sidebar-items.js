window.SIDEBAR_ITEMS = {"constant":[["DAYS",""],["HOURS",""],["MAXIMUM_BLOCK_LENGTH",""],["MAXIMUM_BLOCK_WEIGHT","We allow for 2 seconds of compute with a 6 second average block time."],["MILLISECS_PER_BLOCK",""],["MINUTES",""],["SLOT_DURATION",""],["VERSION",""],["WASM_BINARY",""],["WASM_BINARY_BLOATY",""],["WEIGHT_PER_SECOND",""]],"enum":[["BalancesCall","Contains one variant per dispatchable that can be called by an extrinsic."],["OriginCaller",""],["RuntimeCall",""],["RuntimeEvent",""],["SystemCall","Contains one variant per dispatchable that can be called by an extrinsic."],["TimestampCall","Contains one variant per dispatchable that can be called by an extrinsic."]],"fn":[["native_version","The version information used to identify this runtime when compiled natively."]],"macro":[["construct_runtime","Construct a runtime, with the given name and the given pallets."],["parameter_types","Create new implementations of the `Get` trait."]],"mod":[["api",""],["opaque","Opaque types. These are used by the CLI to instantiate machinery that don’t need to know the specifics of the runtime. They can then be made to be agnostic over specific formats of data like extrinsics, allowing for them to continue syncing the network through upgrades to even the core data structures."]],"struct":[["BaseFeeThreshold",""],["BlockExecutionWeight","Time to execute an empty block. Calculated by multiplying the Average with `1.0` and adding `0`."],["BlockGasLimit",""],["BlockHashCount",""],["BlockLength",""],["BlockWeights",""],["BoundDivision",""],["ConstU32","Const getter for a basic type."],["ConstU8","Const getter for a basic type."],["ConstantMultiplier","Implementor of [`WeightToFee`] that uses a constant multiplier."],["DefaultBaseFeePerGas",""],["DefaultElasticity",""],["ExistentialDeposit",""],["ExtrinsicBaseWeight","Time to execute a NO-OP extrinsic, for example `System::remark`. Calculated by multiplying the Average with `1.0` and adding `0`."],["FindAuthorTruncated",""],["GenesisConfig",""],["IdentityFee","Implementor of `WeightToFee` that maps one unit of weight to one unit of fee."],["MaxAuthorities",""],["MaxLocks",""],["MinimumPeriod",""],["PalletInfo","Provides an implementation of `PalletInfo` to provide information about the pallet setup in the runtime."],["PrecompilesValue",""],["Runtime",""],["RuntimeApi",""],["RuntimeApiImpl","Implements all runtime apis for the client side."],["RuntimeOrigin","The runtime origin type representing the origin of a call."],["SS58Prefix",""],["TransactionByteFee",""],["TransactionConverter",""],["Version",""],["Weight",""],["WeightPerGas",""]],"trait":[["FindAuthor","A trait for finding the author of a block header based on the `PreRuntime` digests contained within it."],["KeyOwnerProofSystem","Something which can compute and check proofs of a historical key owner and return full identification data of that key owner."],["Randomness","A trait that is able to provide randomness."],["StorageValue","A trait for working with macro-generated storage values under the substrate storage API."]],"type":[["AccountId","Some way of identifying an account on the chain. We intentionally make it equivalent to the public key of our transaction signing scheme."],["AccountIndex","The type for looking up accounts. We don’t expect more than 4 billion of them, but you never know…"],["Address","The address format for describing accounts."],["AllPallets","All pallets included in the runtime as a nested tuple of types."],["AllPalletsReversedWithSystemFirst","All pallets included in the runtime as a nested tuple of types in reversed order. With the system pallet first."],["AllPalletsWithSystem","All pallets included in the runtime as a nested tuple of types."],["AllPalletsWithSystemReversed","All pallets included in the runtime as a nested tuple of types in reversed order."],["AllPalletsWithoutSystem","All pallets included in the runtime as a nested tuple of types. Excludes the System pallet."],["AllPalletsWithoutSystemReversed","All pallets included in the runtime as a nested tuple of types in reversed order. Excludes the System pallet."],["Aura",""],["AuraConfig",""],["Balance","Balance of an account."],["Balances",""],["BalancesConfig",""],["BaseFee",""],["BaseFeeConfig",""],["Block","Block type as expected by this runtime."],["BlockId","BlockId type as expected by this runtime."],["BlockNumber","Type of block number."],["CheckedExtrinsic","Extrinsic type that has already been checked."],["ConsensusEngineId","Consensus engine unique ID."],["DigestItem","Digest item type."],["DynamicFee",""],["DynamicFeeConfig",""],["EVM",""],["EVMChainId",""],["EVMChainIdConfig",""],["EVMConfig",""],["Ethereum",""],["EthereumConfig",""],["Executive","Executive: handles dispatch to the various modules."],["Grandpa",""],["GrandpaConfig",""],["Hash","A hash of some data used by the chain."],["Header","Block header type as expected by this runtime."],["HotfixSufficients",""],["Index","Index of a transaction in the chain."],["Signature","Alias to 512-bit hash when used in the context of a transaction signature on the chain."],["SignedBlock","A Block signed with a Justification"],["SignedExtra","The SignedExtension to the basic transaction logic."],["SignedPayload","The payload being signed in transactions."],["Sudo",""],["SudoConfig",""],["System",""],["SystemConfig",""],["Timestamp",""],["TransactionPayment",""],["TransactionPaymentConfig",""],["UncheckedExtrinsic","Unchecked extrinsic type as expected by this runtime."]]};