var searchIndex = JSON.parse('{\
"fc_api":{"doc":"","t":"AIDIDLKMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLLLLLLLLLKLMKLMMLLMKLLLLLLLLLLLL","n":["backend","Backend","FilteredLog","LogIndexerBackend","TransactionMetadata","__clone_box","block_hash","block_number","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","ethereum_block_hash","ethereum_block_hash","ethereum_index","ethereum_storage_schema","filter_logs","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","is_indexed","is_indexed","log_index","log_indexer","size_hint","substrate_block_hash","substrate_block_hash","to_keyed_vec","to_owned","transaction_index","transaction_metadata","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"fc_api"],[1,"fc_api::backend"],[73,"dyn_clone::sealed"],[74,"primitive_types"],[75,"core::future::future"],[76,"alloc::boxed"],[77,"core::pin"],[78,"core::clone"],[79,"sp_runtime::traits"],[80,"parity_scale_codec::error"],[81,"core::result"],[82,"parity_scale_codec::codec"],[83,"parity_scale_codec::codec"],[84,"core::cmp"],[85,"primitive_types"],[86,"core::option"],[87,"core::fmt"],[88,"core::fmt"]],"d":["","The frontier backend interface.","","The log indexer backend interface.","","","Get the substrate hash with the given ethereum block hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Filter the logs by the parameters.","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicate whether the log indexing feature is supported.","Indicate whether the log indexing feature is supported.","","Returns reference to log indexer backend.","","","","","","","Get the transaction metadata with the given ethereum block …","","","","","","","","","","","",""],"i":[0,0,0,0,0,7,31,21,7,21,7,21,7,7,7,7,7,7,7,21,7,21,7,21,7,7,21,7,7,7,21,21,21,7,21,7,21,29,7,21,7,21,7,21,7,21,7,21,7,21,29,31,21,31,7,7,21,7,7,21,31,7,21,7,21,7,21,7,21,7,21,7,21],"f":[0,0,0,0,0,[[-1,1],2,[]],[[-1,3],[[6,[[5,[4]]]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1]]],[[7,[-1]]],[8,9]],[[-1,-2],2,[],[]],[-1,[[11,[[7,[-2]],10]]],12,9],[[[14,[13]]],[[11,[-1,10]]],[]],[[15,[14,[13]]],[[11,[-1,10]]],[]],[[15,-1],[[11,[-2,10]]],12,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,2],[16,2],[[[7,[-1]],-2],2,9,[17,18]],[[[7,[-1]],[7,[-1]]],19,[20,9]],[[[21,[-1]],[21,[-1]]],19,[20,9]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],0,0,0,0,[[-1,22,22,[24,[23]],[24,[[24,[[25,[3]]]]]]],[[6,[[5,[4]]]]],[]],[[[7,[-1]],26],27,[28,9]],[[[21,[-1]],26],27,[28,9]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,19,[]],[-1,19,[]],0,[-1,29,[]],[[[7,[-1]]],16,9],0,0,[[-1,[14,[13]]],[[24,[13]]],[]],[-1,-2,[],[]],0,[[-1,3],[[6,[[5,[4]]]]],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",73],[15,"tuple"],[3,"H256",74],[8,"Future",75],[3,"Box",76],[3,"Pin",77],[3,"TransactionMetadata",1],[8,"Clone",78],[8,"Block",79],[3,"Error",80],[4,"Result",81],[8,"Input",82],[15,"u8"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Output",82],[8,"Sized",83],[15,"bool"],[8,"PartialEq",84],[3,"FilteredLog",1],[15,"u64"],[3,"H160",74],[3,"Vec",85],[4,"Option",86],[3,"Formatter",87],[6,"Result",87],[8,"Debug",87],[8,"LogIndexerBackend",1],[3,"TypeId",88],[8,"Backend",1]],"b":[]},\
"fc_cli":{"doc":"","t":"DLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLMLLMLLLLLLLLLML","n":["FrontierDbCmd","__clone_box","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","column","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","from_mut","from_mut","from_ref","from_ref","group_id","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","key","operation","pruning_params","pruning_params","run","shared_params","shared_params","to_owned","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches_mut","value","vzip"],"q":[[0,"fc_cli"],[48,"dyn_clone::sealed"],[49,"clap_builder::builder::command"],[50,"core::fmt"],[51,"core::fmt"],[52,"clap_builder"],[53,"core::result"],[54,"clap_builder::util::id"],[55,"core::option"],[56,"alloc::boxed"],[57,"core::any"],[58,"alloc::sync"],[59,"alloc::rc"],[60,"sc_cli::params::pruning_params"],[61,"fc_db::kv"],[62,"sc_cli::error"],[63,"sp_runtime::traits"],[64,"sp_api"],[65,"sp_blockchain::backend"],[66,"sc_cli::params::shared_params"],[67,"core::any"]],"d":["Cli tool to interact with the Frontier backend db","","","","","","","","Specify the column to query.","","","","","","","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","Specify the key to either read or write.","Specify the operation to perform.","","","","","Shared parameters","","","","","","","","","","Specify the value to write.",""],"i":[0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[0,[[-1,1],2,[]],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[[-1,-2],2,[],[]],0,[[],3],[[],3],[5,-1,[]],[5,-1,[]],[5,2],[[4,6],7],[-1,-1,[]],[8,[[10,[4,9]]]],[8,[[10,[4,9]]]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],[[12,[11]]]],[[],5],[-1,-2,[],[]],[[[13,[-1]]],[[13,[14]]],[]],[[[15,[-1]]],[[15,[14]]],[]],[[[16,[-1]]],[[16,[14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[4,[[12,[17]]]],0,[[4,[15,[-2]],[15,[[18,[-1]]]]],[[19,[2]]],20,[[21,[-1]],[22,[-1]]]],[4,23],0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,24,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,8],[[10,[2,9]]]],[[4,8],[[10,[2,9]]]],0,[-1,-2,[],[]]],"c":[],"p":[[3,"Private",48],[15,"tuple"],[3,"Command",49],[3,"FrontierDbCmd",0],[15,"usize"],[3,"Formatter",50],[6,"Result",50],[3,"ArgMatches",51],[6,"Error",52],[4,"Result",53],[3,"Id",54],[4,"Option",55],[3,"Box",56],[8,"Any",57],[3,"Arc",58],[3,"Rc",59],[3,"PruningParams",60],[3,"Backend",61],[6,"Result",62],[8,"Block",63],[8,"ProvideRuntimeApi",64],[8,"HeaderBackend",65],[3,"SharedParams",66],[3,"TypeId",57],[15,"str"]],"b":[]},\
"fc_consensus":{"doc":"","t":"EDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Error","FrontierBlockImport","MultipleRuntimeLogs","NoRuntimeLog","RuntimeApiCallFailed","__clone_box","borrow","borrow","borrow_mut","borrow_mut","check_block","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","import_block","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","new","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"fc_consensus"],[64,"dyn_clone::sealed"],[65,"sc_consensus::block_import"],[66,"core::future::future"],[67,"alloc::boxed"],[68,"core::pin"],[69,"sp_runtime::traits"],[70,"sc_consensus::block_import"],[71,"core::marker"],[72,"core::clone"],[73,"core::fmt"],[74,"core::fmt"],[75,"sc_consensus::block_import"],[76,"alloc::sync"],[77,"alloc::rc"],[78,"alloc::string"],[79,"core::result"],[80,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,15,15,15,3,3,15,3,15,3,3,3,3,15,3,15,3,15,15,15,3,15,15,3,3,15,15,3,3,15,15,3,3,15,3,15,3,15,3,15,3,15,3,15,3,15,3,3,15,3,15,3,15,3,15,3,15,3,15,3,15,3,15],"f":[0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2,-3]],[4,[-1]]],[[7,[[6,[5]]]]],8,[[9,[-1]],10,11],[[12,[-1]],10,11]],[[[3,[-1,-2,-3]]],[[3,[-1,-2,-3]]],8,[13,[9,[-1]]],[]],[[-1,-2],2,[],[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,2],[14,2],[[15,16],17],[[15,16],17],[-1,-1,[]],[18,15],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[3,[-1,-2,-3]],[19,[-1]]],[[7,[[6,[5]]]]],8,[[9,[-1]],10,11],[[12,[-1]],10,11]],[[],14],[[],14],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[6,[20]]],[]],[[[6,[-1]]],[[6,[20]]],[]],[[[21,[-1]]],[[21,[20]]],[]],[[[21,[-1]]],[[21,[20]]],[]],[[[22,[-1]]],[[22,[20]]],[]],[[[22,[-1]]],[[22,[20]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-2,[21,[-3]]],[[3,[-1,-2,-3]]],8,[[9,[-1]]],[[12,[-1]]]],[-1,-2,[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",64],[15,"tuple"],[3,"FrontierBlockImport",0],[3,"BlockCheckParams",65],[8,"Future",66],[3,"Box",67],[3,"Pin",68],[8,"Block",69],[8,"BlockImport",65],[8,"Send",70],[8,"Sync",70],[8,"ProvideRuntimeApi",71],[8,"Clone",72],[15,"usize"],[4,"Error",0],[3,"Formatter",73],[6,"Result",73],[4,"FindLogError",74],[3,"BlockImportParams",65],[8,"Any",75],[3,"Arc",76],[3,"Rc",77],[3,"String",78],[4,"Result",79],[3,"TypeId",75],[15,"str"]],"b":[[19,"impl-Display-for-Error"],[20,"impl-Debug-for-Error"]]},\
"fc_db":{"doc":"","t":"NENENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLALLLLLLLLLLLLLLLMMMMMMMMNDNIDEGDDDDNNLLLLMLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMRDEDDNDLMLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMMLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Auto","Backend","Custom","DatabaseSource","KeyValue","ParityDb","RocksDb","Sql","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","kv","path","set_path","sql","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","cache_size","cache_size","db","paritydb_path","path","path","require_create_flag","rocksdb_path","Auto","Backend","Custom","Database","DatabaseSettings","DatabaseSource","DbHash","LogIndexerBackend","MappingCommitment","MappingDb","MetaDb","ParityDb","RocksDb","__clone_box","__clone_box","block_hash","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","contains","current_syncing_tips","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","ethereum_block_hash","ethereum_schema","ethereum_transaction_hashes","filter_logs","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frontier_database_dir","get","init","init","init","init","init","init","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_indexed","is_synced","log_indexer","mapping","meta","new","open","sanitize_key","source","static_keys","supports_ref_counting","to_owned","to_owned","transaction_metadata","transaction_metadata","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value_size","vzip","vzip","vzip","vzip","vzip","vzip","with_get","write_current_syncing_tips","write_ethereum_schema","write_hashes","write_none","cache_size","cache_size","db","paritydb_path","path","path","require_create_flag","rocksdb_path","CURRENT_SYNCING_TIPS","Backend","BackendConfig","BlockIndexedStatus","Log","Sqlite","SqliteBackendConfig","__clone_box","address","block_hash","block_indexed_and_canon_status","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_size","canon","canonicalize","clone","clone_into","create_if_missing","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","filter_logs","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_first_missing_canon_block","get_first_pending_canon_block","get_last_indexed_canon_block","index_block_logs","indexed","init","init","init","init","init","insert_block_metadata","insert_genesis_block_metadata","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_block_indexed","is_indexed","log_index","log_indexer","new","path","pool","set_block_as_canon","substrate_block_hash","thread_count","to_owned","topic_1","topic_2","topic_3","topic_4","transaction_index","transaction_metadata","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fc_db"],[63,"fc_db::DatabaseSource"],[71,"fc_db::kv"],[246,"fc_db::kv::DatabaseSource"],[254,"fc_db::kv::static_keys"],[255,"fc_db::sql"],[407,"dyn_clone::sealed"],[408,"core::clone"],[409,"sp_runtime::traits"],[410,"core::fmt"],[411,"core::fmt"],[412,"std::path"],[413,"core::option"],[414,"alloc::string"],[415,"core::any"],[416,"primitive_types"],[417,"alloc::vec"],[418,"core::future::future"],[419,"alloc::boxed"],[420,"core::pin"],[421,"sp_database"],[422,"sp_database::error"],[423,"core::default"],[424,"fp_storage"],[425,"primitive_types"],[426,"alloc::sync"],[427,"sp_blockchain::backend"],[428,"fc_api::backend"],[429,"sqlx_core::error"],[430,"sc_client_api::backend"],[431,"sc_client_api::backend"],[432,"core::num::nonzero"],[433,"fc_storage::overrides"],[434,"sqlx_sqlite"],[435,"sqlx_sqlite::query_result"]],"d":["Check given path, and see if there is an existing database …","","Use a custom already-open database.","Where to find the database..","","Load a ParityDb database from a given path.","Load a RocksDB database from a given path. Recommended for …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Return path for databases that are stored on disk.","Set path for databases that are stored on disk.","","","","","","","","","","","","","","","","","Cache size in MiB. Used only by <code>RocksDb</code> variant of …","Cache size in MiB.","the handle to the custom storage","Path to the paritydb database.","Path to the database.","Path to the database.","if set, the <code>create</code> flag will be required to open such …","Path to the rocksdb database.","Check given path, and see if there is an existing database …","","Use a custom already-open database.","","Database settings.","Where to find the database..","Hash type that this backend uses for the database.","","","","","Load a ParityDb database from a given path.","Load a RocksDB database from a given path. Recommended for …","","","","","","","","","","","","","","","","","","","","","","Commit the <code>transaction</code> to the database atomically. Any …","Check if the value exists in the database without …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Returns the frontier database directory.","Retrieve the value previously stored against <code>key</code> or <code>None</code> if","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Remove a possible path-prefix from the key.","Where to find the database.","","Check if database supports internal ref counting for state …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check value size in the database possibly without …","","","","","","","Call <code>f</code> with the value previously stored against <code>key</code>.","","","","","Cache size in MiB. Used only by <code>RocksDb</code> variant of …","Cache size in MiB.","the handle to the custom storage","Path to the paritydb database.","Path to the database.","Path to the database.","if set, the <code>create</code> flag will be required to open such …","Path to the rocksdb database.","","","Represents the backend configurations.","Represents the indexed status of a block and if it’s …","Represents a log item.","","Represents the Sqlite connection options that are used to …","","","","Retrieves the status if a block is indexed and if also …","","","","","","","","","","","","","Canonicalize the indexed blocks, marking/demarking them as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Retrieves the first missing canonical block number in …","Retrieves the first pending canonical block hash in …","Retrieve the block hash for the last indexed canon block.","Index the logs for the newly indexed blocks upto a …","","","","","","","Insert the block metadata for the provided block hashes.","Index the block metadata for the genesis block.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Retrieves the status if a block has been already indexed.","","","","Creates a new instance of the SQL backend.","","Get the underlying Sqlite pool.","Sets the provided block as canon.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,0,6,0,3,6,6,3,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,6,6,3,6,3,3,6,6,3,3,6,6,3,6,3,6,3,6,3,6,0,6,6,0,3,6,6,3,6,3,6,3,6,3,6,3,6,3,6,59,60,61,59,60,62,61,59,6,0,6,0,0,0,0,0,0,0,0,6,6,19,23,16,19,35,42,29,16,19,23,35,42,29,16,19,23,35,19,23,19,23,34,34,29,23,42,29,16,19,23,35,42,29,16,19,23,35,42,29,16,19,23,35,35,29,35,23,34,35,42,29,16,19,23,35,42,42,29,29,16,16,19,19,23,23,35,35,42,42,29,29,16,16,19,19,23,23,35,35,0,34,42,29,16,19,23,35,42,29,16,19,23,35,42,29,16,19,23,35,42,29,16,19,23,35,23,16,19,19,19,19,19,34,42,0,34,19,23,16,19,42,29,16,19,23,35,42,29,16,19,23,35,42,29,16,19,23,35,42,29,16,19,23,35,42,29,16,19,23,35,34,42,29,16,19,23,35,34,29,29,16,16,59,60,61,59,60,62,61,59,0,0,0,0,0,51,0,46,49,46,46,49,50,47,51,46,49,50,47,51,46,50,47,46,46,46,50,47,49,50,47,51,46,49,50,47,51,46,49,50,47,51,46,49,49,49,49,49,49,46,49,50,47,51,49,50,47,51,46,49,49,50,50,47,47,51,51,46,46,49,49,50,50,47,47,51,51,46,46,46,46,46,46,47,49,50,47,51,46,46,46,49,50,47,51,46,49,50,47,51,46,49,50,47,51,46,46,46,49,46,46,50,46,46,49,50,46,49,49,49,49,49,46,49,50,47,51,46,49,50,47,51,46,49,50,47,51,46,49,50,47,51,46,49,50,47,51,46,49,50,47,51,46],"f":[0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],[[3,[-1]]],[4,5]],[6,6],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[[6,8],[[10,[2,9]]]],[[6,8],[[10,[2,9]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,[[12,[11]]]],[[6,11],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[[16,[-1]],17],[[10,[[12,[18]],14]]],5],[[[19,[-1]],17],[[22,[[21,[20]]]]],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[-1]]],[4,5]],[[[23,[-1]]],[[23,[-1]]],4],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,[24,[-2]]],[[10,[2,25]]],[],[]],[[-1,26,[28,[27]]],13,[]],[[[29,[-1]]],[[10,[18,14]]],5],[[],[[23,[-1]]],30],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[7,2],[7,2],[7,2],[7,2],0,[[[29,[-1]]],[[10,[[12,[[18,[[2,[31,17]]]]]],14]]],5],0,[[[23,[-1]],32,32,[18,[33]],[18,[[18,[[12,[17]]]]]]],[[22,[[21,[20]]]]],5],[[34,8],[[10,[2,9]]]],[[[35,[-1]],8],36,[37,5]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[11,38],39],[[-1,26,[28,[27]]],[[12,[[18,[27]]]]],[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[-1]]],13,5],[[[16,[-1]]],[[10,[13,14]]],5],[[[19,[-1]]],40,5],[[[19,[-1]]],[[41,[[16,[-1]]]]],5],[[[19,[-1]]],[[41,[[29,[-1]]]]],5],[[[41,[-2]],42],[[10,[[19,[-1]],14]]],5,[[43,[-1]]]],[[[41,[-2]],6,11],[[10,[[19,[-1]],14]]],5,[[43,[-1]]]],[[-1,[18,[27]]],2,[]],0,0,[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1]],17],[[10,[[18,[[44,[-1]]]],14]]],5],[[[19,[-1]],17],[[22,[[21,[20]]]]],5],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,26,[28,[27]]],[[12,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,26,[28,[27]],45],2,[]],[[[29,[-1]],18],[[10,[2,14]]],5],[[[29,[-1]],[18,[[2,[31,17]]]]],[[10,[2,14]]],5],[[[16,[-1]],[35,[-1]]],[[10,[2,14]]],5],[[[16,[-1]]],[[10,[2,14]]],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,[[[46,[-1]],17],[[22,[[21,[20]]]]],5],[[[46,[-1]]],47,[5,5]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[46,[-1]],[28,[17]],[28,[17]]],[[10,[2,48]]],[5,5]],[[[46,[-1]]],[[46,[-1]]],[4,5]],[[-1,-2],2,[],[]],0,[[],47],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[7,2],[7,2],[7,2],[[49,49],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[46,[-1]],32,32,[18,[33]],[18,[[18,[[12,[17]]]]]]],[[22,[[21,[20]]]]],5],[[49,8],36],[[50,8],36],[[47,8],36],[[51,8],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[46,[-1]]],[[12,[26]]],[5,5]],[[[46,[-1]]],[[12,[17]]],[5,5]],[[[46,[-1]]],[[10,[17,48]]],[5,5]],[[[46,[-1]],[41,[-3]]],2,[5,5],[[52,[-1]]],[[53,[-1,-2]],[43,[-1]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[[46,[-1]],[41,[-3]],17],[[10,[2,48]]],[5,5],[[52,[-1]]],[[53,[-1,-2]],[43,[-1]]]],[[[46,[-1]],[41,[-3]]],[[10,[[12,[17]],48]]],[5,5],[[52,[-1]]],[[53,[-1,-2]],[43,[-1]],[54,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],13,[5,5]],[[[46,[-1]]],13,5],0,[[[46,[-1]]],40,5],[[51,26,[12,[55]],[41,[[56,[-1]]]]],[[10,[[46,[-1]],48]]],[5,5]],0,[[[46,[-1]]],57,[5,5]],[[[46,[-1]],17],[[10,[58,48]]],[5,5]],0,0,[-1,-2,[],[]],0,0,0,0,0,[[[46,[-1]],17],[[22,[[21,[20]]]]],5],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",407],[15,"tuple"],[4,"Backend",0],[8,"Clone",408],[8,"Block",409],[4,"DatabaseSource",0],[15,"usize"],[3,"Formatter",410],[3,"Error",410],[4,"Result",411],[3,"Path",412],[4,"Option",413],[15,"bool"],[3,"String",414],[3,"TypeId",415],[3,"MappingDb",71],[3,"H256",416],[3,"Vec",417],[3,"Backend",71],[8,"Future",418],[3,"Box",419],[3,"Pin",420],[3,"LogIndexerBackend",71],[3,"Transaction",421],[3,"DatabaseError",422],[15,"u32"],[15,"u8"],[15,"slice"],[3,"MetaDb",71],[8,"Default",423],[4,"EthereumStorageSchema",424],[15,"u64"],[3,"H160",416],[8,"Database",71],[3,"MappingCommitment",71],[6,"Result",410],[8,"Debug",410],[15,"str"],[3,"PathBuf",412],[8,"LogIndexerBackend",425],[3,"Arc",426],[3,"DatabaseSettings",71],[8,"HeaderBackend",427],[3,"TransactionMetadata",425],[8,"FnMut",428],[3,"Backend",255],[3,"BlockIndexedStatus",255],[4,"Error",429],[3,"Log",255],[3,"SqliteBackendConfig",255],[4,"BackendConfig",255],[8,"Backend",430],[8,"StorageProvider",430],[8,"ProvideRuntimeApi",431],[3,"NonZeroU32",432],[3,"OverrideHandle",433],[6,"SqlitePool",434],[3,"SqliteQueryResult",435],[13,"Auto",246],[13,"RocksDb",246],[13,"Custom",246],[13,"ParityDb",246]],"b":[[24,"impl-Display-for-DatabaseSource"],[25,"impl-Debug-for-DatabaseSource"]]},\
"fc_mapping_sync":{"doc":"","t":"DGNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMAALLLLLLLLLLLLLLDLLLLLFLLLLLLLLLLLFFFFLLLLLLNNNNNDDELLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMM","n":["EthereumBlockNotification","EthereumBlockNotificationSinks","Normal","Parachain","SyncStrategy","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","hash","init","init","into","into","into_mut","into_mut","into_ref","into_ref","is_new_best","kv","sql","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","MappingSyncWorker","borrow","borrow_mut","deref","deref_mut","drop","fetch_header","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","poll_next","sync_block","sync_blocks","sync_genesis_block","sync_one_block","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Canonicalize","CheckIndexedBlocks","IndexBestBlock","IndexLeaves","ResumeSync","SyncWorker","SyncWorkerConfig","WorkerCommand","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_indexed_blocks_interval","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","read_notification_timeout","run","spawn_worker","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","common","enacted","retracted"],"q":[[0,"fc_mapping_sync"],[70,"fc_mapping_sync::kv"],[98,"fc_mapping_sync::sql"],[171,"fc_mapping_sync::sql::WorkerCommand"],[174,"dyn_clone::sealed"],[175,"core::clone"],[176,"sp_runtime::traits"],[177,"core::cmp"],[178,"core::fmt"],[179,"core::fmt"],[180,"core::any"],[181,"fc_db::kv"],[182,"core::option"],[183,"alloc::string"],[184,"sp_blockchain::backend"],[185,"sc_client_api::client"],[186,"core::time"],[187,"alloc::sync"],[188,"fc_storage::overrides"],[189,"sp_consensus"],[190,"core::pin"],[191,"core::task::wake"],[192,"core::task::poll"],[193,"sc_client_api::backend"],[194,"sp_api"],[195,"sc_client_api::backend"],[196,"tokio::sync::mpsc::bounded"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Canonicalize the enacted and retracted blocks reported via …","Verify indexed blocks’ consistency. Check for any canon …","Index the best block known so far via import notifications.","Index leaves.","Resume indexing from the last indexed canon block.","Implements an indexer that imports blocks and their …","Config parameters for the SyncWorker.","Defines the commands for the sync worker.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Start the worker.","Spawn the indexing worker. The worker can be given …","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,3,3,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,3,3,3,4,4,4,4,4,4,3,4,3,3,4,4,3,3,4,4,4,3,4,3,4,3,4,3,4,4,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,0,25,25,25,25,25,0,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,25,25,25,25,25,25,32,32,32,32,32,0,0,0,34,36,32,34,36,32,34,34,36,32,34,36,32,34,36,32,32,34,36,32,34,34,36,36,32,32,34,34,36,36,32,32,34,36,32,34,36,32,34,36,32,34,36,32,34,36,36,34,36,32,34,36,32,34,36,32,34,36,32,34,36,32,34,36,32,37,37,37],"f":[0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[[[4,[-1]]],[[4,[-1]]],[5,6]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[[3,3],8],[[[4,[-1]],[4,[-1]]],8,[9,6]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[[4,[-1]],10],11,[12,6]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,2],[[-2,[15,[-1]]],[[13,[16,17]]],6,[[18,[-1]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]],20,[21,[-2]],[21,[-3]],[21,[[22,[-1]]]],[21,[[15,[-1]]]],7,3,[21,[23]],[21,[[24,[[4,[-1]]]]]]],[[25,[-1,-2,-3]]],6,[],[]],[[[26,[[25,[-1,-3,-2]]]],27],[[28,[[16,[2]]]]],6,[[29,[-1]]],[[30,[-1]],[18,[-1]],[31,[-1,-2]]]],[[-3,[21,[[22,[-1]]]],[15,[-1]]],[[13,[2,17]]],6,[[29,[-1]]],[[18,[-1]],[31,[-1,-2]]]],[[-3,-2,[21,[[22,[-1]]]],[15,[-1]],7,3,[21,[23]],[21,[[24,[[4,[-1]]]]]]],[[13,[8,17]]],6,[[29,[-1]]],[[30,[-1]],[18,[-1]],[31,[-1,-2]]]],[[-2,[15,[-1]]],[[13,[2,17]]],6,[[30,[-1]]]],[[-3,-2,[21,[[22,[-1]]]],[15,[-1]],3,[21,[23]],[21,[[24,[[4,[-1]]]]]]],[[13,[8,17]]],6,[[29,[-1]]],[[30,[-1]],[18,[-1]],[31,[-1,-2]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[7,2],[[32,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[21,[-3]],[21,[-2]],[21,[[33,[-1]]]],[19,[-1]],34,3,[21,[23]],[21,[[24,[[4,[-1]]]]]]],2,[6,6],[[29,[-1]]],[[30,[-1]],[18,[-1]],[31,[-1,-2]]]],[[[21,[-3]],[21,[-2]],[21,[[33,[-1]]]],[21,[[24,[[4,[-1]]]]]]],[[35,[32]]],[6,6],[[29,[-1]]],[[30,[-1]],[18,[-1]],[31,[-1,-2]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0],"c":[],"p":[[3,"Private",174],[15,"tuple"],[4,"SyncStrategy",0],[3,"EthereumBlockNotification",0],[8,"Clone",175],[8,"Block",176],[15,"usize"],[15,"bool"],[8,"PartialEq",177],[3,"Formatter",178],[6,"Result",178],[8,"Debug",178],[4,"Result",179],[3,"TypeId",180],[3,"Backend",181],[4,"Option",182],[3,"String",183],[8,"HeaderBackend",184],[6,"ImportNotifications",185],[3,"Duration",186],[3,"Arc",187],[3,"OverrideHandle",188],[8,"SyncOracle",189],[6,"EthereumBlockNotificationSinks",0],[3,"MappingSyncWorker",70],[3,"Pin",190],[3,"Context",191],[4,"Poll",192],[8,"Backend",193],[8,"ProvideRuntimeApi",194],[8,"StorageProvider",193],[4,"WorkerCommand",98],[3,"Backend",195],[3,"SyncWorkerConfig",98],[3,"Sender",196],[3,"SyncWorker",98],[13,"Canonicalize",171]],"b":[]},\
"fc_rpc":{"doc":"","t":"DINNIQDIDIDDIDIIDDENDIDDQDDDIDIDILLLKLLLLKKLLLKKLLKLKLLLLLKLLKLLLLLLKLLKLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLLLLLLKLLKLKLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLFKLLMKLLLKLKLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKLLLKLLLLLLLLLLLLLLLLLLLLKLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLKLLKLKLLLLLLLLLLLLLLLKLKLKLLKLAKLLFKLKLKLKLLMKLLKLLLKLKLLKLKKLLLLLLKLLKLLKLKLLLLLLKLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLDLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFFFLLLLLLLLLLLLLLLLDILLKLLLLLLLLLLLLLLLLLLLLLLLL","n":["Debug","DebugApiServer","EIP1559","EIP2930","EstimateGasAdapter","EstimateGasAdapter","Eth","EthApiServer","EthBlockDataCacheTask","EthConfig","EthDevSigner","EthFilter","EthFilterApiServer","EthPubSub","EthPubSubApiServer","EthSigner","EthTask","EthereumSubIdProvider","EthereumTransaction","Legacy","Net","NetApiServer","OverrideHandle","RuntimeApiStorageOverride","RuntimeStorageOverride","SchemaV1Override","SchemaV2Override","SchemaV3Override","StorageOverride","TxPool","TxPoolApiServer","Web3","Web3ApiServer","__clone_box","__clone_box","__clone_box","account_code_at","account_code_at","account_code_at","account_code_at","account_code_at","accounts","accounts","accounts","accounts","accounts","adapt_request","author","author","author","bad_blocks","bad_blocks","balance","balance","balance","blake2_128","blake2_128_concat","blake2_256","block_by_hash","block_by_hash","block_by_hash","block_by_number","block_by_number","block_by_number","block_info_by_eth_block_hash","block_info_by_eth_transaction_hash","block_info_by_number","block_info_by_substrate_hash","block_number","block_number","block_number","block_transaction_count_by_hash","block_transaction_count_by_hash","block_transaction_count_by_hash","block_transaction_count_by_number","block_transaction_count_by_number","block_transaction_count_by_number","block_transaction_receipts","block_transaction_receipts","block_transaction_receipts","block_uncles_count_by_hash","block_uncles_count_by_hash","block_uncles_count_by_hash","block_uncles_count_by_number","block_uncles_count_by_number","block_uncles_count_by_number","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","chain_id","chain_id","chain_id","client_version","client_version","clone","clone","clone","clone_into","clone_into","clone_into","code_at","code_at","code_at","content","content","current_block","current_block","current_block","current_block","current_block","current_block","current_receipts","current_receipts","current_receipts","current_receipts","current_receipts","current_transaction_statuses","current_transaction_statuses","current_transaction_statuses","current_transaction_statuses","current_transaction_statuses","current_transaction_statuses","decode","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elasticity","elasticity","elasticity","elasticity","elasticity","encode_payload","encode_to","eq","equivalent","equivalent","equivalent","equivalent","equivalent","err","estimate_gas","estimate_gas","estimate_gas","fallback","fee_history","fee_history","fee_history","fee_history_task","filter_changes","filter_changes","filter_logs","filter_logs","filter_pool_task","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frontier_backend_client","gas_price","gas_price","gas_price","hash","hashrate","hashrate","hashrate","identity","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inspect","inspect","internal_err","internal_err_with_data","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","is_eip1559","is_eip1559","is_eip1559","is_eip1559","is_eip1559","is_listening","is_listening","is_mining","is_mining","is_mining","logs","logs","max_priority_fee_per_gas","max_priority_fee_per_gas","max_priority_fee_per_gas","new","new","new","new","new","new","new","new","new","new","new","new","new","new_block_filter","new_block_filter","new_filter","new_filter","new_pending_transaction_filter","new_pending_transaction_filter","next_id","peer_count","peer_count","pending","protocol_version","protocol_version","protocol_version","public_key","raw_block","raw_block","raw_header","raw_header","raw_receipts","raw_receipts","raw_transaction","raw_transaction","replace_config","schemas","send_raw_transaction","send_raw_transaction","send_raw_transaction","send_transaction","send_transaction","send_transaction","serialize","sha3","sha3","sign","sign","size_hint","status","status","storage_at","storage_at","storage_at","storage_at","storage_at","storage_at","storage_at","storage_at","submit_hashrate","submit_hashrate","submit_hashrate","submit_work","submit_work","submit_work","subscribe","subscribe","syncing","syncing","syncing","to_keyed_vec","to_owned","to_owned","to_owned","transaction_by_block_hash_and_index","transaction_by_block_hash_and_index","transaction_by_block_hash_and_index","transaction_by_block_number_and_index","transaction_by_block_number_and_index","transaction_by_block_number_and_index","transaction_by_hash","transaction_by_hash","transaction_by_hash","transaction_count","transaction_count","transaction_count","transaction_receipt","transaction_receipt","transaction_receipt","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","uncle_by_block_hash_and_index","uncle_by_block_hash_and_index","uncle_by_block_hash_and_index","uncle_by_block_number_and_index","uncle_by_block_number_and_index","uncle_by_block_number_and_index","uninstall_filter","uninstall_filter","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","work","work","work","Geth","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","pool_error","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","SystemAccountId20StorageOverride","SystemAccountId32StorageOverride","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_account_id_bytes","into_account_id_bytes","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_canon","is_enabled","is_enabled","load_hash","load_transactions","native_block_id","set_overlayed_changes","set_overlayed_changes","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","AuraConsensusDataProvider","ConsensusDataProvider","borrow","borrow_mut","create_digest","create_digest","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"fc_rpc"],[710,"fc_rpc::format"],[736,"fc_rpc::frontier_backend_client"],[796,"fc_rpc::pending"],[825,"dyn_clone::sealed"],[826,"primitive_types"],[827,"alloc::vec"],[828,"core::option"],[829,"sp_runtime::traits"],[830,"sc_client_api::backend"],[831,"sp_blockchain::backend"],[832,"sc_client_api::backend"],[833,"core::marker"],[834,"core::marker"],[835,"core::result"],[836,"jsonrpsee_core"],[837,"sc_transaction_pool::graph::pool"],[838,"sp_api"],[839,"fp_rpc"],[840,"sp_inherents::client_side"],[841,"fc_rpc_core::types::call_request"],[842,"fc_rpc_core::types::block_number"],[843,"core::future::future"],[844,"alloc::boxed"],[845,"core::pin"],[846,"primitive_types"],[847,"fc_rpc_core::types::receipt"],[848,"fc_rpc_core::types::call_request"],[849,"fc_rpc_core::types::bytes"],[850,"ethereum_types::uint"],[851,"alloc::string"],[852,"fc_rpc_core::types::transaction"],[853,"std::collections::hash::map"],[854,"fc_rpc_core::types::txpool"],[855,"fc_rpc_core::types::txpool"],[856,"fp_storage"],[857,"ethereum::block"],[858,"fp_rpc"],[859,"parity_scale_codec::error"],[860,"parity_scale_codec::codec"],[861,"serde::de"],[862,"sp_arithmetic::per_things"],[863,"bytes::bytes_mut"],[864,"parity_scale_codec::codec"],[865,"alloc::sync"],[866,"fc_rpc_core::types::fee"],[867,"fc_rpc_core::types::index"],[868,"fc_rpc_core::types::filter"],[869,"std::sync::mutex"],[870,"core::fmt"],[871,"core::fmt"],[872,"ethereum::transaction"],[873,"alloc::rc"],[874,"jsonrpsee_core::server::rpc_module"],[875,"sc_network_common"],[876,"fc_rpc_core::types::filter"],[877,"prometheus::registry"],[878,"fc_api::backend"],[879,"sc_transaction_pool::graph::pool"],[880,"fc_rpc_core::types::fee"],[881,"fc_mapping_sync"],[882,"fc_mapping_sync"],[883,"jsonrpsee_types::params"],[884,"fc_rpc_core::types::sync"],[885,"sp_io"],[886,"fc_rpc_core::types::transaction_request"],[887,"serde::ser"],[888,"fc_rpc_core::types::transaction_request"],[889,"jsonrpsee_core::server::subscription"],[890,"fc_rpc_core::types::pubsub"],[891,"fc_rpc_core::types::pubsub"],[892,"fc_rpc_core::types::block"],[893,"sc_transaction_pool_api::error"],[894,"sp_runtime::generic::block"],[895,"sp_runtime::traits"],[896,"sp_inherents"],[897,"sp_runtime::generic::digest"],[898,"sp_inherents"]],"d":["Debug API implementation.","Server trait implementation for the <code>DebugApi</code> RPC API.","EIP-1559 transaction","EIP-2930 transaction","Allow to adapt a request for <code>estimate_gas</code>. Can be used to …","","Eth API implementation.","Server trait implementation for the <code>EthApi</code> RPC API.","Manage LRU caches for block data and their transaction …","","","","Server trait implementation for the <code>EthFilterApi</code> RPC API.","Eth pub-sub API implementation.","Server trait implementation for the <code>EthPubSubApi</code> RPC API.","A generic Ethereum signer.","","","","Legacy transaction type","Net API implementation.","Server trait implementation for the <code>NetApi</code> RPC API.","","A wrapper type for the Runtime API. This type implements …","","An override for runtimes that use Schema V1","An override for runtimes that use Schema V2","An override for runtimes that use Schema V3","Something that can fetch Ethereum-related data. This trait …","","Server trait implementation for the <code>TxPoolApi</code> RPC API.","Web3 API implementation.","Server trait implementation for the <code>Web3Api</code> RPC API.","","","","For a given account address, returns …","For a given account address, returns …","For a given account address, returns …","For a given account address, returns …","For a given account address, returns …","Available accounts from this signer.","Returns accounts list.","","","","","Returns block author.","","","Returns an array of recent bad blocks that the client has …","","Returns balance of the given account.","","","","","","Returns block with given hash.","","","Returns block with given number.","","","","","","","Returns highest block number.","","","Returns the number of transactions in a block with given …","","","Returns the number of transactions in a block with given …","","","Returns the receipts of a block by number or hash.","","","Returns the number of uncles in a block with given hash.","","","Returns the number of uncles in a block with given block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call contract, returning the output data.","","","Returns the chain ID used for transaction signing at the …","","","Returns current client version.","","","","","","","","Returns the code at given address at given time (block …","","","The content inspection property can be queried to list the …","","Return the current block.","Return the current block.","Cache for <code>handler.current_block</code>.","Return the current block.","Return the current block.","Return the current block.","Return the current receipt.","Return the current receipt.","Return the current receipt.","Return the current receipt.","Return the current receipt.","Return the current transaction status.","Return the current transaction status.","Cache for <code>handler.current_transaction_statuses</code>.","Return the current transaction status.","Return the current transaction status.","Return the current transaction status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the base fee at the given height.","Prior to eip-1559 there is no elasticity.","Return the elasticity at the given height.","Return the elasticity at the given height.","Return the elasticity multiplier at the give post-eip1559 …","","","","","","","","","","Estimate gas needed for execution of given contract.","","","","Introduced in EIP-1159 for getting information on the …","","","","Returns filter changes since last poll.","","Returns all logs matching given filter (in a range ‘from…","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Returns current gas_price.","","","","Returns the number of hashes per second that the node is …","","","","","","","","","","","","","","","","","","","","","The inspect inspection property can be queried to list a …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Return <code>true</code> if the request BlockId is post-eip1559.","","","","","Returns true if client is actively listening for network …","","Returns true if client is actively mining new blocks.","","","Returns logs matching given filter object.","","Introduced in EIP-1159, a Geth-specific and simplified …","","","","","","","","","","","","","","","","Returns id of new block filter.","","Returns id of new filter.","","Returns id of new block filter.","","","Returns number of peers connected to node.","","","Returns protocol version encoded as a string (quotes are …","","","","Returns an RLP-encoded block with the given number or hash.","","Returns an RLP-encoded header with the given number or …","","Returns an array of EIP-2718 binary-encoded receipts with …","","Returns a EIP-2718 binary-encoded transaction with the …","","","","Sends signed transaction, returning its hash.","","","Sends transaction; will block waiting for signer to return …","","","","Returns sha3 of the given data","","Sign a transaction message using the given account in …","","","The status inspection property can be queried for the …","","For a given account address and index, returns …","Returns content of the storage at given address.","For a given account address and index, returns …","For a given account address and index, returns …","For a given account address and index, returns …","For a given account address and index, returns …","","","Used for submitting mining hashrate.","","","Used for submitting a proof-of-work solution.","","","Subscribe to Eth subscription.","","Returns an object with data about the sync status or …","","","","","","","Returns transaction at given block hash and index.","","","Returns transaction by given block number and index.","","","Get transaction by its hash.","","","Returns the number of transactions sent from given address …","","","Returns transaction receipt by transaction hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an uncles at given block and index.","","","Returns an uncles at given block and index.","","","Uninstalls filter.","","","","","","","","","","","","","","","","","","","Returns protocol version.","","","","","","","","","","","","","","","","","","","Returns the hash of the current block, the seedHash, and …","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Implements a default runtime storage override. It assumes …","Implements a runtime storage override. It assumes that the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus data provider for Aura.","Consensus data provider, pending api uses this trait …","","","Attempt to create a consensus digest.","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Creates a new instance of the <code>AuraConsensusDataProvider</code>, …","","","","","","",""],"i":[0,0,50,50,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,27,0,0,0,0,0,0,0,0,48,49,50,138,7,12,13,14,104,139,20,20,28,140,139,20,20,141,31,139,20,20,50,50,50,139,20,20,139,20,20,20,20,20,20,139,20,20,139,20,20,139,20,20,139,20,20,139,20,20,139,20,20,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,139,20,20,139,20,20,143,47,48,49,50,48,49,50,139,20,20,144,49,138,7,56,12,13,14,138,7,12,13,14,138,7,56,12,13,14,50,50,50,50,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,138,7,12,13,14,50,50,50,50,50,50,50,50,0,139,20,20,77,139,20,20,142,145,82,145,82,142,85,50,0,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,50,50,7,7,56,56,142,142,12,12,31,31,13,13,77,77,14,14,82,82,20,20,48,48,95,95,28,28,49,49,47,47,85,85,50,50,7,7,56,56,142,142,12,12,31,31,13,13,77,77,14,14,82,82,20,20,48,48,95,95,28,28,49,49,47,47,85,85,50,50,0,139,20,20,50,139,20,20,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,144,49,0,0,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,141,139,145,146,147,144,143,138,7,12,13,14,147,95,139,20,20,145,82,139,20,20,7,56,12,31,13,14,82,20,48,95,28,49,47,145,82,145,82,145,82,85,147,95,0,139,20,20,0,141,31,141,31,141,31,141,31,20,77,139,20,20,139,20,20,50,143,47,104,28,50,144,49,138,139,7,12,13,14,20,20,139,20,20,139,20,20,146,48,139,20,20,50,48,49,50,139,20,20,139,20,20,139,20,20,139,20,20,139,20,20,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,50,50,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,50,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,139,20,20,139,20,20,145,82,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,147,95,7,56,142,12,31,13,77,14,82,20,48,95,28,49,47,85,50,139,20,20,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,0,0,149,150,149,150,149,150,149,150,149,150,149,150,149,149,150,150,149,149,150,150,149,150,149,150,149,150,149,150,149,150,149,150,149,150,149,150,0,149,150,0,0,0,149,150,149,150,149,150,149,150,149,150,149,150,149,150,149,150,0,0,135,135,106,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],[[6,[[5,[4]]]]],[]],[[[7,[-1,-3,-2]],3],[[6,[[5,[4]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[12,[-1,-3,-2]],3],[[6,[[5,[4]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[13,[-1,-3,-2]],3],[[6,[[5,[4]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[14,[-1,-2]],3],[[6,[[5,[4]]]]],8,[[15,[-1]],16,17]],[-1,[[5,[3]]],[]],[-1,[[19,[[5,[3]],18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[[5,[3]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[[5,[3]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[28,[[5,[3]]]],[29,29],[-1,[[19,[3,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[3]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[3]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[-1,30],[[19,[[5,[2]],18]]],[]],[[[31,[-1,-3,-2]],30],[[21,[[5,[2]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]]],[[-1,3,[6,[30]]],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],3,[6,[30]]],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[],22,[[26,[-1,2]],16],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],3,[6,[30]]],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[-1,[[36,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[36,[4]]],[]],[[-1,37,38],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37,38],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37,38],[[21,[[6,[39]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[-1,30,38],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30,38],[[21,[[6,[39]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30,38],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[21,[0]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[21,[[2,[0,40]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30],[[21,[0]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[0]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[-1,[[19,[35,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[35]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,37],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[21,[[6,[35]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,30],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30],[[21,[[6,[35]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,30],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30],[[21,[[6,[[5,[41]]]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,37],[[19,[35,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[21,[35]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,30],[[19,[35,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30],[[21,[35]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,29,[6,[30]],[6,[[43,[3,42]]]]],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],29,[6,[30]],[6,[[43,[3,42]]]]],[[21,[44]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],29,[6,[30]],[6,[[43,[3,42]]]]],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[-1,[[19,[[6,[45]],18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[[6,[45]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[[6,[45]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[-1,[[19,[46,18]]],[]],[[[47,[-1,-2]]],[[21,[46]]],8,[[15,[-1]],[10,[-1]]]],[[[48,[-1,-2,-3,-4]]],[[48,[-1,-2,-3,-4]]],8,[],[],[]],[[[49,[-1,-2,-3]]],[[49,[-1,-2,-3]]],[],[],22],[50,50],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,3,[6,[30]]],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],3,[6,[30]]],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],3,[6,[30]]],[[21,[44]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[],22,[[26,[-1,2]],16],[]],[-1,[[19,[[53,[[52,[3,[52,[35,51]]]]]],18]]],[]],[[[49,[-1,-2,-3]]],[[21,[[53,[[54,[51]]]]]]],8,[[15,[-1]],[10,[-1]]],22],[-1,[[6,[[55,[50]]]]],[]],[[[7,[-1,-3,-2]]],[[6,[[55,[50]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[56,[-1]],57],[[6,[58]]],8],[[[12,[-1,-3,-2]]],[[6,[[55,[50]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[13,[-1,-3,-2]]],[[6,[[55,[50]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[14,[-1,-2]]],[[6,[[55,[50]]]]],8,[[15,[-1]],16,17]],[-1,[[6,[[5,[59]]]]],[]],[[[7,[-1,-3,-2]]],[[6,[[5,[59]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[12,[-1,-3,-2]]],[[6,[[5,[59]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[13,[-1,-3,-2]]],[[6,[[5,[59]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[14,[-1,-2]]],[[6,[[5,[59]]]]],8,[[15,[-1]],16,17]],[-1,[[6,[[5,[60]]]]],[]],[[[7,[-1,-3,-2]]],[[6,[[5,[60]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[56,[-1]],57],[[6,[[5,[60]]]]],8],[[[12,[-1,-3,-2]]],[[6,[[5,[60]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[13,[-1,-3,-2]]],[[6,[[5,[60]]]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[14,[-1,-2]]],[[6,[[5,[60]]]]],8,[[15,[-1]],16,17]],[[[61,[4]]],[[19,[50,62]]]],[-1,[[19,[50,63]]],64],[[[61,[4]]],[[19,[-1,63]]],[]],[[65,[61,[4]]],[[19,[-1,63]]],[]],[[65,-1],[[19,[-2,63]]],64,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[-1,[[19,[50]]],66],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[40,2],[-1,[[6,[67]]],[]],[[[7,[-1,-3,-2]]],[[6,[67]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[12,[-1,-3,-2]]],[[6,[67]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[13,[-1,-3,-2]]],[[6,[67]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[14,[-1,-2]]],[[6,[67]]],8,[[15,[-1]],16,17]],[50,68],[[50,-1],2,[69,70]],[[50,50],38],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[71,-1,[6,[[61,[4]]]]],72,73],[[-1,29,[6,[30]]],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],29,[6,[30]]],[[21,[35]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],29,[6,[30]]],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],0,[[-1,35,30,[6,[[5,[74]]]]],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],35,30,[6,[[5,[74]]]]],[[21,[75]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],35,30,[6,[[5,[74]]]]],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[76,[-3]],[76,[[77,[-1]]]],78,79],2,8,[[9,[-1]]],[[15,[-1]],[80,[-1]],[10,[-1]],[11,[-1,-2]]]],[[-1,81],[[34,[[33,[32]]]]],[]],[[[82,[-1,-3,-2,-4]],81],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],22],[[-1,81],[[34,[[33,[32]]]]],[]],[[[82,[-1,-3,-2,-4]],81],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],22],[[[76,[-3]],[76,[[84,[[43,[35,83]]]]]],79],2,8,[[9,[-1]]],[[15,[-1]],[80,[-1]],[10,[-1]],[11,[-1,-2]]]],[[85,86],87],[[50,86],[[19,[2,88]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[89,50],[90,50],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],0,[-1,[[19,[35,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[35]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[50,37],[-1,[[19,[35,18]]],[]],[[[20,[-1,-2,-3,-4,-5,-6,-7,-8]]],[[21,[35]]],8,[],[],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[35]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[-1,[[5,[4]]],[]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[-1,[[19,[[53,[[52,[3,[52,[35,91]]]]]],18]]],[]],[[[49,[-1,-2,-3]]],[[21,[[53,[[54,[91]]]]]]],8,[[15,[-1]],[10,[-1]]],22],[-1,72,73],[[-1,[61,[4]]],72,73],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[94,[-1]]],[]],[-1,[[94,[-1]]],[]],[-1,[[94,[-1]]],[]],[-1,[[94,[-1]]],[]],[-1,[[94,[-1]]],[]],[-1,[[94,[-1]]],[]],[-1,[[94,[-1]]],[]],[-1,38,[]],[[[7,[-1,-3,-2]]],38,8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[12,[-1,-3,-2]]],38,8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[13,[-1,-3,-2]]],38,8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[14,[-1,-2]]],38,8,[[15,[-1]],16,17]],[-1,[[19,[38,18]]],[]],[[[95,[-1,-2,-3]]],[[21,[38]]],8,[[15,[-1]],[10,[-1]]],96],[-1,[[19,[38,18]]],[]],[[[20,[-1,-2,-3,-4,-5,-6,-7,-8]]],[[21,[38]]],8,[],[],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[38]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,97],[[34,[[33,[32]]]]],[]],[[[82,[-1,-3,-2,-4]],97],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],22],[-1,[[19,[35,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[35]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[76,[-1]]],[[7,[-2,-1,-3]]],[],8,[]],[[98,[76,[[77,[-1]]]],40,40,[6,[99]]],[[56,[-1]]],8],[[[76,[-1]]],[[12,[-2,-1,-3]]],[],8,[]],[[[76,[-1]],[76,[100]],[76,[[77,[-2]]]],[76,[[56,[-2]]]]],[[31,[-2,-1,-3]]],[],8,[]],[[[76,[-1]]],[[13,[-2,-1,-3]]],[],8,[]],[[[76,[-1]]],[[14,[-2,-1]]],[],8],[[[76,[-1]],[76,[100]],[76,[[101,[-2]]]],102,40,65,[76,[[56,[-3]]]]],[[82,[-3,-1,-4,-2]]],[],22,8,[]],[[[76,[-3]],[76,[-4]],[76,[[101,[-5]]]],[6,[-6]],[76,[[103,[-1]]]],[5,[[33,[104]]]],[76,[[77,[-1]]]],[76,[100]],38,[76,[[56,[-1]]]],78,105,79,[6,[[43,[37,37]]]],-7,[6,[[33,[106]]]]],[[20,[-1,-3,-4,-6,-2,-5,-7,-8]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],22,[],[],[]],[[[76,[-1]],[76,[-4]],[76,[[103,[-2]]]],107,[76,[[77,[-2]]]],[76,[[109,[[108,[-2]]]]]]],[[48,[-2,-1,-4,-3]]],24,8,[[9,[-2]]],[[15,[-2]],[10,[-2]],[11,[-2,-3]]]],[[[76,[-1]],[76,[[110,[-2,-3]]]],38],[[95,[-2,-1,-3]]],[],8,96],[[],28],[[[76,[-1]],[76,[[101,[-2]]]]],[[49,[-3,-1,-2]]],[],22,[]],[[[76,[-1]]],[[47,[-2,-1]]],[],[]],[-1,[[19,[35,18]]],[]],[[[82,[-1,-3,-2,-4]]],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],22],[[-1,97],[[19,[35,18]]],[]],[[[82,[-1,-3,-2,-4]],97],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],22],[-1,[[19,[35,18]]],[]],[[[82,[-1,-3,-2,-4]]],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],22],[85,111],[-1,[[19,[112,18]]],[]],[[[95,[-1,-2,-3]]],[[21,[112]]],8,[[15,[-1]],[10,[-1]]],96],0,[-1,[[19,[79,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[79]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[79]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[50,[[19,[[36,[4]],113]]]],[[-1,30],[[34,[[33,[32]]]]],[]],[[[31,[-1,-3,-2]],30],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]]],[[-1,30],[[34,[[33,[32]]]]],[]],[[[31,[-1,-3,-2]],30],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]]],[[-1,30],[[34,[[33,[32]]]]],[]],[[[31,[-1,-3,-2]],30],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]]],[[-1,37],[[34,[[33,[32]]]]],[]],[[[31,[-1,-3,-2]],37],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]]],[[[20,[-1,-2,-3,-4,-5,-6,-7,-8]]],[[20,[-1,-2,-3,-4,-5,-6,-7,-9]]],8,[],[],[],[],22,[],[[27,[-1,-2]]],[[27,[-1,-2]]]],0,[[-1,44],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],44],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],44],[[21,[37]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,25,22,[[26,[-1,2]],16],[]],[[-1,114],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],114],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],114],[[21,[37]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,25,22,[[26,[-1,2]],16],[]],[[50,-1],19,115],[[-1,44],[[19,[37,18]]],[]],[[[47,[-1,-2]],44],[[21,[37]]],8,[[15,[-1]],[10,[-1]]]],[[-1,116,3],[[19,[50,72]]],[]],[[28,116,3],[[19,[50,72]]]],[50,40],[-1,[[19,[[53,[35]],18]]],[]],[[[49,[-1,-2,-3]]],[[21,[[53,[35]]]]],8,[[15,[-1]],[10,[-1]]],22],[[-1,3,35],[[6,[37]]],[]],[[-1,3,35,[6,[30]]],[[34,[[33,[32]]]]],[]],[[[7,[-1,-3,-2]],3,35],[[6,[37]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[12,[-1,-3,-2]],3,35],[[6,[37]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[13,[-1,-3,-2]],3,35],[[6,[37]]],8,[[9,[-1]]],[[10,[-1]],[11,[-1,-2]]]],[[[14,[-1,-2]],3,35],[[6,[37]]],8,[[15,[-1]],16,17]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],3,35,[6,[30]]],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],3,35,[6,[30]]],[[21,[37]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[],22,[[26,[-1,2]],16],[]],[[-1,35,37],[[19,[38,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],35,37],[[21,[38]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-2,-3,-4,-5,-6,-7,-8]],35,37],[[21,[38]]],8,[],[],[],[],22,[],[]],[[-1,117,37,37],[[19,[38,18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],117,37,37],[[21,[38]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-2,-3,-4,-5,-6,-7,-8]],117,37,37],[[21,[38]]],8,[],[],[],[],22,[],[]],[[-1,118,119,[6,[120]]],2,[]],[[[48,[-1,-2,-4,-3]],118,119,[6,[120]]],2,8,24,[[9,[-1]]],[[15,[-1]],[80,[-1]],[10,[-1]],[11,[-1,-3]]]],[-1,[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[121]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,[61,[4]]],[[5,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,37,81],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37,81],[[21,[[6,[51]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37,81],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,30,81],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30,81],[[21,[[6,[51]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30,81],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,37],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[21,[[6,[51]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,3,[6,[30]]],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],3,[6,[30]]],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],3,[6,[30]]],[[21,[35]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[],22,[[26,[-1,2]],16],[]],[[-1,37],[[34,[[33,[32]]]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37],[[34,[[33,[32]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[36,[4]]],[]],[-1,[[36,[4]]],[]],[-1,[[5,[4]]],[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[-1,122,[]],[50,[[6,[4]]]],[[],123],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,124,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,37,81],[[19,[[6,[[126,[125]]]],18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37,81],[[21,[[6,[39]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],37,81],[[21,[[6,[39]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[-1,30,81],[[19,[[6,[[126,[125]]]],18]]],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30,81],[[21,[[6,[39]]]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]],30,81],[[21,[[6,[39]]]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],[[-1,81],[[19,[38,18]]],[]],[[[82,[-1,-3,-2,-4]],81],[[21,[38]]],8,[[9,[-1]]],[[15,[-1]],[10,[-1]],[11,[-1,-2]]],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[46,18]]],[]],[[[95,[-1,-2,-3]]],[[21,[46]]],8,[[15,[-1]],[10,[-1]]],96],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[127,18]]],[]],[[[20,[-1,-2,-3,-4,-5,-6,-7,-8]]],[[21,[127]]],8,[],[],[],[],22,[],[]],[[[20,[-1,-3,-4,-5,-2,-6,-7,-8]]],[[21,[127]]],8,[[9,[-1]]],[[23,[-1]],[15,[-1]],[10,[-1]],[11,[-1,-2]]],24,[25,16,17],22,[[26,[-1,2]],16],[[27,[-1,-3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[40,-1,[]],[40,-1,[]],[40,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],40],[-1,-2,[],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,46,128],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,122,[]],[-1,124,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,-1,[]],[40,2],[40,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],40],[[],40],[-1,-2,[],[]],[-1,-2,[],[]],[3,[[5,[4]]]],[3,[[5,[4]]]],[[[33,[-1]]],[[33,[92]]],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-2,38,8,[[10,[-1]]]],[[],38],[[],38],[[-2,100,37],[[21,[6]]],8,[[10,[-1]]]],[[-2,100,37,38],[[21,[[6,[[2,[37,65]]]]]]],8,[[10,[-1]]]],[[-2,100,[6,[30]]],[[21,[[6,[[129,[-1]]]]]]],8,[[10,[-1]]]],[[-3,[131,[[130,[-1]]]],65,3,[6,[35]],[6,[35]]],2,8,[[9,[-1]]],[[11,[-1,-2]],16,17]],[[-3,[131,[[130,[-1]]]],65,3,[6,[35]],[6,[35]]],2,8,[[9,[-1]]],[[11,[-1,-2]],16,17]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,122,[]],[-1,122,[]],[-1,124,[]],[-1,124,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,132],[[19,[133,134]]],[]],[[[135,[-1,-2]],132],[[19,[133,134]]],8,[16,17]],[40,-1,[]],[40,-1,[]],[40,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],40],[-1,-2,[],[]],[[[33,[-1]]],[[33,[92]]],[]],[[[76,[-1]]],[[76,[92]]],[]],[[[93,[-1]]],[[93,[92]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-2]]],[[135,[-1,-2]]],8,[136,[15,[-1]],[137,[-1]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,122,[]],[-1,124,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",825],[15,"tuple"],[3,"H160",826],[15,"u8"],[3,"Vec",827],[4,"Option",828],[3,"SchemaV1Override",0],[8,"Block",829],[8,"Backend",830],[8,"HeaderBackend",831],[8,"StorageProvider",830],[3,"SchemaV2Override",0],[3,"SchemaV3Override",0],[3,"RuntimeApiStorageOverride",0],[8,"ProvideRuntimeApi",832],[8,"Send",833],[8,"Sync",833],[3,"ErrorObject",834],[4,"Result",835],[3,"Eth",0],[6,"RpcResult",836],[8,"ChainApi",837],[8,"CallApiAt",832],[8,"TransactionPool",838],[8,"ConvertTransaction",839],[8,"CreateInherentDataProviders",840],[8,"EthConfig",0],[3,"EthDevSigner",0],[3,"CallRequest",841],[4,"BlockNumberOrHash",842],[3,"Debug",0],[8,"Future",843],[3,"Box",844],[3,"Pin",845],[3,"U256",826],[15,"array"],[3,"H256",826],[15,"bool"],[6,"RichBlock",846],[15,"usize"],[3,"Receipt",847],[3,"CallStateOverride",841],[3,"BTreeMap",848],[3,"Bytes",849],[3,"U64",850],[3,"String",851],[3,"Web3",0],[3,"EthPubSub",0],[3,"TxPool",0],[4,"EthereumTransaction",0],[3,"Transaction",852],[3,"HashMap",853],[3,"TxPoolResult",854],[6,"TransactionMap",854],[3,"Block",855],[3,"EthBlockDataCacheTask",0],[4,"EthereumStorageSchema",856],[6,"BlockV2",855],[4,"ReceiptV3",857],[3,"TransactionStatus",839],[15,"slice"],[4,"EnvelopedDecoderError",858],[3,"Error",859],[8,"Input",860],[15,"u32"],[8,"Deserializer",861],[3,"Permill",862],[3,"BytesMut",863],[8,"Output",860],[8,"Sized",833],[15,"i32"],[6,"ErrorObjectOwned",834],[8,"ToString",851],[15,"f64"],[3,"FeeHistory",864],[3,"Arc",865],[3,"OverrideHandle",0],[6,"FeeHistoryCache",864],[15,"u64"],[8,"BlockchainEvents",866],[3,"Index",867],[3,"EthFilter",0],[3,"FilterPoolItem",868],[3,"Mutex",869],[3,"EthereumSubIdProvider",0],[3,"Formatter",870],[6,"Result",870],[3,"Error",870],[3,"LegacyTransaction",871],[4,"TransactionV1",871],[3,"Summary",854],[8,"Any",872],[3,"Rc",873],[3,"RpcModule",874],[3,"Net",0],[8,"ExHashT",875],[3,"Filter",868],[3,"SpawnTaskHandle",876],[3,"Registry",877],[8,"Backend",878],[3,"Pool",837],[6,"FilterPool",868],[3,"SyncingService",879],[8,"EthSigner",0],[6,"FeeHistoryCacheLimit",864],[8,"ConsensusDataProvider",796],[6,"SubscriptionTaskExecutor",880],[3,"EthereumBlockNotification",881],[6,"EthereumBlockNotificationSinks",881],[3,"NetworkService",882],[4,"SubscriptionId",883],[4,"PeerCount",884],[4,"EcdsaVerifyError",885],[3,"TransactionRequest",886],[8,"Serializer",887],[4,"TransactionMessage",886],[3,"H64",888],[3,"PendingSubscriptionSink",889],[4,"Kind",890],[4,"Params",890],[4,"SyncStatus",884],[3,"TypeId",872],[3,"Type",891],[15,"str"],[3,"Block",846],[3,"Rich",846],[3,"Work",892],[8,"IntoPoolError",893],[4,"BlockId",894],[6,"HashingFor",829],[3,"OverlayedChanges",895],[3,"InherentData",896],[3,"Digest",897],[4,"Error",896],[3,"AuraConsensusDataProvider",796],[8,"AuxStore",830],[8,"UsageProvider",898],[8,"StorageOverride",0],[8,"EthApiServer",0],[8,"EstimateGasAdapter",0],[8,"DebugApiServer",0],[3,"EthTask",0],[8,"Web3ApiServer",0],[8,"TxPoolApiServer",0],[8,"EthFilterApiServer",0],[8,"EthPubSubApiServer",0],[8,"NetApiServer",0],[3,"Geth",710],[3,"SystemAccountId20StorageOverride",736],[3,"SystemAccountId32StorageOverride",736]],"b":[[43,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[44,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[48,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[49,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[53,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[54,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[59,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[60,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[62,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[63,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[69,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[70,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[72,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[73,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[75,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[76,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[78,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[79,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[81,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[82,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[84,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[85,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[121,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[122,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[124,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[125,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[135,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[136,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[156,"impl-EnvelopedDecodable-for-TransactionV2"],[157,"impl-Decode-for-TransactionV2"],[228,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[229,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[232,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[233,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[259,"impl-From%3CLegacyTransaction%3E-for-TransactionV2"],[260,"impl-From%3CTransactionV1%3E-for-TransactionV2"],[332,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[333,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[336,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[337,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[477,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[478,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[482,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[483,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[508,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[509,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[522,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[523,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[525,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[526,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[541,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[542,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[544,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[545,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[547,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[548,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[552,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[553,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[559,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[560,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[562,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[563,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[565,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[566,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[568,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[569,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[571,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[572,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[664,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[665,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[667,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[668,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[708,"impl-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"],[709,"impl-EthApiServer-for-Eth%3CB,+C,+P,+CT,+BE,+A,+CIDP,+EC%3E"]]},\
"fc_rpc_core":{"doc":"","t":"IIIIIIIKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLKKKKKKKKKKKKKKKKKKKKKKKKKKKAKKKKKDDNEEIDDDNDNNNNNNDDDDGDGDGEGDEDNNNNNNDDNNNNEDNNNNNNNNNNNEDDDDNNNDDDNNDGGDNNNNDNDDEGDGEDDDNEDMMMMMMMMMLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMMMMMMMMMMAMMMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMNENNNNNNEEENNNDNNLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DebugApiServer","EthApiServer","EthFilterApiServer","EthPubSubApiServer","NetApiServer","TxPoolApiServer","Web3ApiServer","accounts","author","bad_blocks","balance","block_by_hash","block_by_number","block_number","block_transaction_count_by_hash","block_transaction_count_by_number","block_transaction_receipts","block_uncles_count_by_hash","block_uncles_count_by_number","call","chain_id","client_version","code_at","content","estimate_gas","fee_history","filter_changes","filter_logs","gas_price","hashrate","inspect","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","into_rpc","is_listening","is_mining","logs","max_priority_fee_per_gas","new_block_filter","new_filter","new_pending_transaction_filter","peer_count","protocol_version","raw_block","raw_header","raw_receipts","raw_transaction","send_raw_transaction","send_transaction","sha3","status","storage_at","submit_hashrate","submit_work","subscribe","syncing","transaction_by_block_hash_and_index","transaction_by_block_number_and_index","transaction_by_hash","transaction_count","transaction_receipt","types","uncle_by_block_hash_and_index","uncle_by_block_number_and_index","uninstall_filter","version","work","AccountInfo","Block","Block","BlockNumberOrHash","BlockTransactions","BuildFrom","Bytes","CallRequest","CallStateOverride","Canceled","ChainStatus","Culled","Dropped","EIP1559","EIP2930","Earliest","Empty","EthAccount","EthProtocolInfo","ExtAccountInfo","FeeHistory","FeeHistoryCache","FeeHistoryCacheItem","FeeHistoryCacheLimit","Filter","FilterAddress","FilterChanges","FilterPool","FilterPoolItem","FilterType","FilteredParams","Finalized","Full","Future","Hash","Hashes","Hashes","Header","Index","Info","Invalid","Latest","Legacy","LocalTransactionStatus","Log","Log","Logs","Mined","Multiple","Multiple","Multiple","None","Null","Null","Null","Num","PeerCount","PeerInfo","PeerNetworkInfo","PeerProtocolsInfo","Peers","Pending","Pending","PendingTransaction","PipProtocolInfo","Receipt","RecoveredAccount","Rejected","Replaced","Rich","RichBlock","RichHeader","RichRawTransaction","Safe","Single","Single","Single","StorageProof","String","Summary","SyncInfo","SyncStatus","Topic","Transaction","TransactionMap","TransactionMessage","TransactionRequest","TransactionStats","TxPoolResult","U32","VariadicValue","Work","access_list","access_list","access_list","account_proof","active","address","address","address","address","address_bloom_filter","address_in_bloom","at_block","author","balance","balance","base_fee","base_fee_per_gas","base_fee_per_gas","block_gap","block_hash","block_hash","block_hash","block_hash","block_number","block_number","block_number","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_from","build_from","build_from","caps","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code_hash","connected","contract_address","creates","cumulative_gas_used","current_block","data","data","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","difficulty","difficulty","difficulty","effective_gas_price","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eth","extra_data","extra_info","extra_info","extra_info","filter","filter_address","filter_block_hash","filter_block_range","filter_topics","filter_type","first_seen","flat_topics","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_block","gas","gas","gas","gas","gas_limit","gas_price","gas_price","gas_price","gas_price","gas_used","gas_used","gas_used_ratio","gas_used_ratio","hash","hash","hash","hash","hash","hash","hash","head","head","header","highest_block","id","inner","inner","inner","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_vec","is_not_filtered","is_valid_for_current_chain","key","last_poll","local_address","log_index","logs","logs_bloom","logs_bloom","max","max_fee_per_gas","max_fee_per_gas","max_fee_per_gas","max_priority_fee_per_gas","max_priority_fee_per_gas","max_priority_fee_per_gas","meta","miner","name","name","name","network","new","new","nonce","nonce","nonce","nonce","nonce","nonce","number","number","oldest_block","parent_hash","peers","pending","pending_transaction_hashes","pip","pow_hash","proof","propagated_to","protocols","public_key","pubsub","queued","r","raw","receipts_root","remote_address","removed","replace","reward","rewards","s","seed_hash","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","size","starting_block","state","state_diff","state_root","state_root","status_code","storage_hash","storage_proof","target","timestamp","to","to","to","to","to","to_block","to_min_block_num","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics","topics","topics_bloom_filter","topics_in_bloom","total_difficulty","transaction","transaction_hash","transaction_hash","transaction_index","transaction_index","transaction_index","transaction_log_index","transaction_type","transaction_type","transaction_type","transaction_type","transactions","transactions_root","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncles","uncles_hash","uuid","v","value","value","value","value","value","value","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warp_chunks_amount","warp_chunks_processed","y_parity","hash","require_canonical","Header","Kind","Log","Logs","Logs","NewHeads","NewPendingTransactions","None","Params","PubSubResult","PubSubSyncing","Synced","Syncing","Syncing","SyncingStatus","SyncingStatus","TransactionHash","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","current_block","default","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","header","highest_block","into","into","into","into","into","logs","serialize","serialize","serialize","starting_block","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_hash","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fc_rpc_core"],[78,"fc_rpc_core::types"],[994,"fc_rpc_core::types::BlockNumberOrHash"],[996,"fc_rpc_core::types::pubsub"],[1107,"primitive_types"],[1108,"alloc::vec"],[1109,"jsonrpsee_core"],[1110,"core::option"],[1111,"core::future::future"],[1112,"alloc::boxed"],[1113,"core::pin"],[1114,"primitive_types"],[1115,"ethereum_types::uint"],[1116,"alloc::string"],[1117,"jsonrpsee_core::server::rpc_module"],[1118,"ethereum_types::hash"],[1119,"jsonrpsee_core::server::subscription"],[1120,"ethbloom"],[1121,"ethereum::transaction"],[1122,"core::clone"],[1123,"serde::de"],[1124,"serde::ser"],[1125,"core::result"],[1126,"serde::de"],[1127,"core::fmt"],[1128,"core::fmt"],[1129,"core::hash"],[1130,"ethereum::block"],[1131,"ethereum::receipt"],[1132,"core::iter::traits::iterator"]],"d":["Server trait implementation for the <code>DebugApi</code> RPC API.","Server trait implementation for the <code>EthApi</code> RPC API.","Server trait implementation for the <code>EthFilterApi</code> RPC API.","Server trait implementation for the <code>EthPubSubApi</code> RPC API.","Server trait implementation for the <code>NetApi</code> RPC API.","Server trait implementation for the <code>TxPoolApi</code> RPC API.","Server trait implementation for the <code>Web3Api</code> RPC API.","Returns accounts list.","Returns block author.","Returns an array of recent bad blocks that the client has …","Returns balance of the given account.","Returns block with given hash.","Returns block with given number.","Returns highest block number.","Returns the number of transactions in a block with given …","Returns the number of transactions in a block with given …","Returns the receipts of a block by number or hash.","Returns the number of uncles in a block with given hash.","Returns the number of uncles in a block with given block …","Call contract, returning the output data.","Returns the chain ID used for transaction signing at the …","Returns current client version.","Returns the code at given address at given time (block …","The content inspection property can be queried to list the …","Estimate gas needed for execution of given contract.","Introduced in EIP-1159 for getting information on the …","Returns filter changes since last poll.","Returns all logs matching given filter (in a range ‘from…","Returns current gas_price.","Returns the number of hashes per second that the node is …","The inspect inspection property can be queried to list a …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Collects all the methods and subscriptions defined in the …","Returns true if client is actively listening for network …","Returns true if client is actively mining new blocks.","Returns logs matching given filter object.","Introduced in EIP-1159, a Geth-specific and simplified …","Returns id of new block filter.","Returns id of new filter.","Returns id of new block filter.","Returns number of peers connected to node.","Returns protocol version encoded as a string (quotes are …","Returns an RLP-encoded block with the given number or hash.","Returns an RLP-encoded header with the given number or …","Returns an array of EIP-2718 binary-encoded receipts with …","Returns a EIP-2718 binary-encoded transaction with the …","Sends signed transaction, returning its hash.","Sends transaction; will block waiting for signer to return …","Returns sha3 of the given data","The status inspection property can be queried for the …","Returns content of the storage at given address.","Used for submitting mining hashrate.","Used for submitting a proof-of-work solution.","Subscribe to Eth subscription.","Returns an object with data about the sync status or …","Returns transaction at given block hash and index.","Returns transaction by given block number and index.","Get transaction by its hash.","Returns the number of transactions sent from given address …","Returns transaction receipt by transaction hash.","RPC types","Returns an uncles at given block and index.","Returns an uncles at given block and index.","Uninstalls filter.","Returns protocol version.","Returns the hash of the current block, the seedHash, and …","Account information.","Block representation","","Represents rpc api block number param.","Block Transactions","The trait that used to build types from the <code>from</code> address …","Wrapper structure around vector of bytes.","Call request","","Transaction was canceled.","Chain status.","Transaction was removed from the queue, but not mined.","Transaction was dropped because of limit.","","","Earliest block (genesis)","Empty result,","Account information.","Peer Ethereum protocol information","Extended account information (used by <code>parity_allAccountInfo</code>…","<code>eth_feeHistory</code> response","","","Maximum fee history cache size.","Filter","Filter Address","Results of the filter_changes RPC.","On-memory stored filters created through the <code>eth_newFilter</code> …","","","Helper for Filter matching. Supports conditional indexed …","The most recent crypto-economically secure block.","Full transactions","Transaction is in future part of the queue","Hash","Only hashes","New hashes (block or transactions)","Block header representation.","Represents usize.","Info when syncing","Transaction is invalid.","Latest block","","Local Transaction Status","Log","","New logs.","Transaction was mined.","List","List","List","Not syncing","None","None","None","Number","","Peer connection information","Peer network information","Peer protocols information","Peers info","Pending block (being mined)","Transaction is pending","","Peer PIP protocol information","Receipt","account derived from a signature as well as information …","Transaction never got into the queue.","Transaction was replaced by transaction with higher gas …","Value representation with additional info","Block representation with additional info.","Header representation with additional info.","Geth-compatible output for eth_signTransaction method","The most recent crypto-economically secure block. There is …","Single","Single","Single","Data structure with proof for one single storage-entry","","The textual summary of all the transactions currently …","Sync info","Sync status","Topic, supports <code>A</code> | <code>null</code> | <code>[A,B,C]</code> | <code>[A,[B,C]]</code> | …","Transaction","The entry maps an origin-address to a batch of scheduled …","","Transaction request coming from RPC","Propagation statistics for pending transaction.","The result type of <code>txpool</code> API.","","Variadic value","The result of an <code>eth_getWork</code> call: it differs based on an …","AccessList","Pre-pay to warm storage access.","Pre-pay to warm storage access.","","Number of active peers","","address of the recovered account","Address","H160","Build an address-based BloomFilter.","Evaluates if a Bloom contains the provided address(es).","","Authors address","","Fake balance to set for the account before executing the …","","Base Fee for post-EIP1559 blocks.","An array of block base fees per gas. This includes the …","Describes the gap in the blockchain, if there is one: …","Block hash","Block Hash","Block hash","Block hash","Block Number","Block number","Block number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Capabilities","The network id of the transaction, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fake EVM bytecode to inject into the account before …","","Number of connected peers","Contract address","Creates contract","Cumulative gas used","Current block","Data","Data","Additional data sent with transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Difficulty","Peer total difficulty if known","Peer total difficulty","Effective gas price. Pre-eip1559 this is just the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ethereum protocol information","Extra data","Engine-specific fields with additional description. Should …","Engine-specific fields with additional description. Should …","Engine-specific fields with additional description. Should …","","","","","","","Block no this transaction was first seen.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","From","Sender","Sender","Sender","From Block","Gas","Gas","Gas","Gas","Gas Limit","Gas Price","Gas Price","Gas Price, legacy.","Gas Price","Gas Used","Gas used","","An array of block gas used ratios. These are calculated as …","","","","","","Hash of the block","Hash","SHA3 of peer best block hash","SHA3 of peer best block hash","Header of the block","Highest block seen so far","Public node id","Standard value.","Standard value.","Standard value.","Data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert back to vector","","If the signature contains chain replay protection, And the …","","","Local endpoint address","Log Index in Block","Logs","Logs bloom","Logs bloom","Max number of peers","EIP-1559 Max base fee the caller is willing to pay","Max BaseFeePerGas the user is willing to pay.","Max BaseFeePerGas the user is willing to pay.","EIP-1559 Priority fee the caller is paying to the block …","The miner’s tip.","The miner’s tip.","Account meta JSON","Alias of <code>author</code>","Account name","Account name","Node client ID","Network information","Simple constructor.","","","Nonce","Nonce","Fake nonce to set for the account before executing the …","Nonce","Transaction’s nonce","Block number","The block number: this isn’t always stored.","Lowest number block of the returned range.","Hash of the parent","Detailed information on peers","","","PIP protocol information.","The proof-of-work hash.","","Peers this transaction was propagated to with count.","Protocols information","public key of the recovered account","Pub-Sub types.","","The R field of the signature.","Raw transaction RLP","Transactions receipts root hash","Remote endpoint address","Whether Log Type is Removed (Geth Compatibility Field)","Replace None values - aka wildcards - for the log input …","An array of effective priority fee per gas data points …","","The S field of the signature.","The seed hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Size in bytes","Size in bytes","Starting block","Fake key-value mapping to override all slots in the …","Fake key-value mapping to override individual slots in the …","State root hash","State Root","Status code","","","The target.","Timestamp","To","Recipient","Recipient","Recipient","Recipient","To Block","Convert block number to min block target.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Topics","Topics","Build a topic-based BloomFilter.","Evaluates if a Bloom contains a provided sequence of …","Total difficulty","Transaction details","Transaction Hash","Transaction Hash","Transaction Index","Transaction index","Transaction Index","Log Index in Transaction","EIP-2718 type","EIP-2718 type","EIP-2718 transaction type","EIP-2718 type","Transactions","Transactions root hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uncles’ hashes","Hash of the uncles","Account UUID (<code>None</code> for address book entries)","The standardised V field of the signature.","Convert to usize","","Value","Transferred value","Value of transaction in wei","Transferred value","Negotiated ethereum protocol version","Negotiated PIP protocol version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warp sync snapshot chunks total.","Warp sync snapshot chunks processed.","The parity (0 for even, 1 for odd) of the y-value of the …","block hash","only return blocks part of the canon chain","New block header.","Subscription kind.","Log","Logs subscription.","Log parameters.","New block headers subscription.","New Pending Transactions subscription.","No parameters passed.","Subscription kind.","Subscription result.","","","Node syncing status subscription.","","Pubsub sync status","SyncStatus","Transaction hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,90,90,91,90,90,90,90,90,90,90,90,90,90,90,92,90,93,90,90,94,94,90,90,93,91,91,90,90,94,94,95,95,96,96,93,93,92,92,96,90,94,90,94,94,94,96,90,91,91,91,91,90,90,92,93,90,90,90,95,90,90,90,90,90,90,0,90,90,94,96,90,0,0,53,0,0,0,0,0,0,77,0,77,77,97,97,4,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,44,77,4,44,52,0,0,58,77,4,97,0,0,53,52,77,36,98,50,58,36,98,50,4,0,0,0,0,0,4,77,53,0,0,0,77,77,0,0,0,0,4,36,98,50,0,26,0,0,0,0,0,0,0,0,0,0,26,0,0,13,18,29,41,62,41,43,25,55,61,61,54,46,41,14,99,45,49,69,25,55,56,18,55,56,18,99,97,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,99,97,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,100,18,23,63,18,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,52,53,54,55,56,57,26,58,18,59,29,20,23,35,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,52,53,54,55,56,57,26,58,18,59,29,20,23,35,14,41,62,56,18,56,57,13,55,29,39,40,41,42,4,28,13,14,61,57,62,63,64,65,66,67,68,69,18,59,29,35,47,4,28,13,14,50,25,22,29,46,66,67,56,39,40,41,42,46,47,4,28,13,14,50,25,52,22,55,57,58,18,59,29,35,39,39,39,40,40,40,41,41,41,42,42,42,46,46,46,47,47,47,4,4,4,28,28,28,13,13,13,14,14,14,50,50,50,25,25,25,52,52,52,22,22,22,55,55,55,57,57,57,58,58,58,18,18,18,59,59,59,29,29,29,35,35,35,65,46,34,101,47,61,61,61,61,61,54,68,61,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,99,97,39,40,41,42,43,44,45,46,47,4,28,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,13,56,18,29,25,13,18,29,23,46,13,18,29,23,46,56,99,49,4,28,50,25,55,46,18,66,67,45,57,63,34,101,47,18,99,97,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,28,61,43,40,54,64,55,56,46,56,62,13,18,29,13,18,29,42,46,39,42,63,63,28,61,41,46,13,14,18,29,46,35,49,46,62,20,54,65,35,40,68,63,43,0,20,18,59,46,64,55,61,49,99,18,35,39,40,41,42,43,44,45,46,47,4,28,49,52,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,45,46,57,14,14,46,56,56,41,41,35,46,13,56,18,29,23,25,4,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,52,53,54,55,56,57,26,58,18,59,29,20,23,35,25,55,61,61,45,59,55,56,55,56,18,55,13,56,18,29,45,46,99,97,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,99,97,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,99,97,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,45,46,42,18,22,40,13,18,29,23,66,67,99,97,39,40,41,42,43,44,45,46,47,4,28,13,14,49,50,25,61,52,53,54,22,55,56,57,62,26,63,64,65,66,67,58,68,69,18,77,59,29,20,23,35,57,57,18,102,102,84,0,84,32,33,32,32,33,0,0,0,85,32,85,0,84,84,32,33,84,85,86,32,33,84,85,86,32,33,84,85,86,32,33,84,85,86,86,33,32,33,32,33,84,85,86,32,32,32,33,33,33,84,84,84,85,85,85,86,86,86,32,33,84,85,86,32,33,84,85,86,32,33,84,86,32,33,84,85,86,84,84,85,86,86,32,33,84,85,86,84,32,33,84,85,86,32,33,84,85,86,32,33,84,85,86,32,33,84,85,86],"f":[0,0,0,0,0,0,0,[-1,[[3,[[2,[1]]]]],[]],[-1,[[3,[1]]],[]],[[-1,4],[[3,[[2,[5]]]]],[]],[[-1,1,[6,[4]]],[[9,[[8,[7]]]]],[]],[[-1,10,11],[[9,[[8,[7]]]]],[]],[[-1,4,11],[[9,[[8,[7]]]]],[]],[-1,[[3,[12]]],[]],[[-1,10],[[9,[[8,[7]]]]],[]],[[-1,4],[[9,[[8,[7]]]]],[]],[[-1,4],[[9,[[8,[7]]]]],[]],[[-1,10],[[3,[12]]],[]],[[-1,4],[[3,[12]]],[]],[[-1,13,[6,[4]],[6,[[15,[1,14]]]]],[[9,[[8,[7]]]]],[]],[-1,[[3,[[6,[16]]]]],[]],[-1,[[3,[17]]],[]],[[-1,1,[6,[4]]],[[9,[[8,[7]]]]],[]],[-1,[[3,[[20,[[19,[18]]]]]]],[]],[[-1,13,[6,[4]]],[[9,[[8,[7]]]]],[]],[[-1,12,4,[6,[[2,[21]]]]],[[9,[[8,[7]]]]],[]],[[-1,22],[[9,[[8,[7]]]]],[]],[[-1,22],[[9,[[8,[7]]]]],[]],[-1,[[3,[12]]],[]],[-1,[[3,[12]]],[]],[-1,[[3,[[20,[[19,[23]]]]]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[24,[-1]]],[]],[-1,[[3,[11]]],[]],[-1,[[3,[11]]],[]],[[-1,25],[[9,[[8,[7]]]]],[]],[-1,[[3,[12]]],[]],[-1,[[3,[12]]],[]],[[-1,25],[[3,[12]]],[]],[-1,[[3,[12]]],[]],[-1,[[3,[26]]],[]],[-1,[[3,[27]]],[]],[[-1,4],[[9,[[8,[7]]]]],[]],[[-1,4],[[9,[[8,[7]]]]],[]],[[-1,4],[[9,[[8,[7]]]]],[]],[[-1,10],[[9,[[8,[7]]]]],[]],[[-1,28],[[9,[[8,[7]]]]],[]],[[-1,29],[[9,[[8,[7]]]]],[]],[[-1,28],[[3,[10]]],[]],[-1,[[3,[[20,[12]]]]],[]],[[-1,1,12,[6,[4]]],[[9,[[8,[7]]]]],[]],[[-1,12,10],[[3,[11]]],[]],[[-1,30,10,10],[[3,[11]]],[]],[[-1,31,32,[6,[33]]],5,[]],[-1,[[9,[[8,[7]]]]],[]],[[-1,10,22],[[9,[[8,[7]]]]],[]],[[-1,4,22],[[9,[[8,[7]]]]],[]],[[-1,10],[[9,[[8,[7]]]]],[]],[[-1,1,[6,[4]]],[[9,[[8,[7]]]]],[]],[[-1,10],[[9,[[8,[7]]]]],[]],0,[[-1,10,22],[[3,[[6,[34]]]]],[]],[[-1,4,22],[[3,[[6,[34]]]]],[]],[[-1,22],[[3,[11]]],[]],[-1,[[3,[17]]],[]],[-1,[[3,[35]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[6,[36]]],[[2,[[6,[37]]]]]],[[37,[2,[[6,[37]]]]],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,38],-1,[]],[[1,38],18],[[1,38],23],0,0,[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[[[47,[-1]]],[[47,[-1]]],48],[4,4],[28,28],[13,13],[14,14],[49,49],[[[50,[-1]]],[[50,[-1]]],[51,48]],[25,25],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[26,26],[58,58],[18,18],[59,59],[29,29],[[[20,[-1]]],[[20,[-1]]],[48,60]],[23,23],[35,35],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,0,0,0,0,0,0,[[],39],[[],40],[[],41],[[],42],[[],4],[[],28],[[],13],[[],14],[[],61],[[],57],[[],62],[[],63],[[],64],[[],65],[[],66],[[],67],[[],68],[[],69],[[],18],[[],59],[[],29],[[],35],[[[47,[-1]]],[],[]],[-1,[[70,[4]]],71],[-1,[[70,[28]]],71],[-1,[[70,[13]]],71],[-1,[[70,[14]]],71],[-1,[[70,[[50,[-2]]]]],71,51],[-1,[[70,[25]]],71],[-1,[[70,[22]]],71],[-1,[[70,[29]]],71],0,0,0,0,[[39,39],11],[[40,40],11],[[41,41],11],[[42,42],11],[[46,46],11],[[[47,[-1]],[47,[-1]]],11,72],[[4,4],11],[[28,28],11],[[13,13],11],[[14,14],11],[[[50,[-1]],[50,[-1]]],11,[51,72]],[[25,25],11],[[52,52],11],[[22,22],11],[[55,55],11],[[57,57],11],[[58,58],11],[[18,18],11],[[59,59],11],[[29,29],11],[[35,35],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,0,0,0,0,[[61,1],11],[[61,10],11],[[61,27],11],[[61,[73,[10]]],11],0,0,0,[[39,74],75],[[40,74],75],[[41,74],75],[[42,74],75],[[43,74],75],[[44,74],75],[[45,74],75],[[46,74],75],[[[47,[-1]],74],75,76],[[4,74],75],[[28,74],75],[[13,74],75],[[14,74],75],[[49,74],75],[[[50,[-1]],74],75,[51,76]],[[25,74],75],[[61,74],75],[[52,74],75],[[53,74],75],[[54,74],75],[[22,74],75],[[55,74],75],[[56,74],75],[[57,74],75],[[62,74],75],[[26,74],75],[[63,74],75],[[64,74],75],[[65,74],75],[[66,74],75],[[67,74],75],[[58,74],75],[[68,74],75],[[69,74],75],[[18,74],75],[[77,74],75],[[59,74],75],[[29,74],75],[[[20,[-1]],74],75,[76,60]],[[23,74],75],[[35,74],75],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[78]]],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,-1],5,79],[[28,-1],5,79],[[[50,[-1]],-2],5,[51,80],79],[[25,-1],5,79],[[55,-1],5,79],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,[[2,[78]]]],[[61,12,10,1,[73,[10]]],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[78]]],28],[[[6,[25]]],61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[61,[73,[10]],[50,[[6,[10]]]]],[[6,[[2,[10]]]]]],0,0,0,0,[[39,-1],70,81],[[40,-1],70,81],[[41,-1],70,81],[[42,-1],70,81],[[43,-1],70,81],[[44,-1],70,81],[[45,-1],70,81],[[46,-1],70,81],[[[47,[-1]],-2],70,60,81],[[4,-1],70,81],[[28,-1],70,81],[[49,-1],70,81],[[52,-1],70,81],[[55,-1],70,81],[[56,-1],70,81],[[57,-1],70,81],[[62,-1],70,81],[[26,-1],70,81],[[63,-1],70,81],[[64,-1],70,81],[[65,-1],70,81],[[66,-1],70,81],[[67,-1],70,81],[[58,-1],70,81],[[68,-1],70,81],[[69,-1],70,81],[[18,-1],70,81],[[77,-1],70,81],[[59,-1],70,81],[[29,-1],70,81],[[[20,[-1]],-2],70,[60,60],81],[[23,-1],70,81],[[35,-1],70,81],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,[[6,[27]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[6,[[2,[[50,[[6,[10]]]]]]]]],[[2,[[2,[[6,[37]]]]]]]],[[37,[73,[[2,[[6,[37]]]]]]],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],0,0,0,0,[22,83],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[33,33],[84,84],[85,85],[86,86],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[],33],[-1,[[70,[32]]],71],[-1,[[70,[33]]],71],[[32,32],11],[[33,33],11],[[84,84],11],[[85,85],11],[[86,86],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[32,74],75],[[33,74],75],[[84,74],75],[[85,74],75],[[86,74],75],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[32,-1],5,79],[[33,-1],5,79],[87,84],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[87,[2,[88]],61],[[0,[89]]]],[[84,-1],70,81],[[85,-1],70,81],[[86,-1],70,81],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,84],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"H160",1107],[3,"Vec",1108],[6,"RpcResult",1109],[4,"BlockNumberOrHash",78],[15,"tuple"],[4,"Option",1110],[8,"Future",1111],[3,"Box",1112],[3,"Pin",1113],[3,"H256",1107],[15,"bool"],[3,"U256",1107],[3,"CallRequest",78],[3,"CallStateOverride",78],[3,"BTreeMap",1114],[3,"U64",1115],[3,"String",1116],[3,"Transaction",78],[6,"TransactionMap",78],[3,"TxPoolResult",78],[15,"f64"],[3,"Index",78],[3,"Summary",78],[3,"RpcModule",1117],[3,"Filter",78],[4,"PeerCount",78],[15,"u64"],[3,"Bytes",78],[3,"TransactionRequest",78],[3,"H64",1118],[3,"PendingSubscriptionSink",1119],[4,"Kind",996],[4,"Params",996],[6,"RichBlock",78],[3,"Work",78],[6,"FilterAddress",78],[3,"Bloom",1120],[4,"TransactionV2",1121],[3,"AccountInfo",78],[3,"StorageProof",78],[3,"EthAccount",78],[3,"ExtAccountInfo",78],[3,"RecoveredAccount",78],[4,"BlockTransactions",78],[3,"Block",78],[3,"Header",78],[3,"Rich",78],[8,"Clone",1122],[3,"FeeHistory",78],[4,"VariadicValue",78],[8,"DeserializeOwned",1123],[4,"FilterChanges",78],[4,"FilterType",78],[3,"FilterPoolItem",78],[3,"Log",78],[3,"Receipt",78],[3,"SyncInfo",78],[4,"SyncStatus",78],[3,"RichRawTransaction",78],[8,"Serialize",1124],[3,"FilteredParams",78],[3,"Peers",78],[3,"PeerInfo",78],[3,"PeerNetworkInfo",78],[3,"PeerProtocolsInfo",78],[3,"EthProtocolInfo",78],[3,"PipProtocolInfo",78],[3,"TransactionStats",78],[3,"ChainStatus",78],[4,"Result",1125],[8,"Deserializer",1123],[8,"PartialEq",1126],[15,"slice"],[3,"Formatter",1127],[6,"Result",1127],[8,"Debug",1127],[4,"LocalTransactionStatus",78],[15,"u8"],[8,"Hasher",1128],[8,"Hash",1128],[8,"Serializer",1124],[3,"TypeId",1129],[15,"usize"],[4,"PubSubResult",996],[4,"PubSubSyncing",996],[3,"SyncingStatus",996],[6,"BlockV2",1130],[4,"ReceiptV3",1131],[8,"Iterator",1132],[8,"EthApiServer",0],[8,"DebugApiServer",0],[8,"Web3ApiServer",0],[8,"TxPoolApiServer",0],[8,"EthFilterApiServer",0],[8,"EthPubSubApiServer",0],[8,"NetApiServer",0],[4,"TransactionMessage",78],[6,"Topic",78],[3,"FeeHistoryCacheItem",78],[8,"BuildFrom",78],[6,"RichHeader",78],[13,"Hash",994]],"b":[]},\
"fc_storage":{"doc":"","t":"DDDDDIKLLLLLLLLLLLLLLKLLLLKLLLLKLLLLLLLLLLLLLLLLLLLKLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLFFMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["OverrideHandle","RuntimeApiStorageOverride","SchemaV1Override","SchemaV2Override","SchemaV3Override","StorageOverride","account_code_at","account_code_at","account_code_at","account_code_at","account_code_at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_block","current_block","current_block","current_block","current_block","current_receipts","current_receipts","current_receipts","current_receipts","current_receipts","current_transaction_statuses","current_transaction_statuses","current_transaction_statuses","current_transaction_statuses","current_transaction_statuses","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","elasticity","elasticity","elasticity","elasticity","elasticity","fallback","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_eip1559","is_eip1559","is_eip1559","is_eip1559","is_eip1559","new","new","new","new","onchain_storage_schema","overrides_handle","schemas","storage_at","storage_at","storage_at","storage_at","storage_at","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fc_storage"],[149,"primitive_types"],[150,"alloc::vec"],[151,"core::option"],[152,"sp_runtime::traits"],[153,"sc_client_api::backend"],[154,"sp_blockchain::backend"],[155,"sc_client_api::backend"],[156,"core::marker"],[157,"core::marker"],[158,"ethereum::receipt"],[159,"fp_rpc"],[160,"sp_arithmetic::per_things"],[161,"alloc::sync"],[162,"fp_storage"],[163,"primitive_types"],[164,"core::any"]],"d":["","A wrapper type for the Runtime API. This type implements …","An override for runtimes that use Schema V1","An override for runtimes that use Schema V2","An override for runtimes that use Schema V3","Something that can fetch Ethereum-related data. This trait …","For a given account address, returns …","For a given account address, returns …","For a given account address, returns …","For a given account address, returns …","For a given account address, returns …","","","","","","","","","","","Return the current block.","Return the current block.","Return the current block.","Return the current block.","Return the current block.","Return the current receipt.","Return the current receipt.","Return the current receipt.","Return the current receipt.","Return the current receipt.","Return the current transaction status.","Return the current transaction status.","Return the current transaction status.","Return the current transaction status.","Return the current transaction status.","","","","","","","","","","","","","","","","Return the base fee at the given height.","Prior to eip-1559 there is no elasticity.","Return the elasticity at the given height.","Return the elasticity at the given height.","Return the elasticity multiplier at the give post-eip1559 …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Return <code>true</code> if the request BlockId is post-eip1559.","","","","","","","","","","","","For a given account address and index, returns …","For a given account address and index, returns …","For a given account address and index, returns …","For a given account address and index, returns …","For a given account address and index, returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,30,5,10,11,12,5,10,11,25,12,5,10,11,25,12,30,5,10,11,12,30,5,10,11,12,30,5,10,11,12,5,10,11,25,12,5,10,11,25,12,5,10,11,25,12,30,5,10,11,12,25,5,10,11,25,12,5,5,10,10,11,11,25,25,12,12,5,5,10,10,11,11,25,25,12,12,5,10,11,25,12,5,10,11,25,12,5,10,11,25,12,5,10,11,25,12,30,5,10,11,12,5,10,11,12,0,0,25,30,5,10,11,12,5,10,11,25,12,5,10,11,25,12,5,10,11,25,12,5,10,11,25,12,5,10,11,25,12,5,10,11,25,12],"f":[0,0,0,0,0,0,[[-1,1],[[4,[[3,[2]]]]],[]],[[[5,[-1,-3,-2]],1],[[4,[[3,[2]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[10,[-1,-3,-2]],1],[[4,[[3,[2]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[11,[-1,-3,-2]],1],[[4,[[3,[2]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[12,[-1,-2]],1],[[4,[[3,[2]]]]],6,[[13,[-1]],14,15]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[16]]],[]],[[[5,[-1,-3,-2]]],[[4,[16]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[10,[-1,-3,-2]]],[[4,[16]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[11,[-1,-3,-2]]],[[4,[16]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[12,[-1,-2]]],[[4,[16]]],6,[[13,[-1]],14,15]],[-1,[[4,[[3,[17]]]]],[]],[[[5,[-1,-3,-2]]],[[4,[[3,[17]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[10,[-1,-3,-2]]],[[4,[[3,[17]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[11,[-1,-3,-2]]],[[4,[[3,[17]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[12,[-1,-2]]],[[4,[[3,[17]]]]],6,[[13,[-1]],14,15]],[-1,[[4,[[3,[18]]]]],[]],[[[5,[-1,-3,-2]]],[[4,[[3,[18]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[10,[-1,-3,-2]]],[[4,[[3,[18]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[11,[-1,-3,-2]]],[[4,[[3,[18]]]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[12,[-1,-2]]],[[4,[[3,[18]]]]],6,[[13,[-1]],14,15]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,20],[19,20],[19,20],[19,20],[19,20],[-1,[[4,[21]]],[]],[[[5,[-1,-3,-2]]],[[4,[21]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[10,[-1,-3,-2]]],[[4,[21]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[11,[-1,-3,-2]]],[[4,[21]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[12,[-1,-2]]],[[4,[21]]],6,[[13,[-1]],14,15]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],19],[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,22,[]],[[[5,[-1,-3,-2]]],22,6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[10,[-1,-3,-2]]],22,6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[11,[-1,-3,-2]]],22,6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[12,[-1,-2]]],22,6,[[13,[-1]],14,15]],[[[23,[-1]]],[[5,[-2,-1,-3]]],[],6,[]],[[[23,[-1]]],[[10,[-2,-1,-3]]],[],6,[]],[[[23,[-1]]],[[11,[-2,-1,-3]]],[],6,[]],[[[23,[-1]]],[[12,[-2,-1]]],[],6],[-3,24,6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[23,[-3]]],[[23,[[25,[-1]]]]],6,[[7,[-1]]],[[13,[-1]],[8,[-1]],[9,[-1,-2]]]],0,[[-1,1,26],[[4,[27]]],[]],[[[5,[-1,-3,-2]],1,26],[[4,[27]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[10,[-1,-3,-2]],1,26],[[4,[27]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[11,[-1,-3,-2]],1,26],[[4,[27]]],6,[[7,[-1]]],[[8,[-1]],[9,[-1,-2]]]],[[[12,[-1,-2]],1,26],[[4,[27]]],6,[[13,[-1]],14,15]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"H160",149],[15,"u8"],[3,"Vec",150],[4,"Option",151],[3,"SchemaV1Override",0],[8,"Block",152],[8,"Backend",153],[8,"HeaderBackend",154],[8,"StorageProvider",153],[3,"SchemaV2Override",0],[3,"SchemaV3Override",0],[3,"RuntimeApiStorageOverride",0],[8,"ProvideRuntimeApi",155],[8,"Send",156],[8,"Sync",156],[6,"BlockV2",157],[4,"ReceiptV3",158],[3,"TransactionStatus",159],[15,"usize"],[15,"tuple"],[3,"Permill",160],[15,"bool"],[3,"Arc",161],[4,"EthereumStorageSchema",162],[3,"OverrideHandle",0],[3,"U256",149],[3,"H256",149],[4,"Result",163],[3,"TypeId",164],[8,"StorageOverride",0]],"b":[]},\
"fp_account":{"doc":"","t":"DDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccountId20","EthereumSignature","EthereumSigner","__clone_box","__clone_box","__clone_box","as_byte_slice","as_mut","as_mut","as_mut_byte_slice","as_mut_slice_of","as_ref","as_ref","as_slice_of","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","encode","encode","encode","encode_hex","encode_hex_upper","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ffi_value","from_inner","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_str","init","init","init","inner","into","into","into","into_account","into_ffi_value","into_inner","is_clear","max_encoded_len","max_encoded_len","new","partial_cmp","partial_cmp","serialize","serialize","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","verify","vzip","vzip","vzip"],"q":[[0,"fp_account"],[153,"dyn_clone::sealed"],[154,"byte_slice_cast"],[155,"core::result"],[156,"byte_slice_cast"],[157,"parity_scale_codec::error"],[158,"parity_scale_codec::codec"],[159,"serde::de"],[160,"alloc::vec"],[161,"core::iter::traits::collect"],[162,"parity_scale_codec::codec"],[163,"core::fmt"],[164,"core::fmt"],[165,"sp_core::ecdsa"],[166,"sp_core::crypto"],[167,"sp_runtime"],[168,"sp_wasm_interface"],[169,"alloc::string"],[170,"sp_core::ecdsa"],[171,"serde::ser"],[172,"core::any"],[173,"scale_info::ty"],[174,"core::ops::function"],[175,"sp_runtime::traits"]],"d":["A fully Ethereum-compatible <code>AccountId</code>. Conforms to H160 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,5,10,11,5,5,5,5,5,5,5,5,5,10,11,5,10,11,5,5,10,11,5,10,11,5,11,5,10,11,5,10,11,5,10,11,5,10,11,5,5,10,11,5,10,11,5,10,5,10,11,5,10,11,5,5,5,10,11,5,10,11,5,5,5,10,10,10,11,11,11,5,5,10,11,11,5,5,5,5,5,5,10,10,11,11,11,11,11,5,10,11,5,10,11,5,5,10,11,11,5,10,11,11,11,11,5,5,11,10,5,11,5,10,5,10,11,5,10,11,5,10,11,5,11,5,5,10,11,5,10,11,5,10,11,5,10,11,5,10,11,5,10,11,5,10,11,10,5,10,11],"f":[0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,[[4,[3]]],[]],[5,[[6,[3]]]],[5,[[4,[3]]]],[-1,[[4,[3]]],[]],[-1,[[8,[[4,[-2]],7]]],[],9],[5,[[4,[3]]]],[5,[[6,[3]]]],[-1,[[8,[[4,[-2]],7]]],[],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[5,5],[10,10],[11,11],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[5,5],12],[[11,11],12],[-1,[[8,[5,13]]],14],[-1,[[8,[10,13]]],14],[-1,[[8,[11,13]]],14],[[[4,[3]]],[[8,[-1,13]]],[]],[[[4,[3]]],[[8,[-1,13]]],[]],[[[4,[3]]],[[8,[-1,13]]],[]],[[15,[4,[3]]],[[8,[-1,13]]],[]],[[15,[4,[3]]],[[8,[-1,13]]],[]],[[15,[4,[3]]],[[8,[-1,13]]],[]],[[15,-1],[[8,[-2,13]]],14,[]],[[15,-1],[[8,[-2,13]]],14,[]],[[15,-1],[[8,[-2,13]]],14,[]],[[],5],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[8,[5]]],17],[-1,[[8,[10]]],17],[16,2],[16,2],[16,2],[5,[[18,[3]]]],[10,[[18,[3]]]],[11,[[18,[3]]]],[-1,-2,[],[[20,[19]]]],[-1,-2,[],[[20,[19]]]],[[5,-1],2,[21,22]],[[10,-1],2,[21,22]],[[11,-1],2,[21,22]],[[5,5],23],[[10,10],23],[[11,11],23],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[5,24],25],[[5,24],25],[[10,24],25],[[11,24],25],[[11,24],25],[[[6,[3]]],5],[26,5],[[[6,[3]]],5],[27,5],[28,5],[-1,-1,[]],[-1,-1,[]],[29,10],[-1,-1,[]],[[[6,[3]]],11],[27,11],[30,[[8,[-1,31]]],[]],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,[[8,[5]]]],[[],16],[[],16],[[],16],[11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,5],[[-1,30],[[8,[31]]],[]],[11],[-1,23,[]],[[],16],[[],16],[33,10],[[5,5],[[34,[12]]]],[[11,11],[[34,[12]]]],[[5,-1],8,35],[[10,-1],8,35],[5,16],[10,16],[11,16],[[-1,[4,[3]]],[[18,[3]]],[]],[[-1,[4,[3]]],[[18,[3]]],[]],[[-1,[4,[3]]],[[18,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[-1,[[8,[-2]]],[],[]],[[[4,[3]]],[[8,[5,2]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[],37],[[],37],[[],37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,-1],-2,38,[]],[[10,-1],-2,38,[]],[[11,-1],-2,38,[]],[[10,-1,5],23,[[39,[[4,[3]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",153],[15,"tuple"],[15,"u8"],[15,"slice"],[3,"AccountId20",0],[15,"array"],[4,"Error",154],[4,"Result",155],[8,"FromByteSlice",154],[3,"EthereumSignature",0],[3,"EthereumSigner",0],[4,"Ordering",156],[3,"Error",157],[8,"Input",158],[15,"u32"],[15,"usize"],[8,"Deserializer",159],[3,"Vec",160],[15,"char"],[8,"FromIterator",161],[8,"Output",158],[8,"Sized",162],[15,"bool"],[3,"Formatter",163],[6,"Result",163],[3,"H160",164],[3,"Public",165],[3,"AccountId32",166],[4,"MultiSignature",167],[8,"FunctionContext",168],[3,"String",169],[15,"str"],[3,"Signature",165],[4,"Option",170],[8,"Serializer",171],[3,"TypeId",172],[3,"Type",173],[8,"FnOnce",174],[8,"Lazy",175]],"b":[[7,"impl-AsMut%3C%5Bu8;+20%5D%3E-for-AccountId20"],[8,"impl-AsMut%3C%5Bu8%5D%3E-for-AccountId20"],[11,"impl-AsRef%3C%5Bu8%5D%3E-for-AccountId20"],[12,"impl-AsRef%3C%5Bu8;+20%5D%3E-for-AccountId20"],[73,"impl-Display-for-AccountId20"],[74,"impl-Debug-for-AccountId20"],[76,"impl-Debug-for-EthereumSigner"],[77,"impl-Display-for-EthereumSigner"],[78,"impl-From%3C%5Bu8;+32%5D%3E-for-AccountId20"],[79,"impl-From%3CH160%3E-for-AccountId20"],[80,"impl-From%3C%5Bu8;+20%5D%3E-for-AccountId20"],[81,"impl-From%3CPublic%3E-for-AccountId20"],[82,"impl-From%3CAccountId32%3E-for-AccountId20"],[87,"impl-From%3C%5Bu8;+20%5D%3E-for-EthereumSigner"],[88,"impl-From%3CPublic%3E-for-EthereumSigner"]]},\
"fp_consensus":{"doc":"","t":"NNNREDNENNNENELLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Block","Block","BlockHash","FRONTIER_ENGINE_ID","FindLogError","Hashes","Hashes","Log","MultipleLogs","NotFound","Post","PostLog","Pre","PreLog","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","block_hash","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","ensure_log","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_log","find_post_log","find_pre_log","fmt","from","from","from","from","from","from_block","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_hashes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fp_consensus"],[159,"dyn_clone::sealed"],[160,"parity_scale_codec::error"],[161,"core::result"],[162,"parity_scale_codec::codec"],[163,"parity_scale_codec::codec"],[164,"sp_runtime::generic::digest"],[165,"core::fmt"],[166,"core::fmt"],[167,"alloc::vec"],[168,"core::any"]],"d":["","Ethereum block.","Ethereum block hash.","","","","Ethereum block hash and txn hashes.","","","","","","","","","","","","","Ethereum block hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Transaction hashes of the Ethereum block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,5,5,0,0,0,5,0,7,7,3,0,3,0,3,4,5,6,7,6,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,4,5,6,4,5,6,4,5,6,4,5,6,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,4,5,6,0,3,4,5,6,3,3,3,4,4,4,5,5,5,6,6,6,0,0,0,7,3,4,5,6,7,6,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,4,5,6,4,5,6,3,4,5,6,7,6,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[4,4],[5,5],[6,6],[7,7],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[9,[4,8]]],10],[-1,[[9,[5,8]]],10],[-1,[[9,[6,8]]],10],[[[12,[11]]],[[9,[-1,8]]],[]],[[[12,[11]]],[[9,[-1,8]]],[]],[[[12,[11]]],[[9,[-1,8]]],[]],[[13,[12,[11]]],[[9,[-1,8]]],[]],[[13,[12,[11]]],[[9,[-1,8]]],[]],[[13,[12,[11]]],[[9,[-1,8]]],[]],[[13,-1],[[9,[-2,8]]],10,[]],[[13,-1],[[9,[-2,8]]],10,[]],[[13,-1],[[9,[-2,8]]],10,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,2],[14,2],[14,2],[14,2],[14,2],[[4,-1],2,[15,16]],[[5,-1],2,[15,16]],[[6,-1],2,[15,16]],[17,[[9,[2,7]]]],[[3,3],18],[[4,4],18],[[5,5],18],[[6,6],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[17,[[9,[3,7]]]],[17,[[9,[5,7]]]],[17,[[9,[4,7]]]],[[7,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[21,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],14],[[],14],[[],14],[[],14],[[],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,14],[5,14],[6,14],[[-1,[12,[11]]],[[22,[11]]],[]],[[-1,[12,[11]]],[[22,[11]]],[]],[[-1,[12,[11]]],[[22,[11]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",159],[15,"tuple"],[4,"Log",0],[4,"PreLog",0],[4,"PostLog",0],[3,"Hashes",0],[4,"FindLogError",0],[3,"Error",160],[4,"Result",161],[8,"Input",162],[15,"u8"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Output",162],[8,"Sized",163],[3,"Digest",164],[15,"bool"],[3,"Formatter",165],[6,"Result",165],[6,"BlockV2",166],[3,"Vec",167],[3,"TypeId",168]],"b":[]},\
"fp_dynamic_fee":{"doc":"Core types and inherents for dynamic fee.","t":"RDGLLLLLLLLLLLLLLLLLL","n":["INHERENT_IDENTIFIER","InherentDataProvider","InherentType","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","init","into","provide_inherent_data","try_from","try_handle_error","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"fp_dynamic_fee"],[21,"sp_inherents"],[22,"core::future::future"],[23,"alloc::boxed"],[24,"core::pin"],[25,"core::result"],[26,"sp_inherents"]],"d":["","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[-1,-2,[],[]],[[3,4],[[7,[[6,[5]]]]]],[-1,[[8,[-2]]],[],[]],[[3,9,[11,[10]]],[[7,[[6,[5]]]]]],[-1,[[8,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[3,"InherentDataProvider",0],[3,"InherentData",21],[8,"Future",22],[3,"Box",23],[3,"Pin",24],[4,"Result",25],[6,"InherentIdentifier",21],[15,"u8"],[15,"slice"],[3,"TypeId",26]],"b":[]},\
"fp_ethereum":{"doc":"","t":"DGNNNNNNNNDDEEEDILLLLLLLMMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLMMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLL","n":["AccessListItem","Block","Call","Create","EIP1559","EIP1559","EIP2930","EIP2930","Legacy","Legacy","LegacyTransactionMessage","Log","Receipt","Transaction","TransactionAction","TransactionData","ValidatedTransaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","access_list","action","action","address","address","apply","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_payload","encode_payload","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gas_limit","gas_limit","gas_price","gas_price","hash","hash","header","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","input","input","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","max_fee_per_gas","max_priority_fee_per_gas","new","nonce","nonce","ommers","proof_size_base_cost","rlp_append","rlp_append","rlp_append","rlp_append","serialize","serialize","serialize","serialize","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","storage_keys","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fp_ethereum"],[381,"dyn_clone::sealed"],[382,"primitive_types"],[383,"frame_support::dispatch"],[384,"fp_evm"],[385,"frame_support::dispatch"],[386,"alloc::vec"],[387,"parity_scale_codec::error"],[388,"parity_scale_codec::codec"],[389,"rlp::rlpin"],[390,"rlp::error"],[391,"ethereum::enveloped"],[392,"serde::de"],[393,"bytes::bytes_mut"],[394,"parity_scale_codec::codec"],[395,"core::fmt"],[396,"core::fmt"],[397,"ethereum::transaction"],[398,"rlp::stream"],[399,"serde::ser"],[400,"core::any"],[401,"scale_info::ty"]],"d":["","","","","EIP-1559 receipt type","EIP-1559 transaction","EIP-2930 receipt type","EIP-2930 transaction","Legacy receipt type","Legacy transaction typeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,15,15,14,4,14,4,14,4,0,0,0,0,0,0,0,12,13,14,15,16,17,4,12,12,17,13,16,44,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,17,12,13,14,15,16,17,4,12,13,14,15,16,17,4,13,12,13,13,14,14,15,15,16,16,17,4,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,13,14,15,16,4,12,13,14,15,16,17,4,14,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,4,4,4,12,13,14,15,16,17,4,12,12,13,14,15,16,17,17,4,4,4,12,12,13,13,14,14,15,15,16,16,17,17,4,4,12,12,13,13,14,14,15,15,16,16,17,17,4,4,12,17,12,17,17,4,45,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,17,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,12,12,12,17,45,12,13,15,16,17,13,14,15,16,4,12,13,14,15,16,17,4,16,12,13,14,15,16,17,4,12,13,14,15,16,17,4,13,45,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,14,15,16,17,4,4,13,14,15,16,17,4,12,13,14,15,16,17,4,12,13,14,15,16,17,4,12,17,12,13,14,15,16,17,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,0,[[3,4],[[8,[[2,[5,6]],7]]]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[4,4],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[8,[12,18]]],19],[20,[[8,[13,21]]]],[-1,[[8,[13,18]]],19],[[[22,[9]]],[[8,[14,23]]]],[-1,[[8,[14,18]]],19],[20,[[8,[15,21]]]],[-1,[[8,[15,18]]],19],[-1,[[8,[16,18]]],19],[20,[[8,[16,21]]]],[-1,[[8,[17,18]]],19],[[[22,[9]]],[[8,[4,23]]]],[-1,[[8,[4,18]]],19],[[[22,[9]]],[[8,[-1,18]]],[]],[[[22,[9]]],[[8,[-1,18]]],[]],[[[22,[9]]],[[8,[-1,18]]],[]],[[[22,[9]]],[[8,[-1,18]]],[]],[[[22,[9]]],[[8,[-1,18]]],[]],[[[22,[9]]],[[8,[-1,18]]],[]],[[[22,[9]]],[[8,[-1,18]]],[]],[[24,[22,[9]]],[[8,[-1,18]]],[]],[[24,[22,[9]]],[[8,[-1,18]]],[]],[[24,[22,[9]]],[[8,[-1,18]]],[]],[[24,[22,[9]]],[[8,[-1,18]]],[]],[[24,[22,[9]]],[[8,[-1,18]]],[]],[[24,[22,[9]]],[[8,[-1,18]]],[]],[[24,[22,[9]]],[[8,[-1,18]]],[]],[[24,-1],[[8,[-2,18]]],19,[]],[[24,-1],[[8,[-2,18]]],19,[]],[[24,-1],[[8,[-2,18]]],19,[]],[[24,-1],[[8,[-2,18]]],19,[]],[[24,-1],[[8,[-2,18]]],19,[]],[[24,-1],[[8,[-2,18]]],19,[]],[[24,-1],[[8,[-2,18]]],19,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[-1,[[8,[13]]],26],[-1,[[8,[14]]],26],[-1,[[8,[15]]],26],[-1,[[8,[16]]],26],[-1,[[8,[4]]],26],[25,2],[25,2],[25,2],[25,2],[25,2],[25,2],[25,2],[14,27],[4,27],[[12,-1],2,[28,29]],[[13,-1],2,[28,29]],[[14,-1],2,[28,29]],[[15,-1],2,[28,29]],[[16,-1],2,[28,29]],[[17,-1],2,[28,29]],[[4,-1],2,[28,29]],[[12,12],30],[[13,13],30],[[14,14],30],[[15,15],30],[[16,16],30],[[17,17],30],[[4,4],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[12,31],32],[[13,31],[[8,[2,33]]]],[[14,31],[[8,[2,33]]]],[[15,31],[[8,[2,33]]]],[[16,31],[[8,[2,33]]]],[[17,31],[[8,[2,33]]]],[[4,31],[[8,[2,33]]]],[4,12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[34,17],[-1,-1,[]],[34,4],[35,4],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],0,0,0,0,[17,36],[4,36],0,[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[15,[11,[9]],37,37,[38,[37]],[38,[37]],[38,[37]],37,[38,[39]],[11,[[2,[3,[11,[36]]]]]]],12],0,0,0,[12,39],[[13,40],2],[[15,40],2],[[16,40],2],[[17,40],2],[[13,-1],8,41],[[14,-1],8,41],[[15,-1],8,41],[[16,-1],8,41],[[4,-1],8,41],[12,25],[13,25],[14,25],[15,25],[16,25],[17,25],[4,25],0,[[-1,[22,[9]]],[[11,[9]]],[]],[[-1,[22,[9]]],[[11,[9]]],[]],[[-1,[22,[9]]],[[11,[9]]],[]],[[-1,[22,[9]]],[[11,[9]]],[]],[[-1,[22,[9]]],[[11,[9]]],[]],[[-1,[22,[9]]],[[11,[9]]],[]],[[-1,[22,[9]]],[[11,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[14,[[38,[9]]]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[4,[[38,[9]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",381],[15,"tuple"],[3,"H160",382],[4,"Transaction",0],[3,"PostDispatchInfo",383],[4,"CallOrCreateInfo",384],[6,"DispatchErrorWithPostInfo",383],[4,"Result",385],[15,"u8"],[15,"array"],[3,"Vec",386],[3,"TransactionData",0],[3,"Log",0],[4,"Receipt",0],[4,"TransactionAction",0],[3,"AccessListItem",0],[3,"LegacyTransactionMessage",0],[3,"Error",387],[8,"Input",388],[3,"Rlp",389],[4,"DecoderError",390],[15,"slice"],[4,"EnvelopedDecoderError",391],[15,"u32"],[15,"usize"],[8,"Deserializer",392],[3,"BytesMut",393],[8,"Output",388],[8,"Sized",394],[15,"bool"],[3,"Formatter",395],[6,"Result",395],[3,"Error",395],[3,"LegacyTransaction",396],[4,"TransactionV1",396],[3,"H256",382],[3,"U256",382],[4,"Option",397],[15,"u64"],[3,"RlpStream",398],[8,"Serializer",399],[3,"TypeId",400],[3,"Type",401],[8,"ValidatedTransaction",0],[6,"Block",0]],"b":[[83,"impl-Decodable-for-Log"],[84,"impl-Decode-for-Log"],[85,"impl-EnvelopedDecodable-for-ReceiptV3"],[86,"impl-Decode-for-ReceiptV3"],[87,"impl-Decodable-for-TransactionAction"],[88,"impl-Decode-for-TransactionAction"],[89,"impl-Decode-for-AccessListItem"],[90,"impl-Decodable-for-AccessListItem"],[92,"impl-EnvelopedDecodable-for-TransactionV2"],[93,"impl-Decode-for-TransactionV2"],[193,"impl-From%3CLegacyTransaction%3E-for-TransactionV2"],[194,"impl-From%3CTransactionV1%3E-for-TransactionV2"]]},\
"fp_evm":{"doc":"","t":"RRRSSSSEDNNNSSSSSNSSSSSSSSSSSSSNGENDDDDDNNNNGSSSSSSSSSSSSSSSSSSSNSSSSSSNNNDDEEEENNISSSSNNNDSSRNNNNNNESSSSSSSSSIDSSSSSSSNSSSSNDNNNNNSNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSIEIDGINSSSSNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSNNNNNSEDNNNDDSRDSLLLLLLLLLLLLLLLLLLLMMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKMKMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKKKMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMKMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLMLKMMMMLMMMMMLKLLMMMMMMMMKKMMKLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMFLLLMMMMMM","n":["ACCOUNT_BASIC_PROOF_SIZE","ACCOUNT_CODES_METADATA_PROOF_SIZE","ACCOUNT_STORAGE_PROOF_SIZE","ADD","ADDMOD","ADDRESS","AND","AccessedStorage","Account","AccountCodes","AccountStorages","Answer","BALANCE","BASE","BASEFEE","BLOCKHASH","BYTE","BalanceTooLow","CALL","CALLCODE","CALLDATACOPY","CALLDATALOAD","CALLDATASIZE","CALLER","CALLVALUE","CHAINID","CODECOPY","CODESIZE","COINBASE","CREATE","CREATE2","Call","CallInfo","CallOrCreateInfo","CallTooDeep","CheckEvmTransaction","CheckEvmTransactionConfig","CheckEvmTransactionInput","Config","Context","Create","CreateCollision","CreateContractLimit","CreateEmpty","CreateInfo","DELEGATECALL","DIFFICULTY","DIV","DUP1","DUP10","DUP11","DUP12","DUP13","DUP14","DUP15","DUP16","DUP2","DUP3","DUP4","DUP5","DUP6","DUP7","DUP8","DUP9","DesignatedInvalid","EOFMAGIC","EQ","EXP","EXTCODECOPY","EXTCODEHASH","EXTCODESIZE","Err","Error","Error","ExecutionInfo","ExecutionInfoV2","ExitError","ExitReason","ExitRevert","ExitSucceed","Fatal","Fatal","FeeCalculator","GAS","GASLIMIT","GASPRICE","GT","GasLimitTooHigh","GasLimitTooLow","GasPriceTooLow","GenesisAccount","INVALID","ISZERO","IS_EMPTY_CHECK_PROOF_SIZE","InvalidChainId","InvalidCode","InvalidFeeInput","InvalidJump","InvalidRange","InvalidSignature","IsPrecompileResult","JUMP","JUMPDEST","JUMPI","LOG0","LOG1","LOG2","LOG3","LOG4","LT","LinearCostPrecompile","Log","MLOAD","MOD","MSIZE","MSTORE","MSTORE8","MUL","MULMOD","MaxNonce","NOT","NUMBER","OR","ORIGIN","Ok","Opcode","Other","OutOfFund","OutOfGas","OutOfGas","OutOfOffset","PC","PCUnderflow","POP","PUSH0","PUSH1","PUSH10","PUSH11","PUSH12","PUSH13","PUSH14","PUSH15","PUSH16","PUSH17","PUSH18","PUSH19","PUSH2","PUSH20","PUSH21","PUSH22","PUSH23","PUSH24","PUSH25","PUSH26","PUSH27","PUSH28","PUSH29","PUSH3","PUSH30","PUSH31","PUSH32","PUSH4","PUSH5","PUSH6","PUSH7","PUSH8","PUSH9","Precompile","PrecompileFailure","PrecompileHandle","PrecompileOutput","PrecompileResult","PrecompileSet","PriorityFeeTooHigh","RETURN","RETURNDATACOPY","RETURNDATASIZE","REVERT","Returned","Revert","Revert","Reverted","SAR","SDIV","SELFBALANCE","SGT","SHA3","SHL","SHR","SIGNEXTEND","SLOAD","SLT","SMOD","SSTORE","STATICCALL","STOP","SUB","SUICIDE","SWAP1","SWAP10","SWAP11","SWAP12","SWAP13","SWAP14","SWAP15","SWAP16","SWAP2","SWAP3","SWAP4","SWAP5","SWAP6","SWAP7","SWAP8","SWAP9","StackOverflow","StackUnderflow","Stopped","Succeed","Suicided","TIMESTAMP","TransactionValidationError","Transfer","TxNonceTooHigh","TxNonceTooLow","UnknownError","UsedGas","Vicinity","WORD","WRITE_PROOF_SIZE","WeightInfo","XOR","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","access_list","address","address","apparent_value","as_u8","as_usize","balance","balance","base_fee","berlin","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_gas_limit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_l64_after_gas","call_stack_limit","call_stipend","caller","chain_id","chain_id","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code_address","config","context","create_contract_limit","create_increase_nonce","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decrease_clears_refund","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disallow_executable_format","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","effective","empty_considered_exists","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err_on_call_with_more_gas","estimate","evm_config","execute","execute","execute","exit_reason","exit_reason","exit_reason","exit_reason","exit_status","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_primitive","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frontier","gas_access_list_address","gas_access_list_storage_key","gas_account_access_cold","gas_balance","gas_call","gas_expbyte","gas_ext_code","gas_ext_code_hash","gas_limit","gas_limit","gas_price","gas_price","gas_sload","gas_sload_cold","gas_sstore_reset","gas_sstore_set","gas_storage_read_warm","gas_suicide","gas_suicide_new_account","gas_transaction_call","gas_transaction_create","gas_transaction_non_zero_data","gas_transaction_zero_data","has_base_fee","has_bitwise_shifting","has_chain_id","has_create2","has_delegate_call","has_ext_code_hash","has_push0","has_return_data","has_revert","has_self_balance","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","increase_state_access_gas","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_error","is_fatal","is_precompile","is_push","is_revert","is_static","is_succeed","is_transactional","istanbul","log","logs","logs","logs","logs","london","max_fee_per_gas","max_initcode_size","max_priority_fee_per_gas","max_refund_quotient","memory_limit","merge","min_gas_price","new","new_from_weight_limit","nonce","nonce","nonce","origin","output","proof_size_base_cost","proof_size_limit","proof_size_usage","record_cost","record_external_cost","ref_time_limit","ref_time_usage","refund_external_cost","refund_proof_size","refund_ref_time","refund_sstore_clears","remaining_gas","remaining_proof_size","remaining_ref_time","rlp_append","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shanghai","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","sstore_gas_metering","sstore_revert_under_stipend","stack_limit","standard","storage","target","to","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_record_proof_size_or_fail","try_record_ref_time_or_fail","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","used_gas","used_gas","used_gas","used_gas","using_encoded","validate_common","validate_in_block_for","validate_in_pool_for","value","value","value","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warm_coinbase_address","weight_info","weight_info","weight_info","weight_limit","weight_per_gas","with_balance_for","with_base_fee","with_chain_id","extra_cost","is_precompile","exit_status","exit_status","exit_status","output"],"q":[[0,"fp_evm"],[1301,"fp_evm::IsPrecompileResult"],[1303,"fp_evm::PrecompileFailure"],[1307,"dyn_clone::sealed"],[1308,"alloc::vec"],[1309,"primitive_types"],[1310,"core::option"],[1311,"core::clone"],[1312,"parity_scale_codec::error"],[1313,"core::result"],[1314,"parity_scale_codec::codec"],[1315,"parity_scale_codec::codec"],[1316,"rlp::error"],[1317,"serde::de"],[1318,"serde::de"],[1319,"parity_scale_codec::codec"],[1320,"core::fmt"],[1321,"core::fmt"],[1322,"core::fmt"],[1323,"primitive_types"],[1324,"rlp::stream"],[1325,"serde::ser"],[1326,"serde::ser"],[1327,"scale_info::ty"],[1328,"core::ops::function"],[1329,"sp_arithmetic::per_things"]],"d":["<code>System::Account</code> 16(hash) + 20 (key) + 60 …","<code>AccountCodesMetadata</code> read, temptatively 16 (hash) + 20 …","16 (hash1) + 20 (key1) + 16 (hash2) + 32 (key2) + 32 …","<code>ADD</code>","<code>ADDMOD</code>","<code>ADDRESS</code>","<code>AND</code>","","Basic account information.","","","","<code>BALANCE</code>","","<code>BASEFEE</code>","<code>BLOCKHASH</code>","<code>BYTE</code>","The transaction balance is too low","<code>CALL</code>","<code>CALLCODE</code>","<code>CALLDATACOPY</code>","<code>CALLDATALOAD</code>","<code>CALLDATASIZE</code>","<code>CALLER</code>","<code>CALLVALUE</code>","<code>CHAINID</code>","<code>CODECOPY</code>","<code>CODESIZE</code>","<code>COINBASE</code>","<code>CREATE</code>","<code>CREATE2</code>","","","","Call stack is too deep (runtime).","","","","Runtime configuration.","Context of the runtime.","","Create opcode encountered collision (runtime).","Create init code exceeds limit (runtime).","Attempt to create an empty account (runtime, unused).","","<code>DELEGATECALL</code>","<code>DIFFICULTY</code>","<code>DIV</code>","<code>DUPn</code>","","","","","","","","","","","","","","","","Encountered the designated invalid opcode.","See EIP-3541","<code>EQ</code>","<code>EXP</code>","<code>EXTCODECOPY</code>","<code>EXTCODEHASH</code>","<code>EXTCODESIZE</code>","Contains the error value","Machine returns a normal EVM error.","Reverts the state changes and consume all the gas.","","","Exit error reason.","Exit reason.","Exit revert reason.","Exit succeed reason.","Machine encountered an error that is not supposed to be …","Mark this failure as fatal, and all EVM execution stacks …","Trait that outputs the current transaction gas price.","<code>GAS</code>","<code>GASLIMIT</code>","<code>GASPRICE</code>","<code>GT</code>","The transaction gas limit is too hign","The transaction gas limit is too low","The transaction gas price is too low","Account definition used for genesis block construction.","<code>INVALID</code>","<code>ISZERO</code>","Account basic proof size + 5 bytes max of <code>decode_len</code> call.","The chain id is incorrect","Invalid opcode during execution or starting byte is 0xef. …","The transaction fee input is invalid","Jump destination is invalid.","An opcode accesses memory region, but the region is …","The transaction signature is invalid","","<code>JUMP</code>","<code>JUMPDEST</code>","<code>JUMPI</code>","<code>LOGn</code>","","","","","<code>LT</code>","","","<code>MLOAD</code>","<code>MOD</code>","<code>MSIZE</code>","<code>MSTORE</code>","<code>MSTORE8</code>","<code>MUL</code>","<code>MULMOD</code>","Nonce reached maximum value of 2^64-1 …","<code>NOT</code>","<code>NUMBER</code>","<code>OR</code>","<code>ORIGIN</code>","Contains the success value","Opcode enum. One-to-one corresponding to an <code>u8</code> value.","Other normal errors.","Not enough fund to start the execution (runtime).","","Execution runs out of gas (runtime).","An opcode accesses external information, but the request …","<code>PC</code>","PC underflowed (unused).","<code>POP</code>","<code>PUSHn</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One single precompile used by EVM engine.","Data returned by a precompile in case of failure.","Handle provided to a precompile to interact with the EVM.","Data returned by a precompile on success.","","A set of precompiles.","The transaction priority fee is too high","<code>RETURN</code>","<code>RETURNDATACOPY</code>","<code>RETURNDATASIZE</code>","<code>REVERT</code>","Machine encountered an explicit return.","Machine encountered an explicit revert.","Reverts the state changes. Returns the provided error …","Machine encountered an explicit revert.","<code>SAR</code>","<code>SDIV</code>","<code>SELFBALANCE</code>","<code>SGT</code>","<code>SHA3</code>","<code>SHL</code>","<code>SHR</code>","<code>SIGNEXTEND</code>","<code>SLOAD</code>","<code>SLT</code>","<code>SMOD</code>","<code>SSTORE</code>","<code>STATICCALL</code>","<code>STOP</code>","<code>SUB</code>","<code>SUICIDE</code>","<code>SWAPn</code>","","","","","","","","","","","","","","","","Trying to push into a stack over stack limit.","Trying to pop from an empty stack.","Machine encountered an explicit stop.","Machine has succeeded.","Machine encountered an explicit suicide.","<code>TIMESTAMP</code>","Transaction validation errors","Transfer from source to target, with given value.","The transaction nonce is too high","The transaction nonce is too low","Unknown error","","External input from the transaction.","","Fixed trie 32 byte hash.","","<code>XOR</code>","","","","","","","","","","","","","","","","","","","","","Execution address.","","Apparent value of the EVM.","","","Account balance.","Account balance.","","Berlin hard fork configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Perform subcall in provided context. Precompile specifies …","Take l64 for callcreate after gas.","Call limit.","Call stipend.","Caller of the EVM.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Account code.","Retreive the code address (what is the address of the …","","Retreive the context in which the precompile is executed.","Create contract limit.","Whether create transactions and create opcode increases …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","EIP-3529","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","EIP-3541","","","","","","","","","","","","","","","","","","","","","","","","","","The result of applying a gas ratio to the most used …","Whether empty account is considered exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to throw out of gas error when …","Whether the gasometer is running in estimate mode.","","Try to execute the precompile with given <code>handle</code> which …","","Tries to execute a precompile in the precompile set. If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Frontier hard fork configuration.","Gas paid per address in transaction access list (see …","Gas paid per storage key in transaction access list (see …","Gas paid for accessing cold account.","Gas paid for BALANCE opcode.","Gas paid for CALL opcode.","Gas paid for EXP opcode for every byte.","Gas paid for extcode.","Gas paid for extcodehash.","Retreive the gas limit of this call.","","","Current transaction gas price.","Gas paid for SLOAD opcode.","Gas paid for cold SLOAD opcode.","Gas paid for sstore reset.","Gas paid for sstore set.","Gas paid for accessing ready storage.","Gas paid for SUICIDE opcode.","Gas paid for SUICIDE opcode when it hits a new account.","Gas paid for a message call transaction.","Gas paid for a contract creation transaction.","Gas paid for non-zero data in a transaction.","Gas paid for zero data in a transaction.","Has ext block fee. See EIP-3198","Has bitwise shifting.","Has chain ID.","Has create2.","Has delegate call.","Has ext code hash.","Has PUSH0 opcode. See EIP-3855","Has return data.","Has revert.","Has self balance.","","","","","","","","","","","","","","","EIP-2929","","","","","","","","","","","","","","","","","","","","","","","","","","Retreive the input data the precompile is called with.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the exit is error.","Whether the exit is fatal.","Check if the given address is a precompile. Should only be …","Whether the opcode is a push opcode.","Whether the exit is revert.","Is the precompile call is done statically.","Whether the exit is succeeded.","","Istanbul hard fork configuration.","Record a log.","","","","","london hard fork configuration.","","EIP-3860, maximum size limit of init_code.","","EIP-3529","Memory limit.","The Merge (Paris) hard fork configuration.","Return the minimal required gas price.","","","","Account nonce.","Account nonce.","Origin of the transaction.","","","","","Record cost to the Runtime gasometer.","Record Substrate specific cost.","","","Refund Substrate specific cost.","","","Gas paid for sstore refund.","Retreive the remaining gas.","","","","","","","","","","","","","","","","","","Shanghai hard fork configuration.","","","","","","","","","","","","","","","Source address.","EIP-1283.","EIP-1706.","Stack limit.","The used_gas as returned by the evm gasometer on exit.","Full account storage.","Target addressransfer value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","EIP-3651","","","","","<code>WeightPerGas</code> is an approximate ratio of the amount of …","","","","","","","","",""],"i":[0,0,0,3,3,3,3,0,0,69,69,57,3,70,3,3,3,53,3,3,3,3,3,3,3,3,3,3,3,3,3,21,0,0,28,0,0,0,0,0,21,28,28,28,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,28,3,3,3,3,3,3,45,15,30,0,0,0,0,0,0,15,30,0,3,3,3,3,53,53,53,0,3,3,0,53,28,53,28,28,53,0,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,28,3,3,3,3,45,0,28,28,57,28,28,3,28,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,53,3,3,3,3,23,15,30,27,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,28,28,23,15,23,3,0,0,53,53,53,0,0,70,0,0,3,16,14,10,17,18,6,19,21,15,22,23,24,25,26,27,28,29,30,3,47,14,24,14,3,3,25,26,50,6,16,17,18,19,21,15,22,23,24,25,26,27,28,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,50,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,46,6,6,6,14,47,50,16,25,16,14,10,17,18,6,19,21,15,22,23,24,25,26,27,28,29,30,3,16,14,10,17,18,6,19,21,15,22,23,24,25,26,27,28,29,30,3,26,46,51,46,6,6,24,16,17,18,19,21,15,22,23,24,24,25,26,27,28,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,6,16,25,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,6,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,18,6,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,16,17,18,19,21,15,22,23,24,25,26,27,28,29,30,3,16,16,16,17,17,17,18,18,18,19,19,19,21,21,21,15,15,15,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,29,29,29,30,30,30,3,3,3,6,6,50,71,70,72,73,74,19,22,29,47,50,51,53,16,14,10,17,18,6,19,21,15,22,23,24,25,26,27,28,29,30,3,69,47,50,51,53,53,16,14,10,17,18,6,57,19,21,15,15,15,15,15,22,23,24,25,26,27,28,29,30,30,3,69,69,47,47,50,50,51,51,53,53,16,16,14,14,10,10,17,17,18,18,6,6,57,57,19,19,21,21,15,15,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,3,3,53,69,69,47,47,50,50,51,51,53,53,16,16,14,14,10,10,17,17,18,18,6,6,57,57,19,19,21,21,15,15,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,3,3,6,6,6,6,6,6,6,6,6,46,47,47,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,16,17,18,19,21,15,22,23,24,25,26,27,28,3,6,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,46,47,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,16,25,15,15,72,3,15,46,15,50,6,46,73,74,19,22,6,47,6,47,6,6,6,75,51,17,47,25,26,16,29,51,17,17,46,46,17,17,46,17,17,6,46,17,17,24,16,17,18,19,21,15,22,23,24,25,26,27,28,3,6,16,17,18,19,21,15,22,23,24,25,26,27,28,3,10,6,6,6,18,26,10,47,16,17,18,19,21,15,22,23,24,25,26,27,28,3,16,14,10,17,18,6,19,21,15,22,23,24,25,26,27,28,29,30,3,24,51,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,17,17,16,17,18,19,21,15,22,23,24,25,26,27,28,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,16,17,18,19,21,15,22,23,24,25,26,27,28,3,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,17,18,19,21,15,23,24,25,27,28,3,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,73,74,19,22,3,51,51,51,73,74,47,10,19,22,69,47,50,51,53,16,14,10,17,18,6,57,19,21,15,22,23,24,25,26,27,28,29,30,3,6,73,74,19,51,0,51,51,51,76,76,77,78,79,78],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,[3,4],[3,5],0,0,0,[[],6],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,9,[11,[10]],[8,[4]],[11,[12]],13,14],[[2,[15,[8,[4]]]]],[]],0,0,0,0,0,0,[[],-1,[]],[[],-1,[]],[16,16],[14,14],[10,10],[17,17],[18,18],[6,6],[[[19,[-1]]],[[19,[-1]]],20],[21,21],[15,15],[[[22,[-1]]],[[22,[-1]]],20],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[3,3],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,9,[]],0,[-1,14,[]],0,0,0,[-1,[[32,[16,31]]],33],[-1,[[32,[17,31]]],33],[-1,[[32,[18,31]]],33],[-1,[[32,[[19,[-2]],31]]],33,34],[-1,[[32,[21,31]]],33],[-1,[[32,[15,31]]],33],[-1,[[32,[[22,[-2]],31]]],33,34],[-1,[[32,[23,31]]],33],[-1,[[32,[24,31]]],33],[35,[[32,[24,36]]]],[-1,[[32,[25,31]]],33],[-1,[[32,[26,31]]],33],[-1,[[32,[27,31]]],33],[-1,[[32,[28,31]]],33],[-1,[[32,[3,31]]],33],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,[37,[4]]],[[32,[-1,31]]],[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],[[38,-1],[[32,[-2,31]]],33,[]],0,[[],16],[[],25],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[32,[16]]],39],[-1,[[32,[17]]],39],[-1,[[32,[18]]],39],[-1,[[32,[[19,[-2]]]]],39,40],[-1,[[32,[21]]],39],[-1,[[32,[15]]],39],[-1,[[32,[[22,[-2]]]]],39,40],[-1,[[32,[23]]],39],[-1,[[32,[24]]],39],[-1,[[32,[25]]],39],[-1,[[32,[26]]],39],[-1,[[32,[27]]],39],[-1,[[32,[28]]],39],[-1,[[32,[3]]],39],0,[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],0,0,[3,[[8,[4]]]],[[16,-1],2,[41,42]],[[17,-1],2,[41,42]],[[18,-1],2,[41,42]],[[[19,[-1]],-2],2,43,[41,42]],[[21,-1],2,[41,42]],[[15,-1],2,[41,42]],[[[22,[-1]],-2],2,43,[41,42]],[[23,-1],2,[41,42]],[[24,-1],2,[41,42]],[[25,-1],2,[41,42]],[[26,-1],2,[41,42]],[[27,-1],2,[41,42]],[[28,-1],2,[41,42]],[[3,-1],2,[41,42]],[[16,16],13],[[17,17],13],[[18,18],13],[[[19,[-1]],[19,[-1]]],13,44],[[21,21],13],[[15,15],13],[[[22,[-1]],[22,[-1]]],13,44],[[23,23],13],[[24,24],13],[[25,25],13],[[26,26],13],[[27,27],13],[[28,28],13],[[29,29],13],[[30,30],13],[[3,3],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,0,0,[-1,45,46],[[[37,[4]],12],[[32,[[2,[23,[8,[4]]]],30]]]],[[-1,-2],[[11,[[32,[29,30]]]]],[],46],0,0,0,0,0,[[47,48],49],[[50,48],49],[[[51,[-1]],48],49,[52,[54,[53]]]],[[53,48],49],[[16,48],49],[[14,48],[[32,[2,55]]]],[[10,48],[[32,[2,55]]]],[[17,48],49],[[18,48],49],[[6,48],[[32,[2,55]]]],[[[19,[-1]],48],49,52],[[21,48],49],[[15,48],[[32,[2,55]]]],[[[22,[-1]],48],49,52],[[23,48],[[32,[2,55]]]],[[24,48],[[32,[2,55]]]],[[25,48],[[32,[2,55]]]],[[26,48],49],[[27,48],[[32,[2,55]]]],[[28,48],[[32,[2,55]]]],[[29,48],[[32,[2,55]]]],[[30,48],[[32,[2,55]]]],[[3,48],[[32,[2,55]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,53],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[27,15],[23,15],[28,15],[56,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[28,30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],53],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],6],0,0,0,0,0,0,0,0,[-1,[[11,[12]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[-1,[[37,[4]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[15,13],[15,13],[[-1,9,12],57,[]],[3,[[11,[4]]]],[15,13],[-1,13,[]],[15,13],0,[[],6],[[-1,9,[8,[58]],[8,[4]]],[[32,[2,28]]],[]],0,0,0,0,[[],6],0,0,0,0,0,[[],6],[[],[[2,[59,60]]]],[[50,47,[11,[60]],[11,[12]]],[[51,[-1]]],[[54,[53]]]],[[[11,[60]],[11,[12]]],[[32,[[11,[17]],61]]]],0,0,0,0,0,0,0,0,[[-1,12],[[32,[2,28]]],[]],[[-1,[11,[12]],[11,[12]],[11,[12]]],[[32,[2,28]]],[]],0,0,[[-1,[11,[12]],[11,[12]]],2,[]],[[17,12],2],[[17,12],2],0,[-1,12,[]],[17,[[11,[12]]]],[17,[[11,[12]]]],[[24,62],2],[[16,-1],32,63],[[17,-1],32,63],[[18,-1],32,63],[[[19,[-1]],-2],32,64,63],[[21,-1],32,63],[[15,-1],32,63],[[[22,[-1]],-2],32,64,63],[[23,-1],32,63],[[24,-1],32,63],[[25,-1],32,63],[[26,-1],32,63],[[27,-1],32,63],[[28,-1],32,63],[[3,-1],32,63],[[],6],[16,5],[17,5],[18,5],[[[19,[-1]]],5,43],[21,5],[15,5],[[[22,[-1]]],5,43],[23,5],[24,5],[25,5],[26,5],[27,5],[28,5],[3,5],0,0,0,0,0,0,0,0,[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[[-1,[37,[4]]],[[8,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[[17,12],[[32,[2,28]]]],[[17,12],[[32,[2,28]]]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[7,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,[[8,[4]]],[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[3,-1],-2,67,[]],[[[51,[-1]]],[[32,[[51,[-1]],-1]]],[[54,[53]]]],[[[51,[-1]],25],[[32,[[51,[-1]],-1]]],[[54,[53]]]],[[[51,[-1]],25],[[32,[[51,[-1]],-1]]],[[54,[53]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[12,68,12],12],[[[51,[-1]],25],[[32,[[51,[-1]],-1]]],[[54,[53]]]],[[[51,[-1]]],[[32,[[51,[-1]],-1]]],[[54,[53]]]],[[[51,[-1]]],[[32,[[51,[-1]],-1]]],[[54,[53]]]],0,0,0,0,0,0],"c":[],"p":[[3,"Private",1307],[15,"tuple"],[3,"Opcode",0],[15,"u8"],[15,"usize"],[3,"Config",0],[15,"array"],[3,"Vec",1308],[3,"H160",1309],[3,"Transfer",0],[4,"Option",1310],[15,"u64"],[15,"bool"],[3,"Context",0],[4,"ExitReason",0],[3,"Vicinity",0],[3,"WeightInfo",0],[3,"UsedGas",0],[3,"ExecutionInfoV2",0],[8,"Clone",1311],[4,"CallOrCreateInfo",0],[3,"ExecutionInfo",0],[4,"ExitSucceed",0],[3,"Log",0],[3,"Account",0],[3,"GenesisAccount",0],[4,"ExitRevert",0],[4,"ExitError",0],[3,"PrecompileOutput",0],[4,"PrecompileFailure",0],[3,"Error",1312],[4,"Result",1313],[8,"Input",1314],[8,"Decode",1314],[3,"Rlp",1315],[4,"DecoderError",1316],[15,"slice"],[15,"u32"],[8,"Deserializer",1317],[8,"Deserialize",1317],[8,"Output",1314],[8,"Sized",1318],[8,"Encode",1314],[8,"PartialEq",1319],[6,"PrecompileResult",0],[8,"PrecompileHandle",0],[3,"CheckEvmTransactionInput",0],[3,"Formatter",1320],[6,"Result",1320],[3,"CheckEvmTransactionConfig",0],[3,"CheckEvmTransaction",0],[8,"Debug",1320],[4,"TransactionValidationError",0],[8,"From",1321],[3,"Error",1320],[4,"ExitFatal",1322],[4,"IsPrecompileResult",0],[3,"H256",1309],[3,"U256",1309],[3,"Weight",1323],[15,"str"],[3,"RlpStream",1324],[8,"Serializer",1325],[8,"Serialize",1325],[3,"TypeId",1326],[3,"Type",1327],[8,"FnOnce",1328],[3,"Perbill",1329],[4,"AccessedStorage",0],[8,"LinearCostPrecompile",0],[8,"Precompile",0],[8,"PrecompileSet",0],[6,"CallInfo",0],[6,"CreateInfo",0],[8,"FeeCalculator",0],[13,"Answer",1301],[13,"Error",1303],[13,"Revert",1303],[13,"Fatal",1303]],"b":[[415,"impl-Decode-for-Log"],[416,"impl-Decodable-for-Log"],[688,"impl-From%3CExitRevert%3E-for-ExitReason"],[689,"impl-From%3CExitSucceed%3E-for-ExitReason"],[690,"impl-From%3CExitError%3E-for-ExitReason"],[691,"impl-From%3CExitFatal%3E-for-ExitReason"]]},\
"fp_rpc":{"doc":"","t":"IIIEIDLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLKLLLLLKMMLKLLMLLMMLLLLLLLLLLLLLLLL","n":["ConvertTransaction","ConvertTransactionRuntimeApi","EthereumRuntimeRPCApi","NoTransactionConverter","RuntimeStorageOverride","TransactionStatus","__clone_box","account_basic","account_code_at","author","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","call","call_before_version_2","call_before_version_4","call_before_version_5","chain_id","clear","clone","clone_into","contract_address","convert_transaction","convert_transaction","convert_transaction","convert_transaction_before_version_2","create","create_before_version_2","create_before_version_4","create_before_version_5","current_all","current_all_before_version_2","current_all_before_version_4","current_block","current_block_before_version_2","current_receipts","current_receipts_before_version_4","current_transaction_statuses","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","drop","drop","elasticity","encode_to","eq","equivalent","equivalent","equivalent","extrinsic_filter","extrinsic_filter_before_version_2","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","gas_limit_multiplier_support","gas_price","identity","init","init","into","into","into_account_id_bytes","into_mut","into_mut","into_ref","into_ref","is_clear","is_enabled","logs","logs_bloom","pending_block","set_overlayed_changes","size_hint","storage_at","to","to_keyed_vec","to_owned","transaction_hash","transaction_index","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"fp_rpc"],[114,"dyn_clone::sealed"],[115,"primitive_types"],[116,"evm::backend"],[117,"sp_api"],[118,"core::result"],[119,"alloc::vec"],[120,"primitive_types"],[121,"primitive_types"],[122,"sp_runtime"],[123,"fp_evm"],[124,"ethereum::transaction"],[125,"ethereum::receipt"],[126,"ethereum::block"],[127,"parity_scale_codec::codec"],[128,"sp_arithmetic::per_things"],[129,"parity_scale_codec::codec"],[130,"core::fmt"],[131,"core::fmt"],[132,"sp_state_machine::overlayed_changes"],[133,"core::any"],[134,"scale_info::ty"]],"d":["Fallback transaction converter when the …","","API necessary for Ethereum-compatibility layer.","No fallback transaction converter is available.","","","","Returns pallet_evm::Accounts by address.","For a given account address, returns …","Returns the converted FindAuthor::find_author authority id.","","","","","","","","","Returns a frame_ethereum::call response. If <code>estimate</code> is …","","","Returns runtime defined pallet_evm::ChainId.","","","","","","","","","","Returns a frame_ethereum::create response.","","","","Return all the current data for a block in a single …","Return all the current data for a block in a single …","Return the current block.","Return the current block. Legacy.","Return the current receipt.","Return the current receipt.","Return the current transaction status.","","","","","","","","","","","","Return the elasticity multiplier.","","","","","","Receives a <code>Vec&lt;OpaqueExtrinsic&gt;</code> and filters all the …","Receives a <code>Vec&lt;OpaqueExtrinsic&gt;</code> and filters all the …","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Used to determine if gas limit multiplier for …","Returns FixedGasPrice::min_gas_price","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Return the pending block.","","","For a given account address and index, returns …","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,18,40,40,40,18,18,18,20,18,20,18,40,40,40,40,40,18,18,18,18,41,20,42,42,40,40,40,40,40,40,40,40,40,40,40,40,18,18,18,18,18,20,18,20,18,20,18,40,18,18,18,18,18,40,40,18,20,18,18,20,20,18,18,20,20,18,18,40,40,18,20,18,20,18,43,20,18,20,18,18,43,18,18,40,43,18,40,18,18,18,18,18,20,18,20,18,18,18,18,20,18,18,20,18,20,18,20,18],"f":[0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],[[6,[4,5]]],[]],[[-1,3],[[6,[[8,[7]],5]]],[]],[-1,[[6,[3,5]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[9,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,3,3,[8,[7]],10,10,[11,[10]],[11,[10]],[11,[10]],12,[11,[[8,[[2,[3,[8,[13]]]]]]]]],[[6,[[6,[[14,[[8,[7]]]],15]],5]]],[]],[[-1,3,3,[8,[7]],10,10,[11,[10]],[11,[10]],12],[[6,[[6,[[16,[[8,[7]]]],15]],5]]],[]],[[-1,3,3,[8,[7]],10,10,[11,[10]],[11,[10]],[11,[10]],12],[[6,[[6,[[16,[[8,[7]]]],15]],5]]],[]],[[-1,3,3,[8,[7]],10,10,[11,[10]],[11,[10]],[11,[10]],12,[11,[[8,[[2,[3,[8,[13]]]]]]]]],[[6,[[6,[[16,[[8,[7]]]],15]],5]]],[]],[-1,[[6,[17,5]]],[]],[[],-1,[]],[18,18],[[-1,-2],2,[],[]],0,[[-1,19],-2,[],[]],[[20,19],-1,[]],[[-1,19],[[6,[5]]],[]],[[-1,21],[[6,[5]]],[]],[[-1,3,[8,[7]],10,10,[11,[10]],[11,[10]],[11,[10]],12,[11,[[8,[[2,[3,[8,[13]]]]]]]]],[[6,[[6,[[14,[3]],15]],5]]],[]],[[-1,3,[8,[7]],10,10,[11,[10]],[11,[10]],12],[[6,[[6,[[16,[3]],15]],5]]],[]],[[-1,3,[8,[7]],10,10,[11,[10]],[11,[10]],[11,[10]],12],[[6,[[6,[[16,[3]],15]],5]]],[]],[[-1,3,[8,[7]],10,10,[11,[10]],[11,[10]],[11,[10]],12,[11,[[8,[[2,[3,[8,[13]]]]]]]]],[[6,[[6,[[16,[3]],15]],5]]],[]],[-1,[[6,[[2,[[11,[22]],[11,[[8,[23]]]],[11,[[8,[18]]]]]],5]]],[]],[-1,[[6,[[2,[[11,[24]],[11,[[8,[25]]]],[11,[[8,[18]]]]]],5]]],[]],[-1,[[6,[[2,[[11,[22]],[11,[[8,[25]]]],[11,[[8,[18]]]]]],5]]],[]],[-1,[[6,[[11,[22]],5]]],[]],[-1,[[6,[[11,[24]],5]]],[]],[-1,[[6,[[11,[[8,[23]]]],5]]],[]],[-1,[[6,[[11,[[8,[25]]]],5]]],[]],[-1,[[6,[[11,[[8,[18]]]],5]]],[]],[-1,[[6,[18,26]]],27],[[[28,[7]]],[[6,[-1,26]]],[]],[[29,[28,[7]]],[[6,[-1,26]]],[]],[[29,-1],[[6,[-2,26]]],27,[]],[[],18],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,2],[30,2],[-1,[[6,[[11,[31]],5]]],[]],[[18,-1],2,[32,33]],[[18,18],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,8],[[6,[[8,[19]],5]]],[]],[[-1,8],[[6,[[8,[21]],5]]],[]],[[18,34],35],[-1,-1,[]],[-1,-1,[]],0,[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,[[6,[2,5]]],[]],[-1,[[6,[10,5]]],[]],[-1,[[8,[7]]],[]],[[],30],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[3,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[[],12],0,0,[[-1,8],[[6,[[2,[[11,[22]],[11,[[8,[18]]]]]],5]]],[]],[[-1,[37,[[36,[-2]]]],29,3,[11,[10]],[11,[10]]],2,[],[]],[18,30],[[-1,3,10],[[6,[13,5]]],[]],0,[[-1,[28,[7]]],[[8,[7]]],[]],[-1,-2,[],[]],0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[9,[7]]],[]],[-1,[[9,[7]]],[]],[-1,[[8,[7]]],[]],[-1,38,[]],[-1,38,[]],[[],39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[18,19,20,29,31,32,33,35,36,38,40,60],"p":[[3,"Private",114],[15,"tuple"],[3,"H160",115],[3,"Basic",116],[4,"ApiError",117],[4,"Result",118],[15,"u8"],[3,"Vec",119],[15,"array"],[3,"U256",115],[4,"Option",120],[15,"bool"],[3,"H256",115],[3,"ExecutionInfoV2",121],[4,"DispatchError",122],[3,"ExecutionInfo",121],[15,"u64"],[3,"TransactionStatus",0],[4,"TransactionV2",123],[4,"NoTransactionConverter",0],[6,"TransactionV0",123],[6,"BlockV2",124],[4,"ReceiptV3",125],[6,"BlockV0",124],[6,"ReceiptV0",125],[3,"Error",126],[8,"Input",127],[15,"slice"],[15,"u32"],[15,"usize"],[3,"Permill",128],[8,"Output",127],[8,"Sized",129],[3,"Formatter",130],[6,"Result",130],[6,"HashingFor",131],[3,"OverlayedChanges",132],[3,"TypeId",133],[3,"Type",134],[8,"EthereumRuntimeRPCApi",0],[8,"ConvertTransaction",0],[8,"ConvertTransactionRuntimeApi",0],[8,"RuntimeStorageOverride",0]],"b":[]},\
"fp_self_contained":{"doc":"","t":"DENINQDNLLLLKLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLKLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLL","n":["CheckedExtrinsic","CheckedSignature","SelfContained","SelfContainedCall","Signed","SignedInfo","UncheckedExtrinsic","Unsigned","__clone_box","__clone_box","__clone_box","apply","apply_self_contained","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","check","check_self_contained","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","encode","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","function","get_dispatch_info","get_dispatch_info","identity","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_self_contained","is_signed","new","new_signed","new_unsigned","pre_dispatch_self_contained","serialize","signed","size_hint","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","validate","validate_self_contained","vzip","vzip","vzip"],"q":[[0,"fp_self_contained"],[131,"dyn_clone::sealed"],[132,"sp_runtime::traits"],[133,"sp_runtime::traits"],[134,"sp_runtime::traits"],[135,"core::marker"],[136,"alloc::vec"],[137,"scale_info"],[138,"sp_runtime::transaction_validity"],[139,"core::result"],[140,"parity_scale_codec::codec"],[141,"sp_runtime::traits"],[142,"parity_scale_codec::error"],[143,"parity_scale_codec::codec"],[144,"parity_scale_codec::codec"],[145,"core::fmt"],[146,"core::fmt"],[147,"frame_support::dispatch"],[148,"core::any"],[149,"scale_info::ty"],[150,"core::ops::function"],[151,"sp_runtime::transaction_validity"]],"d":["Definition of something that the external world might want …","","","A call that has self-contained functions. A self-contained …","","Validated signature info.","A extrinsic right from the external world. This is …","","","","","","Apply a self-contained function. Returns <code>None</code> if the …","","","","","","","","","","","","Check signatures of a self-contained function. Returns <code>None</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The function that should be called.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns whether the current call is a self-contained …","","","New instance of a signed extrinsic aka “transaction”.","New instance of an unsigned extrinsic aka “inherent”.","Do any pre-flight stuff for a self-contained call.","","Who this purports to be from and the number of extrinsics …","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a self-contained function. Returns <code>None</code> if the …","","",""],"i":[0,0,27,0,27,11,0,27,27,3,20,3,11,20,20,20,27,3,20,27,3,20,20,20,11,27,3,20,27,3,20,20,20,20,20,27,3,20,27,3,20,20,27,3,20,20,20,27,3,20,27,27,27,3,3,3,20,20,20,27,3,20,27,3,20,27,27,3,3,20,20,27,27,3,3,20,20,3,3,20,20,27,3,20,27,3,20,27,3,20,27,3,20,11,20,20,20,20,11,20,3,20,20,27,3,20,27,3,20,27,3,20,20,20,20,27,3,20,20,27,3,20,27,3,20,20,3,11,27,3,20],"f":[0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[[3,[-1,-2,-3,-4]],4,5],[[7,[6]]],[8,9],[8,10,11],12,[13,14]],[-1,[[16,[[15,[[6,[-1]]]]]]],[]],[-1,[[18,[17]]],[]],[-1,[[19,[17]]],[]],[-1,[[18,[17]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1,-2,-3,-4]]],[],21,[11,21],21,12],[[[20,[-1,-2,-3,-4]],-5],[[23,[22]]],[8,9],[24,8,11],[8,25],12,26],[-1,[[16,[[23,[22]]]]],[]],[[[27,[-1,-2,-3]]],[[27,[-1,-2,-3]]],28,28,28],[[[3,[-1,-2,-3,-4]]],[[3,[-1,-2,-3,-4]]],28,28,28,28],[[[20,[-1,-2,-3,-4]]],[[20,[-1,-2,-3,-4]]],28,28,28,[28,12]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[23,[[20,[-2,-3,-4,-5]],29]]],30,[],[],[],12],[[[31,[17]]],[[23,[-1,29]]],[]],[[32,[31,[17]]],[[23,[-1,29]]],[]],[[32,-1],[[23,[-2,29]]],30,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[23,[[20,[-2,-3,-4,-5]]]]],33,34,34,34,12],[5,2],[5,2],[5,2],[[[20,[-1,-2,-3,-4]]],[[19,[17]]],[],[],[],12],[[[20,[-1,-2,-3,-4]],-5],2,[],[],[],12,[35,36]],[[[27,[-1,-2,-3]],[27,[-1,-2,-3]]],37,38,38,38],[[[3,[-1,-2,-3,-4]],[3,[-1,-2,-3,-4]]],37,38,38,38,38],[[[20,[-1,-2,-3,-4]],[20,[-1,-2,-3,-4]]],37,38,38,38,[38,12]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[[27,[-1,-2,-3]],39],40,41,41,41],[[[3,[-1,-2,-3,-4]],39],40,41,41,41,41],[[[20,[-1,-2,-3,-4]],39],40,41,41,41,[41,12]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],0,[[[3,[-1,-2,-3,-4]]],42,[],43,[],[]],[[[20,[-1,-2,-3,-4]]],42,[],43,[],12],[-1,[[19,[17]]],[]],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],[[[20,[-1,-2,-3,-4]]],[[16,[37]]],21,[11,21],21,12],[[-1,16],[[16,[[20,[-2,-1,-3,-4]]]]],[11,21],21,21,12],[[-1,-2,-3,-4],[[20,[-2,-1,-3,-4]]],[],[],[],12],[-1,[[20,[-2,-1,-3,-4]]],[],[],[],12],[[-1,[4,[-1]],5],[[16,[[23,[2,22]]]]],[]],[[[20,[-1,-2,-3,-4]],-5],23,24,24,24,12,44],0,[[[20,[-1,-2,-3,-4]]],5,[],[],[],12],[[-1,[31,[17]]],[[19,[17]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[18,[17]]],[]],[-1,[[18,[17]]],[]],[-1,[[19,[17]]],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[[],46],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1,-2,-3,-4]],-5],-6,[],[],[],12,47,[]],[[[3,[-1,-2,-3,-4]],48,4,5],49,[8,9],[8,10,11],12,[13,14]],[[-1,[4,[-1]],5],[[16,[49]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",131],[15,"tuple"],[3,"CheckedExtrinsic",0],[6,"DispatchInfoOf",132],[15,"usize"],[6,"PostDispatchInfoOf",132],[6,"ApplyExtrinsicResultWithInfo",133],[8,"Member",132],[8,"MaybeDisplay",132],[8,"Dispatchable",132],[8,"SelfContainedCall",0],[8,"SignedExtension",132],[8,"Send",134],[8,"Sync",134],[6,"DispatchResultWithInfo",133],[4,"Option",135],[15,"u8"],[15,"array"],[3,"Vec",136],[3,"UncheckedExtrinsic",0],[8,"TypeInfo",137],[4,"TransactionValidityError",138],[4,"Result",139],[8,"Encode",140],[8,"Verify",132],[8,"Lookup",132],[4,"CheckedSignature",0],[8,"Clone",141],[3,"Error",142],[8,"Input",140],[15,"slice"],[15,"u32"],[8,"Deserializer",143],[8,"Decode",140],[8,"Output",140],[8,"Sized",134],[15,"bool"],[8,"PartialEq",144],[3,"Formatter",145],[6,"Result",145],[8,"Debug",145],[3,"DispatchInfo",146],[8,"GetDispatchInfo",146],[8,"Serializer",147],[3,"TypeId",148],[3,"Type",149],[8,"FnOnce",150],[4,"TransactionSource",138],[6,"TransactionValidity",138]],"b":[]},\
"fp_storage":{"doc":"","t":"RRRRRRRERRRRRNNNNLLLLLLLLLLLLLLLLLLLLLLLL","n":["BASE_FEE_ELASTICITY","BASE_FEE_PER_GAS","ETHEREUM_CURRENT_BLOCK","ETHEREUM_CURRENT_RECEIPTS","ETHEREUM_CURRENT_TRANSACTION_STATUS","EVM_ACCOUNT_CODES","EVM_ACCOUNT_STORAGES","EthereumStorageSchema","PALLET_BASE_FEE","PALLET_ETHEREUM","PALLET_ETHEREUM_SCHEMA","PALLET_ETHEREUM_SCHEMA_CACHE","PALLET_EVM","Undefined","V1","V2","V3","borrow","borrow_mut","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deserialize","encode_to","eq","fmt","from","into","partial_cmp","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_into","type_id"],"q":[[0,"fp_storage"],[41,"core::cmp"],[42,"parity_scale_codec::error"],[43,"core::result"],[44,"parity_scale_codec::codec"],[45,"serde::de"],[46,"parity_scale_codec::codec"],[47,"core::fmt"],[48,"core::fmt"],[49,"serde::ser"],[50,"alloc::vec"],[51,"core::any"]],"d":["","","","","","","","The schema version for Pallet Ethereum’s storage","Pallet BaseFee storage items","Pallet Ethereum storage items","Current version of pallet Ethereum’s storage schema is …","Cached version of pallet Ethereum’s storage schema is …","Pallet Evm storage items","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,1],3],[-1,[[5,[1,4]]],6],[[[8,[7]]],[[5,[-1,4]]],[]],[[9,[8,[7]]],[[5,[-1,4]]],[]],[[9,-1],[[5,[-2,4]]],6,[]],[[],1],[-1,[[5,[1]]],10],[[1,-1],2,[11,12]],[[1,1],13],[[1,14],15],[-1,-1,[]],[-1,-2,[],[]],[[1,1],[[16,[3]]]],[[1,-1],5,17],[1,18],[[-1,[8,[7]]],[[19,[7]]],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,20,[]]],"c":[],"p":[[4,"EthereumStorageSchema",0],[15,"tuple"],[4,"Ordering",41],[3,"Error",42],[4,"Result",43],[8,"Input",44],[15,"u8"],[15,"slice"],[15,"u32"],[8,"Deserializer",45],[8,"Output",44],[8,"Sized",46],[15,"bool"],[3,"Formatter",47],[6,"Result",47],[4,"Option",48],[8,"Serializer",49],[15,"usize"],[3,"Vec",50],[3,"TypeId",51]],"b":[]},\
"frontier_template_node":{"doc":"Substrate Node Template CLI library.","t":"AAAAAFAAGGRMFMFMFFFFFNNNDNNNNNNNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIGGGGIDMMMMMMMMLLMMMLLLLMMMMMMMMLLLLLMMMMMMMMLLLLLLLMMLMMMMMMMMLLLLLLMMLFEIDGGGGDDNNNNLLLMMMLLLLLLLLLLLMLLLLLLLLFLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLFMMMMFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDCDLLLLMMCFMLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLQDIDGGGDQMMMLLLLLLMMFLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMMLMFMMMMMMMMLLLLLLLLLLLLLLLLLLLLLGGCCGGRGGCMMMMMMFFFMCMMMMMMMMFFFMMMMMMFMMMMMM","n":["chain_spec","cli","client","command","eth","main","rpc","service","AccountPublic","ChainSpec","UNITS","_host_functions","authority_keys_from_seed","client_spec","development_config","genesis","get_account_id_from_seed","get_from_seed","local_testnet_config","properties","testnet_genesis","Benchmark","BuildSpec","CheckBlock","Cli","ExportBlocks","ExportState","FrontierDb","ImportBlocks","Instant","Key","Manual","PurgeChain","Revert","Sealing","Subcommand","__clone_box","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","copyright_start_year","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","eth","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","group_id","has_subcommand","impl_name","impl_version","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","load_spec","run","sealing","subcommand","support_url","to_owned","to_possible_value","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","BaseRuntimeApiCollection","Client","FullBackend","FullClient","HostFunctions","RuntimeApiCollection","TemplateRuntimeExecutor","_phantom","_phantom","backend","backend","block_rules","block_rules","blockchain","blocks_pruning","borrow","borrow_mut","canonicalization_delay","config","config","deref","deref_mut","dispatch","drop","every_import_notification_sinks","every_import_notification_sinks","executor","executor","finality_actions","finality_actions","finality_notification_sinks","finality_notification_sinks","from","from_mut","from_mut","from_ref","from_ref","genesis_state","import_actions","import_actions","import_lock","import_notification_sinks","import_notification_sinks","importing_block","importing_block","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","io_stats","is_archive","native_version","offchain_storage","shared_trie_cache","state_usage","storage","storage_notifications","storage_notifications","telemetry","telemetry","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","unpin_worker_sender","unpin_worker_sender","vzip","run","BackendType","EthCompatRuntimeApiCollection","EthConfiguration","FeeHistoryCache","FeeHistoryCacheLimit","FilterPool","FrontierBackend","FrontierBlockImport","FrontierPartialComponents","KeyValue","KeyValue","Sql","Sql","__clone_box","__clone_box","__clone_box","_marker","alloc","alloc","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_block","client","clone","clone","clone","clone_into","clone_into","clone_into","command","command_for_update","db_config_dir","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enable_dev_signer","eth_log_block_cache","eth_statuses_cache","execute_gas_limit_multiplier","fee_history_cache","fee_history_cache_limit","fee_history_limit","filter_pool","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frontier_backend_type","frontier_sql_backend_cache_size","frontier_sql_backend_num_ops_timeout","frontier_sql_backend_pool_size","frontier_sql_backend_thread_count","group_id","import_block","init","init","init","init","inner","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","max_past_logs","new","new_frontier_partial","phantom","phantom","ptr","ptr","spawn_frontier_tasks","target_gas_price","to_owned","to_owned","to_owned","to_possible_value","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","vzip","DefaultEthConfig","EthDeps","FullDeps","borrow","borrow","borrow_mut","borrow_mut","client","command_sink","create_eth","create_full","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","eth","eth","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","overrides_handle","pool","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","EstimateGasAdapter","EthBlockDataCacheTask","EthConfig","EthDeps","FeeHistoryCache","FeeHistoryCacheLimit","FilterPool","OverrideHandle","RuntimeStorageOverride","alloc","alloc","block_data_cache","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","converter","create_eth","current_block","current_transaction_statuses","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enable_dev_signer","execute_gas_limit_multiplier","fallback","fee_history_cache","fee_history_cache_limit","filter_pool","forced_parent_hashes","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frontier_backend","graph","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_authority","max_past_logs","network","new","overrides","overrides_handle","pending_create_inherent_data_providers","phantom","phantom","pool","ptr","ptr","schemas","sync","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","BasicImportQueue","BoxBlockImport","Client","EthConfiguration","FullPool","FullSelectChain","GRANDPA_JUSTIFICATION_PERIOD","GrandpaBlockImport","GrandpaLinkHalf","TemplateRuntimeExecutor","_phantom","_phantom","api","authority_set","authority_set_hard_forks","backend","build_aura_grandpa_import_queue","build_full","build_manual_seal_import_queue","client","db_config_dir","enactment_state","handle","inner","justification_import_period","justification_sender","justification_sender","justification_stream","metrics","new_chain_ops","new_full","new_partial","persistent_data","pool","ready_poll","result_port","revalidation_queue","revalidation_strategy","run_manual_seal_authorship","select_chain","select_chain","send_voter_commands","telemetry","telemetry","voter_commands_rx"],"q":[[0,"frontier_template_node"],[8,"frontier_template_node::chain_spec"],[21,"frontier_template_node::cli"],[145,"frontier_template_node::client"],[217,"frontier_template_node::command"],[218,"frontier_template_node::eth"],[383,"frontier_template_node::rpc"],[443,"frontier_template_node::rpc::eth"],[555,"frontier_template_node::service"],[600,"sc_cli::error"],[601,"sp_consensus_aura::sr25519"],[602,"sp_consensus_grandpa"],[603,"frontier_template_runtime"],[604,"sc_chain_spec::chain_spec"],[605,"frontier_template_runtime"],[606,"alloc::vec"],[607,"serde_json::value"],[608,"dyn_clone::sealed"],[609,"clap_builder::builder::command"],[610,"alloc::string"],[611,"core::fmt"],[612,"core::fmt"],[613,"clap_builder"],[614,"core::result"],[615,"clap_builder::util::id"],[616,"core::option"],[617,"alloc::boxed"],[618,"core::any"],[619,"alloc::sync"],[620,"alloc::rc"],[621,"sc_chain_spec"],[622,"core::any"],[623,"sc_consensus::block_import"],[624,"core::future::future"],[625,"core::pin"],[626,"sp_runtime::traits"],[627,"sc_consensus::block_import"],[628,"core::marker"],[629,"core::clone"],[630,"sc_service::config"],[631,"std::path"],[632,"sc_consensus::block_import"],[633,"sc_service::task_manager"],[634,"frontier_template_runtime::opaque"],[635,"sc_executor::executor"],[636,"sc_service::builder"],[637,"sc_service::builder"],[638,"sc_network_sync::service::syncing_service"],[639,"fc_mapping_sync"],[640,"fc_mapping_sync"],[641,"jsonrpsee_core::server::rpc_module"],[642,"core::error"],[643,"sc_client_api::backend"],[644,"sp_api"],[645,"sp_blockchain::header_metadata"],[646,"sc_client_api::client"],[647,"sc_client_api::backend"],[648,"sc_client_api::backend"],[649,"sc_transaction_pool::graph::pool"],[650,"fp_rpc"],[651,"sp_inherents::client_side"],[652,"fp_storage"],[653,"ethereum::transaction"],[654,"ethereum::block"],[655,"fp_rpc"],[656,"sc_telemetry"],[657,"sc_consensus::longest_chain"],[658,"sc_consensus_grandpa::import"],[659,"sc_consensus::import_queue"],[660,"sc_consensus::import_queue"],[661,"sc_transaction_pool"],[662,"sc_telemetry"],[663,"sc_service"],[664,"core::ops::function"],[665,"sc_executor::executor"],[666,"futures_channel::mpsc"]],"d":["","","","","","","A collection of node-specific RPC methods.","Service and ServiceFactory implementation. Specialized …","","Specialized <code>ChainSpec</code>. This is a specialization of the …","","","Generate an Aura authority key.","","","","Generate an account ID from seed. For use with <code>AccountId32</code>…","Generate a crypto pair from seed.","","","Configure initial storage state for FRAME modules.","Sub-commands concerned with benchmarking.","Build a chain specification.","Validate blocks.","","Export blocks.","Export the state of a given block into a chain spec.","Db meta columns information.","Import blocks.","Seal when transaction is executed.","Key management cli utilities","Seal using rpc method.","Remove the whole chain.","Revert the chain to a previous state.","Available Sealing methods.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Choose sealing method.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of APIs that every runtimes must implement.","","Full backend.","Full client.","Otherwise we use empty host functions for ext host …","A set of APIs that template runtime must implement.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Parse and run command line arguments","Avalailable frontier backend types.","A set of APIs that ethereum-compatible runtimes must …","The ethereum-compatibility configuration used to run a …","","Maximum fee history cache size.","On-memory stored filters created through the <code>eth_newFilter</code> …","Frontier DB backend type.","","","","Either RocksDb or ParityDb as per inherited from the …","","Sql database with custom log indexing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Size in bytes of the LRU cache for block data.","Size in bytes of the LRU cache for transactions statuses …","Maximum allowed gas limit will be …","","","Maximum fee history cache size.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Sets the frontier backend type (KeyValue or Sql)","Sets the SQL backend’s query timeout in number of VM ops.","Sets the SQL backend’s query timeout in number of VM ops.","","Sets the SQL backend’s auxiliary thread limit.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Maximum number of logs in a query.","","","","","","","","The dynamic-fee pallet target gas price set by block author","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Full client dependencies.","","","","","The client instance to use.","Manual seal command sink","","Instantiate all Full RPC extensions.","Whether to deny unsafe calls","","","","","","","","Ethereum-compatibility specific dependencies.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Transaction pool instance.","","","","","","","","","","","","","","","","Manage LRU caches for block data and their transaction …","","Extra dependencies for Ethereum compatibility.","","Maximum fee history cache size.","On-memory stored filters created through the <code>eth_newFilter</code> …","","","","","Cache for Ethereum block data.","","","","","","","The client instance to use.","Ethereum transaction converter.","Instantiate Ethereum-compatible RPC extensions.","Cache for <code>handler.current_block</code>.","Cache for <code>handler.current_transaction_statuses</code>.","","","","","","","","","","Whether to enable dev signer","Maximum allowed gas limit will be …","","Fee history cache.","Maximum fee history cache size.","EthFilterApi pool.","Mandated parent hashes for a given block hash.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Frontier Backend.","Graph pool instance.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The Node authority flag","Maximum number of logs in a query.","Network service","","Ethereum data access overrides.","","Something that can create the inherent data providers for …","","","Transaction pool instance.","","","","Chain syncing service","","","","","","","","","","","","","","","","","","","","","","","","","","","","The minimum period of blocks on which justifications will …","","","","","","","","","","Build the import queue for the template runtime (aura + …","","Build the import queue for the template runtime (manual …","","","","","","","","","","","","Builds a new service for a full client.","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,111,0,111,0,111,0,0,0,0,0,23,23,23,0,23,23,23,23,17,23,17,23,23,0,0,17,22,22,23,23,22,17,22,23,17,22,23,17,17,22,22,22,17,17,22,23,17,22,23,22,17,22,23,22,17,22,23,17,22,23,22,23,22,23,17,17,22,22,23,23,17,17,22,22,23,23,22,23,22,22,17,22,23,17,22,23,17,22,23,17,22,23,17,22,23,17,22,23,17,22,23,22,22,22,22,22,17,17,17,22,23,17,22,23,17,22,23,17,22,23,17,22,23,17,22,23,22,23,22,23,17,17,22,23,0,0,0,0,0,0,0,112,113,112,113,112,113,114,114,100,100,114,112,113,100,100,100,100,112,113,112,113,112,113,112,113,100,100,100,100,100,114,112,113,114,112,113,112,113,100,100,100,100,100,100,100,114,114,100,114,114,114,114,112,113,112,113,100,100,100,100,100,100,112,113,100,0,0,0,0,0,0,0,0,0,0,115,49,115,49,39,49,50,39,64,62,50,50,39,54,49,50,39,54,49,50,39,39,39,49,50,39,49,50,50,50,0,49,39,54,49,50,39,54,49,50,39,54,49,50,50,50,50,50,54,54,50,54,49,50,39,54,49,50,50,50,39,39,54,54,49,49,50,50,39,39,54,54,49,49,50,50,50,50,50,50,50,50,39,39,54,49,50,39,39,54,49,50,39,54,49,50,39,54,49,50,39,54,49,50,39,54,49,50,39,54,49,50,50,39,0,64,62,64,62,0,50,39,49,50,49,39,54,49,50,39,54,49,50,39,54,49,50,39,54,49,50,39,54,49,50,39,54,49,50,50,50,49,39,54,49,50,0,0,0,70,116,70,116,70,70,0,0,70,70,116,70,116,70,116,0,70,70,116,70,70,116,116,70,70,116,116,70,116,70,116,70,116,70,116,70,116,70,116,70,116,0,70,70,116,70,116,70,116,70,116,70,116,70,116,70,116,117,0,0,0,0,0,0,0,117,64,62,86,87,63,86,87,63,86,86,86,0,87,87,87,63,86,87,63,86,87,63,86,86,86,63,86,86,86,86,87,63,86,87,87,63,63,86,86,87,87,63,63,86,86,86,86,87,63,86,87,63,86,87,63,86,87,63,86,87,63,86,87,63,86,87,63,86,86,86,86,87,86,0,86,64,62,86,64,62,63,86,87,63,86,87,63,86,87,63,86,87,63,86,87,63,86,87,63,86,87,63,86,0,0,0,0,0,0,0,0,0,0,118,119,120,119,119,118,0,0,0,121,0,120,122,119,119,119,121,121,120,0,0,0,121,120,120,122,120,120,0,119,121,119,119,121,121],"f":[0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,[3,[[1,[4,5]]]],0,[6,[[8,[7]]]],0,[3,9],[3],[[],[[8,[7]]]],[[],10],[[9,[11,[9]],[11,[[1,[4,5]]]],12,6],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,14],1,[]],[15,15],[15,15],[15,15],[15,15],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,17],[[-1,-2],1,[],[]],[[],15],[[],15],[[],18],[[],17],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[[],16],[19,1],[19,1],[19,1],0,[[17,20],21],[[22,20],21],[[23,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,[[26,[22,25]]]],[24,[[26,[23,25]]]],[24,[[26,[22,25]]]],[24,[[26,[23,25]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],[[28,[27]]]],[3,6],[[],16],[[],16],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[22,3],[[26,[[29,[33]],16]]]],0,0,0,[[],16],[-1,-2,[],[]],[17,[[28,[34]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[22,24],[[26,[1,25]]]],[[23,24],[[26,[1,25]]]],[[22,24],[[26,[1,25]]]],[[23,24],[[26,[1,25]]]],[[],[[36,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[19,-1,[]],[19,-1,[]],[[3,[36,[37]]],[[28,[[11,[37]]]]]],[19,1],0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],0,0,0,0,0,0,0,0,[[],19],[-1,-2,[],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],38],0,0,0,0,0,0,0,0,[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,35,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,14],1,[]],[[-1,14],1,[]],[[-1,14],1,[]],0,0,0,[15,15],[15,15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1,-2,-3]],[40,[-1]]],[[42,[[29,[41]]]]],43,[[44,[-1]],45,46],[[47,[-1]],45,46]],0,[[[39,[-1,-2,-3]]],[[39,[-1,-2,-3]]],43,[48,[44,[-1]]],[]],[49,49],[50,50],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],15],[[],15],[51,52],[[],49],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,1],[19,1],[19,1],[19,1],0,0,0,0,0,0,0,0,[[49,20],21],[[50,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,[[26,[50,25]]]],[24,[[26,[50,25]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,0,[[],[[28,[27]]]],[[[39,[-1,-2,-3]],[53,[-1]]],[[42,[[29,[41]]]]],43,[[44,[-1]],45,46],[[47,[-1]],45,46]],[[],19],[[],19],[[],19],[[],19],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-2,[31,[-3]]],[[39,[-1,-2,-3]]],43,[[44,[-1]]],[[47,[-1]]]],[50,[[26,[54,55]]]],0,0,0,0,[[56,[31,[[59,[57,-1,[58,[-2]]]]]],[31,[[60,[57]]]],[61,[57]],[28,[62]],[31,[[63,[57]]]],64,65,[31,[[66,[57]]]],[31,[[68,[[67,[57]]]]]]],1,[69,45,46],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,[[28,[34]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[50,24],[[26,[1,25]]]],[[50,24],[[26,[1,25]]]],[[],[[36,[49]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[70,[-2,-3,-4,-5,-6]],71,[31,[[68,[[67,[57]]]]]]],[[26,[[72,[1]],[29,[73]]]]],[[74,[57]]],[[75,[57]],[47,[57]],[76,[57]],[77,[57]],[78,[57]],79,[80,[57]],[81,[57,-1]]],82,83,[84,45,46],[[85,[57,1]],45]],0,[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,1],[19,1],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[-3]]],[[31,[[63,[-1]]]]],43,[[74,[-1]]],[[47,[-1]],[76,[-1]],[81,[-1,-2]]]],0,[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[72,[1]],[86,[-1,-3,-4,-5,-6,-7]],71,[31,[[68,[[67,[-1]]]]]]],[[26,[[72,[1]],[29,[73]]]]],43,[[74,[-1]]],[[75,[-1]],[47,[-1]],[76,[-1]],[77,[-1]],[78,[-1]],79,[80,[-1]],[81,[-1,-2]]],82,83,[84,45,46],[[85,[-1,1]],45]],[[[87,[-1]],88],[[28,[[90,[89]]]]],43],[[[87,[-1]],88],[[28,[[11,[91]]]]],43],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,1],[19,1],[19,1],0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,0,[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[29,[-1]]],[[29,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[31,[-1]]],[[31,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[[[32,[-1]]],[[32,[30]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[92,[31,[[63,[-1]]]],19,19,[28,[93]]],[[87,[-1]]],43],0,[[[31,[-3]]],[[31,[[63,[-1]]]]],43,[[74,[-1]]],[[47,[-1]],[76,[-1]],[81,[-1,-2]]]],0,0,0,0,0,0,0,0,[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[31,[[59,[57,-1,[58,[-2]]]]]],51,50,56,[28,[94]],[96,[[60,[57]],57,[59,[57,-1,[58,[-2]]]],[95,[[60,[57]],57]]]]],[[26,[[1,[[97,[57]],[98,[57]]]],55]]],[69,45,46],[]],[[51,50,[28,[17]]],[[26,[56,55]]]],[[[31,[[59,[57,-1,[58,[-2]]]]]],51,50,56,[28,[94]],[96,[[60,[57]],57,[59,[57,-1,[58,[-2]]]],[95,[[60,[57]],57]]]]],[[26,[[1,[[97,[57]],[98,[57]]]],55]]],[69,45,46],[]],0,0,0,0,0,0,0,0,0,0,[[51,50],[[26,[[1,[[31,[[59,[57,99,[58,[100]]]]]],[31,[[60,[57]]]],[101,[57]],56,[61,[57]]]],55]]]],[[51,50,[28,[17]]],[[26,[56,55]]]],[[51,50,-1],[[26,[[105,[[59,[57,-2,[58,[-3]]]],[60,[57]],[95,[[60,[57]],57]],[97,[57]],[102,[57,[59,[57,-2,[58,[-3]]]]]],[1,[[28,[103]],[98,[57]],[104,[57,[59,[57,-2,[58,[-3]]]],[95,[[60,[57]],57]]]],[61,[57]],[31,[[63,[57]]]]]]]],55]]],106,[],107],0,0,0,0,0,0,[[50,17,[31,[[59,[57,-1,[58,[-2]]]]]],[31,[[102,[57,[59,[57,-1,[58,[-2]]]]]]]],[95,[[60,[57]],57]],[98,[57]],56,[28,[93]],[28,[103]],[110,[[109,[108]]]]],[[26,[1,55]]],[69,45,46],[]],0,0,0,0,0,0],"c":[],"p":[[15,"tuple"],[6,"Result",600],[15,"str"],[6,"AuthorityId",601],[6,"AuthorityId",602],[15,"bool"],[3,"RuntimeGenesisConfig",603],[3,"ChainSpec",604],[6,"AccountId",603],[6,"Properties",605],[3,"Vec",606],[15,"u64"],[4,"Value",607],[3,"Private",608],[3,"Command",609],[3,"String",610],[4,"Sealing",21],[15,"i32"],[15,"usize"],[3,"Formatter",611],[6,"Result",611],[3,"Cli",21],[4,"Subcommand",21],[3,"ArgMatches",612],[6,"Error",613],[4,"Result",614],[3,"Id",615],[4,"Option",616],[3,"Box",617],[8,"Any",618],[3,"Arc",619],[3,"Rc",620],[8,"ChainSpec",605],[3,"PossibleValue",621],[3,"TypeId",618],[15,"slice"],[15,"u8"],[3,"NativeVersion",622],[3,"FrontierBlockImport",218],[3,"BlockCheckParams",623],[8,"Future",624],[3,"Pin",625],[8,"Block",626],[8,"BlockImport",623],[8,"Send",627],[8,"Sync",627],[8,"ProvideRuntimeApi",628],[8,"Clone",629],[4,"BackendType",218],[3,"EthConfiguration",218],[3,"Configuration",630],[3,"PathBuf",631],[3,"BlockImportParams",623],[3,"FrontierPartialComponents",218],[4,"Error",632],[3,"TaskManager",633],[6,"Block",634],[3,"NativeElseWasmExecutor",635],[6,"TFullClient",636],[6,"TFullBackend",636],[4,"Backend",637],[6,"FilterPool",443],[3,"OverrideHandle",443],[6,"FeeHistoryCache",443],[6,"FeeHistoryCacheLimit",443],[3,"SyncingService",638],[3,"EthereumBlockNotification",639],[6,"EthereumBlockNotificationSinks",639],[8,"ConstructRuntimeApi",628],[3,"FullDeps",383],[6,"SubscriptionTaskExecutor",640],[3,"RpcModule",641],[8,"Error",642],[8,"Backend",643],[8,"CallApiAt",628],[8,"HeaderBackend",644],[8,"HeaderMetadata",645],[8,"BlockchainEvents",646],[8,"AuxStore",643],[8,"UsageProvider",647],[8,"StorageProvider",643],[8,"TransactionPool",648],[8,"ChainApi",649],[8,"ConvertTransaction",650],[8,"CreateInherentDataProviders",651],[3,"EthDeps",443],[3,"EthBlockDataCacheTask",443],[4,"EthereumStorageSchema",652],[4,"TransactionV2",653],[3,"Block",654],[3,"TransactionStatus",650],[3,"SpawnTaskHandle",633],[3,"Registry",655],[3,"TelemetryHandle",656],[3,"LongestChain",657],[3,"GrandpaBlockImport",658],[6,"DefaultImportQueue",659],[6,"BoxBlockImport",659],[3,"RuntimeApi",603],[3,"TemplateRuntimeExecutor",145],[3,"BasicQueue",660],[6,"FullPool",661],[3,"Telemetry",656],[3,"LinkHalf",662],[3,"PartialComponents",663],[8,"FnOnce",664],[8,"NativeExecutionDispatch",635],[6,"Hash",603],[4,"EngineCommand",665],[3,"Receiver",666],[6,"ChainSpec",8],[6,"FullClient",145],[6,"Client",145],[6,"FullBackend",145],[6,"FrontierBackend",218],[3,"DefaultEthConfig",383],[8,"EthConfig",443],[6,"FullSelectChain",555],[6,"GrandpaBlockImport",555],[6,"FullPool",555],[6,"GrandpaLinkHalf",555],[6,"BasicImportQueue",555]],"b":[]},\
"frontier_template_runtime":{"doc":"The Substrate Node Template runtime. This can be compiled …","t":"GGGGGGGGGNNNEGGNNGDGDDGDGDDGNDRDDGGNGGNNNGGGDGNNNNGGDDDDGGNNNGRGNGGNNRRRRGGDDDDGNENDDNDDDDENEEEDEEDEERDNGGGGGNNNGDGNNNEGGNEDGNGGRDNRRRDLLLLLLLLLLLLLLMMMMMMMMMLLLMLALNLLLLMMLLMMNNMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLMMLLLLLLLLLLLLLLLLLNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMNNLMMLLLLLLLLLLLMLMLLFLLLLLLLLLLLLLLLLLLLLLLMLLAAMLLLLLLLLLLNNLLLLLLNLLNNNNLLMLLLLLLLLMLLMMMMNLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFGGNGNDDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLEIDGDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLCCCLLLLLLLLLLLLLLLLL","n":["AccountId","AccountIndex","Address","AllPalletsWithSystem","AllPalletsWithoutSystem","Aura","AuraConfig","Balance","Balances","Balances","Balances","Balances","BalancesCall","BalancesConfig","BaseFee","BaseFee","BaseFee","BaseFeeConfig","BaseFeeThreshold","Block","BlockGasLimit","BlockHashCount","BlockId","BlockLength","BlockNumber","BlockWeights","BoundDivision","CheckedExtrinsic","Consensus","ConsensusOnTimestampSet","DAYS","DefaultBaseFeePerGas","DefaultElasticity","DigestItem","DynamicFee","DynamicFee","DynamicFeeConfig","EVM","EVM","EVM","EVM","EVMChainId","EVMChainIdConfig","EVMConfig","EnableManualSeal","Ethereum","Ethereum","Ethereum","Ethereum","Ethereum","EthereumConfig","Executive","ExistentialDeposit","FeeMultiplier","FindAuthorTruncated","GasLimitPovSizeRatio","GenesisConfig","Grandpa","Grandpa","Grandpa","Grandpa","GrandpaConfig","HOURS","Hash","Hash","Header","HotfixSufficients","HotfixSufficients","HotfixSufficients","MAXIMUM_BLOCK_LENGTH","MAXIMUM_BLOCK_WEIGHT","MILLISECS_PER_BLOCK","MINUTES","ManualSeal","ManualSealConfig","MaxAuthorities","MaxLocks","MaxReserves","MinimumPeriod","Nonce","Number","OriginCaller","Other","PalletInfo","PostBlockAndTxnHashes","PreRuntime","PrecompilesValue","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeCall","RuntimeEnvironmentUpdated","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","RuntimeTask","SLOT_DURATION","SS58Prefix","Seal","Signature","SignedBlock","SignedExtra","SignedPayload","Sudo","Sudo","Sudo","Sudo","SudoConfig","SuicideQuickClearLimit","System","System","System","System","SystemCall","SystemConfig","Timestamp","Timestamp","TimestampCall","TransactionConverter","TransactionPayment","TransactionPayment","TransactionPaymentConfig","UncheckedExtrinsic","VERSION","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_MILLISECS_PER_BLOCK","WeightPerGas","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_config","_config","_config","_config","_marker","_marker","_marker","_marker","_marker","account_basic","account_code_at","account_nonce","accounts","add_filter","api","api_version","apply_authorized_upgrade","apply_extrinsic","apply_self_contained","as_system_ref","assimilate_storage","aura","aura","author","authorities","authorities","authorities","authorize_upgrade","authorize_upgrade_without_checks","balances","balances","balances","base_fee","base_fee","base_fee_per_gas","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_config","call","caller","chain_id","chain_id","check_inherents","check_self_contained","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","construct_runtime_api","convert_transaction","convert_transaction","convert_transaction","crate_version","create","create_default_config","current_all","current_block","current_receipts","current_set_id","current_transaction_statuses","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","digest","dispatch","dispatch_bypass_filter","dispatch_bypass_filter","dispatch_bypass_filter","dispatch_bypass_filter","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dynamic_fee","dynamic_fee","elasticity","elasticity","enable","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","ethereum","ethereum","evm","evm","evm_chain_id","evm_chain_id","execute_block","execute_in_transaction","extract_proof","extrinsic_filter","extrinsics","extrinsics_root","filter_call","finalize_block","find_author","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_adjust_total_issuance","force_set_balance","force_transfer","force_unreserve","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","function","gas_limit_multiplier_support","gas_price","generate_key_ownership_proof","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_index","get_call_index","get_call_index","get_call_indices","get_call_indices","get_call_indices","get_call_metadata","get_call_name","get_call_name","get_call_name","get_call_names","get_call_names","get_call_names","get_call_names","get_dispatch_info","get_dispatch_info","get_dispatch_info","get_dispatch_info","get_module_names","grandpa","grandpa","grandpa_authorities","has_api","has_api_with","header","ideal","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_feeless","is_feeless","is_feeless","is_feeless","is_self_contained","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_valid","iter","justifications","key","key","kill_prefix","kill_storage","lower","manual_seal","manual_seal","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min_gas_price","module_name","multiplier","name","name_hash","native_version","new_call_variant_apply_authorized_upgrade","new_call_variant_authorize_upgrade","new_call_variant_authorize_upgrade_without_checks","new_call_variant_force_adjust_total_issuance","new_call_variant_force_set_balance","new_call_variant_force_transfer","new_call_variant_force_unreserve","new_call_variant_kill_prefix","new_call_variant_kill_storage","new_call_variant_remark","new_call_variant_remark_with_event","new_call_variant_set","new_call_variant_set_code","new_call_variant_set_code_without_checks","new_call_variant_set_heap_pages","new_call_variant_set_storage","new_call_variant_transfer_all","new_call_variant_transfer_allow_death","new_call_variant_transfer_keep_alive","new_call_variant_upgrade_accounts","none","none","number","offchain_worker","on_timestamp_set","opaque","pallet_manual_seal","parent_hash","pending_block","pre_dispatch","pre_dispatch_self_contained","proof_recorder","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","register_extension","remark","remark_with_event","reset_filter","root","root","run","serialize","set","set","set_call_context","set_caller_from","set_code","set_code_without_checks","set_heap_pages","set_storage","signed","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_duration","state_root","storage_at","submit_report_equivocation_unsigned_extrinsic","sudo","sudo","system","system","system","task_index","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_payment","transaction_payment","transfer_all","transfer_allow_death","transfer_keep_alive","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upgrade_accounts","upper","validate_self_contained","validate_transaction","validate_unsigned","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","amount","delta","dest","dest","dest","dest","direction","keep_alive","new_free","source","value","value","value","who","who","who","code","code","code","code_hash","code_hash","items","keys","pages","prefix","remark","remark","subkeys","now","dispatch","Block","BlockId","Hash","Header","Number","SessionKeys","UncheckedExtrinsic","__clone_box","__clone_box","aura","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into_raw_public_keys","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","digest","drop","drop","encode","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics","extrinsics_root","fmt","fmt","from","from","from","from","from_bytes","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","generate","get_raw","grandpa","header","identity","identity","init","init","into","into","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","is_clear","key_ids","number","parent_hash","serialize","serialize","size_hint","size_hint","state_root","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","Call","Config","GenesisConfig","Module","Pallet","__clone_box","__clone_box","_config","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","enable","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","serialize","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys"],"q":[[0,"frontier_template_runtime"],[1642,"frontier_template_runtime::BalancesCall"],[1658,"frontier_template_runtime::SystemCall"],[1670,"frontier_template_runtime::TimestampCall"],[1671,"frontier_template_runtime::api"],[1672,"frontier_template_runtime::opaque"],[1793,"frontier_template_runtime::pallet_manual_seal"],[1927,"dyn_clone::sealed"],[1928,"primitive_types"],[1929,"evm::backend"],[1930,"alloc::vec"],[1931,"core::ops::function"],[1932,"core::option"],[1933,"sp_api"],[1934,"core::result"],[1935,"sp_runtime::traits"],[1936,"sp_api"],[1937,"sp_runtime::traits"],[1938,"sp_storage"],[1939,"alloc::string"],[1940,"sp_consensus_aura::sr25519"],[1941,"sp_genesis_builder"],[1942,"primitive_types"],[1943,"sp_runtime"],[1944,"sp_inherents"],[1945,"pallet_timestamp::pallet"],[1946,"pallet_balances::pallet"],[1947,"frame_system::pallet"],[1948,"sp_api"],[1949,"frame_support::traits::metadata"],[1950,"fp_evm"],[1951,"ethereum::receipt"],[1952,"fp_rpc"],[1953,"sp_consensus_grandpa"],[1954,"parity_scale_codec::error"],[1955,"parity_scale_codec::codec"],[1956,"sp_core::crypto"],[1957,"serde::de"],[1958,"frame_support::dispatch"],[1959,"parity_scale_codec::codec"],[1960,"core::ops::function"],[1961,"core::iter::traits::collect"],[1962,"core::fmt"],[1963,"core::fmt"],[1964,"frame_system::pallet"],[1965,"frame_system::pallet"],[1966,"pallet_ethereum::pallet"],[1967,"pallet_evm::pallet"],[1968,"pallet_base_fee::pallet"],[1969,"pallet_transaction_payment::pallet"],[1970,"pallet_grandpa::pallet"],[1971,"core::convert"],[1972,"frame_system::limits"],[1973,"frame_system::limits"],[1974,"sp_weights::weight_v2"],[1975,"pallet_ethereum"],[1976,"frame_support::traits::metadata"],[1977,"frame_metadata"],[1978,"sp_core"],[1979,"sp_version"],[1980,"sp_runtime::traits"],[1981,"pallet_transaction_payment::types"],[1982,"serde::ser"],[1983,"sp_core::traits"],[1984,"core::convert"],[1985,"sp_runtime::traits"],[1986,"scale_info::ty"],[1987,"sp_runtime::transaction_validity"],[1988,"parity_scale_codec::codec"],[1989,"frame_support::traits::metadata"],[1990,"frame_support::traits::metadata"],[1991,"sp_storage"]],"d":["Some way of identifying an account on the chain. We …","The type for looking up accounts. We don’t expect more …","The address format for describing accounts.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","","Balance of an account.","","","","","Contains a variant per dispatchable extrinsic that this …","","","","","","","Block type as expected by this runtime.","","","BlockId type as expected by this runtime.","","Type of block number.","","","Extrinsic type that has already been checked.","A message from the runtime to the consensus engine. This …","","","","","Digest item type.","","","","","","","","","","","","","","","","","","Executive: handles dispatch to the various modules.","","","","","","","","","","","","A hash of some data used by the chain.","Identify by block header hash.","Block header type as expected by this runtime.","","","","","","","","","","","","","","Index of a transaction in the chain.","Identify by block number.","","Some other thing. Unsupported and experimental.","Provides an implementation of <code>PalletInfo</code> to provide …","","A pre-runtime digest.","","","","Implements all runtime apis for the client side.","","An indication for the light clients that the runtime …","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","An aggregation of all <code>Task</code> enums across all pallets …","","","Put a Seal on it. This is only used by native code, and is …","Alias to 512-bit hash when used in the context of a …","A Block signed with a Justification","The SignedExtension to the basic transaction logic.","The payload being signed in transactions.","","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","","","","Contains a variant per dispatchable extrinsic that this …","","","","","Unchecked extrinsic type as expected by this runtime.","","","","","","We allow for 2000ms of compute with a 6 second average …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::apply_authorized_upgrade</code>.","","","","","","","","","","","See <code>Pallet::authorize_upgrade</code>.","See <code>Pallet::authorize_upgrade_without_checks</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Full blockchain-specific digest of data useful for light clients …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","","","","","","","","","","","","","","","","See <code>Pallet::force_adjust_total_issuance</code>.","See <code>Pallet::force_set_balance</code>.","See <code>Pallet::force_transfer</code>.","See <code>Pallet::force_unreserve</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert to runtime origin using […","Convert to runtime origin with caller being system signed …","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","The function that should be called.","","","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","The block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block justification.","Returns the key for this parameter type.","The <code>AccountId</code> of the sudo key.","See <code>Pallet::kill_prefix</code>.","See <code>Pallet::kill_storage</code>.","","","","","","","","","","","","","","","","","","","","The version information used to identify this runtime when …","Create a call with the variant <code>apply_authorized_upgrade</code>.","Create a call with the variant <code>authorize_upgrade</code>.","Create a call with the variant …","Create a call with the variant <code>force_adjust_total_issuance</code>.","Create a call with the variant <code>force_set_balance</code>.","Create a call with the variant <code>force_transfer</code>.","Create a call with the variant <code>force_unreserve</code>.","Create a call with the variant <code>kill_prefix</code>.","Create a call with the variant <code>kill_storage</code>.","Create a call with the variant <code>remark</code>.","Create a call with the variant <code>remark_with_event</code>.","Create a call with the variant <code>set</code>.","Create a call with the variant <code>set_code</code>.","Create a call with the variant <code>set_code_without_checks</code>.","Create a call with the variant <code>set_heap_pages</code>.","Create a call with the variant <code>set_storage</code>.","Create a call with the variant <code>transfer_all</code>.","Create a call with the variant <code>transfer_allow_death</code>.","Create a call with the variant <code>transfer_keep_alive</code>.","Create a call with the variant <code>upgrade_accounts</code>.","Create with system none origin and …","","The block number.","","","Opaque types. These are used by the CLI to instantiate …","The <code>pallet</code> module in each FRAME pallet hosts the most …","The parent hash.","","","","","","","","","","","See <code>Pallet::remark</code>.","See <code>Pallet::remark_with_event</code>.","","Create with system root origin and …","","","","Set the value of this parameter type in the storage.","See <code>Pallet::set</code>.","","","See <code>Pallet::set_code</code>.","See <code>Pallet::set_code_without_checks</code>.","See <code>Pallet::set_heap_pages</code>.","See <code>Pallet::set_storage</code>.","","Create with system signed origin and …","Who this purports to be from and the number of extrinsics …","","","","","","","","","The state trie merkle root","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::transfer_all</code>.","See <code>Pallet::transfer_allow_death</code>.","See <code>Pallet::transfer_keep_alive</codeee <code>Pallet::upgrade_accounts</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque block type.","Opaque block identifier type.","Identify by block header hash.","Opaque block header type.","Identify by block number.","","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","A chain-specific digest of data useful for light clients …","","","","","","","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Generate a set of keys with optionally using the given …","","","The block header.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","The block number.","The parent hash.","","","","","The state trie merkle root","","","","","","","","","","","","","","","","","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,19,66,50,0,0,0,19,50,0,0,0,0,0,0,0,0,0,0,0,163,0,0,0,0,0,0,19,0,0,19,66,50,0,0,0,0,0,19,22,66,50,0,0,0,0,0,0,0,0,19,66,50,0,0,0,164,0,0,19,66,0,0,0,0,0,0,0,0,0,0,0,164,0,163,0,0,163,0,0,0,0,0,163,0,0,0,0,0,0,0,0,0,0,0,163,0,0,0,0,0,19,66,50,0,0,0,19,66,50,0,0,0,19,0,0,0,50,0,0,0,0,22,0,0,0,0,40,42,9,43,44,45,46,47,19,22,48,50,51,52,165,166,167,168,169,170,171,172,173,51,51,51,170,9,0,11,52,51,19,22,24,174,24,51,51,175,166,52,52,176,174,24,174,24,173,40,43,44,45,46,47,19,22,66,48,50,52,40,43,44,45,46,47,19,22,66,48,50,52,40,43,44,45,46,47,19,22,66,48,50,52,177,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,24,51,51,9,51,171,51,19,40,42,9,43,44,45,46,47,19,22,48,50,51,52,40,42,9,43,44,45,46,47,19,22,48,50,51,52,202,42,42,51,203,51,51,51,51,51,51,51,40,43,44,45,46,47,19,22,66,48,50,52,40,43,44,45,46,47,19,22,66,48,50,52,40,43,44,45,46,47,19,22,66,48,50,52,51,40,43,44,45,46,47,19,22,66,48,50,52,24,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,24,204,19,40,19,48,52,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,174,24,51,173,168,40,19,22,66,48,50,52,51,40,43,44,45,46,47,19,22,48,50,51,52,40,40,40,43,43,43,44,44,44,45,45,45,46,46,46,47,47,47,19,19,19,22,22,22,48,48,48,50,50,50,51,51,51,52,52,52,174,24,174,24,174,24,51,11,11,51,36,204,9,51,179,40,9,43,44,45,46,47,19,22,66,48,50,51,52,48,48,48,48,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,9,9,9,9,43,44,45,46,24,47,19,19,19,19,19,19,19,19,19,19,19,22,22,22,66,66,66,66,66,66,66,66,48,50,50,50,50,50,50,50,50,50,51,52,66,178,178,179,179,180,180,40,40,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,42,42,202,202,11,11,203,203,9,9,43,43,44,44,45,45,46,46,24,24,47,47,19,19,22,22,66,66,48,48,50,50,51,51,52,52,178,178,179,179,180,180,40,40,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,42,42,202,202,11,11,203,203,9,9,43,43,44,44,45,45,46,46,24,24,47,47,19,19,22,22,66,66,48,48,50,50,51,51,52,52,205,51,51,51,51,181,181,181,182,182,182,183,183,183,184,184,184,185,185,185,186,186,186,187,187,187,188,188,188,189,189,189,190,190,190,191,191,191,192,192,192,193,193,193,194,194,194,195,195,195,196,196,196,197,197,197,198,198,198,199,199,199,200,200,200,201,201,201,40,48,52,40,48,52,19,40,48,52,40,19,48,52,40,19,48,52,19,174,24,51,11,11,36,180,40,43,44,45,46,47,19,22,66,48,50,52,203,51,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,51,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,9,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,11,22,40,19,48,52,19,19,19,19,19,19,19,19,19,19,19,47,47,177,188,206,52,52,180,174,24,43,44,45,46,22,51,51,51,51,51,51,172,203,167,203,203,0,52,52,52,48,48,48,48,52,52,52,52,40,52,52,52,52,48,48,48,48,9,9,204,51,178,0,0,204,51,51,19,11,51,51,51,51,11,11,52,52,9,9,9,47,24,188,40,11,9,52,52,52,52,9,9,205,40,19,22,66,48,50,52,51,204,51,51,174,24,174,24,22,47,40,43,44,45,46,47,19,22,66,48,50,52,40,42,9,43,44,45,46,47,19,22,48,50,51,52,174,24,48,48,48,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,66,66,66,66,66,66,66,48,50,50,50,50,50,50,50,50,50,51,52,9,40,43,44,45,46,47,19,22,66,48,50,52,40,43,44,45,46,47,19,22,66,48,50,52,40,43,44,45,46,47,19,22,66,48,50,52,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,40,43,44,45,46,47,19,22,66,48,50,51,52,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,48,180,19,51,51,51,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,42,202,11,203,9,43,44,45,46,24,47,19,22,66,48,50,51,52,47,207,208,209,210,211,212,208,212,213,210,209,210,211,207,214,213,215,216,217,218,219,220,221,222,223,224,225,223,226,0,0,0,227,0,227,0,0,149,57,149,149,57,149,57,149,57,149,57,149,57,57,149,57,149,57,149,57,149,57,149,57,149,149,57,57,149,57,149,57,149,57,228,149,57,57,149,57,149,57,149,149,149,57,57,57,229,228,149,57,149,57,57,57,57,149,149,57,57,149,149,57,57,149,149,149,229,149,57,149,57,149,57,149,57,149,149,57,57,149,228,228,149,57,149,57,228,149,57,149,57,149,57,149,57,149,57,149,57,149,57,149,57,149,57,149,57,149,57,57,149,57,0,0,0,0,0,156,157,154,154,156,157,157,157,156,154,157,156,154,157,154,156,157,156,157,156,156,156,157,157,157,157,154,156,154,157,156,154,157,154,157,0,156,154,157,154,156,157,156,156,156,157,157,157,156,157,156,154,157,156,156,154,154,157,157,156,156,154,154,157,157,157,157,157,157,157,157,156,156,156,154,157,156,156,154,157,156,154,157,156,154,157,157,156,156,156,156,156,156,156,156,156,156,154,156,0,157,156,157,156,154,157,156,154,157,0,0,0,157,157,157,156,154,157,157,156,154,157,156,154,157,156,154,157,156],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,0,0,0,0,0,[3,4],[3,[[6,[5]]]],[7,8],0,[[9,-1],2,10],0,[[[11,[-1,-2]]],[[15,[[13,[12]],14]]],16,[[17,[-1]]]],0,[[],18],[19,[[13,[[21,[[20,[19]]]]]]]],[22,[[13,[23]]]],[[24,25],[[15,[2,26]]]],0,0,[[],3],[[],[[6,[27]]]],0,0,0,0,0,0,0,0,0,0,[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,2],[[[6,[5]]],29],[[3,3,[6,[5]],30,30,[13,[30]],[13,[30]],[13,[30]],31,[13,[[6,[[2,[3,[6,[32]]]]]]]]],[[15,[33,34]]]],[9],[[],35],0,[[36,37],38],[19,[[13,[[15,[39]]]]]],[[[40,[-1]]],[[40,[-1]]],41],[42,42],[9,9],[43,43],[44,44],[45,45],[46,46],[47,47],[19,19],[22,22],[[[48,[-2,-1]]],[[48,[-2,-1]]],[],[[49,[-1]]]],[50,50],[51,51],[[[52,[-1]]],[[52,[-1]]],53],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-2,54,16,[[17,[-1]]]],[[42,55],56],[[42,55],57],[55],[[],[[13,[58]]]],[[3,[6,[5]],30,30,[13,[30]],[13,[30]],[13,[30]],31,[13,[[6,[[2,[3,[6,[32]]]]]]]]],[[15,[59,34]]]],[[],[[6,[5]]]],[[],[[2,[[13,[60]],[13,[[6,[61]]]],[13,[[6,[62]]]]]]]],[[],[[13,[60]]]],[[],[[13,[[6,[61]]]]]],[[],63],[[],[[13,[[6,[62]]]]]],[-1,[[15,[[40,[-2]],64]]],65,41],[-1,[[15,[43,64]]],65],[-1,[[15,[44,64]]],65],[-1,[[15,[45,64]]],65],[-1,[[15,[46,64]]],65],[-1,[[15,[47,64]]],65],[-1,[[15,[19,64]]],65],[-1,[[15,[22,64]]],65],[-1,[[15,[66,64]]],65],[-1,[[15,[[48,[-3,-2]],64]]],65,[],[[49,[-2]]]],[-1,[[15,[50,64]]],65],[-1,[[15,[[52,[-2]],64]]],65,53],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[[6,[5]]],[[13,[[6,[[2,[[6,[5]],68]]]]]]]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[],24],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[-1,[[15,[24]]],70],0,[[19,9],71],[[[40,[-1]]],[[15,[72,[73,[72]]]]],41],[[19,9],71],[[[48,[-2,-1]]],[[15,[72,[73,[72]]]]],[],[[49,[-1]]]],[[[52,[-1]]],[[15,[72,[73,[72]]]]],53],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],0,0,[[],[[13,[74]]]],0,0,[[[40,[-1]],-2],2,41,[75,76]],[[19,-1],2,[75,76]],[[22,-1],2,[75,76]],[[66,-1],2,[75,76]],[[[48,[-2,-1]],-3],2,[],[[49,[-1]]],[75,76]],[[50,-1],2,[75,76]],[[[52,[-1]],-2],2,53,[75,76]],[[],[[15,[2,12]]]],[[[40,[-1]],[40,[-1]]],31,41],[[43,43],31],[[44,44],31],[[45,45],31],[[46,46],31],[[47,47],31],[[19,19],31],[[22,22],31],[[[48,[-2,-1]],[48,[-2,-1]]],31,[],[[49,[-1]]]],[[50,50],31],[[51,51],31],[[[52,[-1]],[52,[-1]]],31,53],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],0,0,0,0,0,0,[36,2],[[[11,[-1,-2]],-3],-4,16,[[17,[-1]]],77,[]],[[[11,[-1,-2]]],[[13,[78]]],16,[[17,[-1]]]],[6,[[6,[55]]]],0,0,[9,31],[[]],[-1,[[13,[3]]],79],[[[40,[-1]],80],[[15,[2,81]]],41],[[9,80],[[15,[2,81]]]],[[43,80],82],[[44,80],82],[[45,80],82],[[46,80],82],[[47,80],82],[[19,80],82],[[22,80],82],[[66,80],82],[[[48,[-2,-1]],80],[[15,[2,81]]],[],[[49,[-1]]]],[[50,80],82],[[51,80],82],[[[52,[-1]],80],[[15,[2,81]]],53],0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,9],[-1,-1,[]],[83,9],[13,9],[[[84,[51]]],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[86,[85,51]]],19],[[[86,[87,51]]],19],[[[86,[88,51]]],19],[[[86,[89,51]]],19],[-1,-1,[]],[[[86,[90,51]]],19],[[[86,[91,51]]],19],[[[86,[92,51]]],19],[[[86,[93,51]]],19],[[[86,[94,51]]],19],[[[86,[95,51]]],19],[[[84,[51]]],22],[-1,-1,[]],[83,22],[[[96,[51]]],66],[[[97,[51]]],66],[[[98,[51]]],66],[-1,-1,[]],[[[99,[51]]],66],[[[100,[51]]],66],[[[101,[51]]],66],[[[102,[51]]],66],[-1,-1,[]],[103,50],[[[104,[51]]],50],[-1,-1,[]],[105,50],[[[106,[51]]],50],[107,50],[[[108,[51]]],50],[[[109,[51]]],50],[[[110,[51]]],50],[-1,-1,[]],[-1,-1,[]],[34,[[13,[66]]]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],0,[[],2],[[],30],[[63,111],[[13,[112]]]],[[[13,[[6,[5]]]]],[[6,[5]]]],[[],-1,[[114,[113]]]],[[],113],[[],113],[[],115],[[],-1,[[114,[115]]]],[[],115],[[],116],[[],-1,[[114,[116]]]],[[],116],[[],-1,[[114,[117]]]],[[],117],[[],117],[[],5],[[],5],[[],-1,[[114,[5]]]],[[],12],[[],12],[[],-1,[[114,[12]]]],[[],35],[[],-1,[[114,[35]]]],[[],35],[[],31],[[],31],[[],-1,[[114,[31]]]],[[],118],[[],-1,[[114,[118]]]],[[],118],[[],-1,[[114,[12]]]],[[],12],[[],12],[[],12],[[],12],[[],-1,[[114,[12]]]],[[],119],[[],119],[[],-1,[[114,[119]]]],[[],30],[[],30],[[],-1,[[114,[30]]]],[[],-1,[[114,[35]]]],[[],35],[[],35],[[],[[0,[51]]]],[[],-1,[[114,[[0,[51]]]]]],[[],[[0,[51]]]],[[],-1,[[114,[120]]]],[[],120],[[],120],[[],-1,[[114,[12]]]],[[],12],[[],12],[[],-1,[[114,[121]]]],[[],121],[[],121],[[],30],[[],-1,[[114,[30]]]],[[],30],[[],30],[[],30],[[],-1,[[114,[30]]]],[[],74],[[],-1,[[114,[74]]]],[[],74],[[[40,[-1]]],5,41],[[[48,[-2,-1]]],5,[],[[49,[-1]]]],[[[52,[-1]]],5,53],[[],[[67,[5]]]],[[],[[67,[5]]]],[[],[[67,[5]]]],[19,122],[[[40,[-1]]],123,41],[[[48,[-2,-1]]],123,[],[[49,[-1]]]],[[[52,[-1]]],123,53],[[],[[67,[123]]]],[123,[[67,[123]]]],[[],[[67,[123]]]],[[],[[67,[123]]]],[[[40,[-1]]],124,41],[19,124],[[[48,[-2,-1]]],124,[],[[49,[-1]]]],[[[52,[-1]]],124,53],[[],[[67,[123]]]],0,0,[[],125],[[[11,[-1,-2]]],[[15,[31,14]]],16,[[17,[-1]]]],[[[11,[-1,-2]],-3],[[15,[31,14]]],16,[[17,[-1]]],10],0,[[],74],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[[],[[13,[69]]]],[37,6],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1,-2]],-3],[[15,[[126,[-1]],26]]],16,[[17,[-1]]],[[128,[[127,[-1]]]]]],[22,[[13,[23]]]],[[[40,[-1]]],31,41],[19,31],[[[48,[-2,-1]]],31,[],[[49,[-1]]]],[[[52,[-1]]],31,53],[19,31],[19,[[13,[[86,[88,51]]]]]],[19,[[13,[[86,[93,51]]]]]],[19,[[13,[[86,[91,51]]]]]],[19,[[13,[[86,[92,51]]]]]],[19,[[13,[[86,[94,51]]]]]],[19,[[13,[[86,[87,51]]]]]],[19,[[13,[[86,[95,51]]]]]],[19,[[13,[[86,[85,51]]]]]],[19,[[13,[[86,[89,51]]]]]],[19,[[13,[[86,[90,51]]]]]],[47,31],[[]],0,[[],[[28,[5]]]],0,0,0,[[],74],0,0,[[],69],[[],69],[[],69],[[],69],[[],69],[[],129],[[],130],[12,[[13,[130]]]],[12,[[13,[130]]]],[[],[[6,[12]]]],[[],[[6,[12]]]],0,[[],[[13,[123]]]],0,[[],[[13,[123]]]],[[],[[13,[[28,[5]]]]]],[[],131],[[[6,[5]]],[[52,[-1]]],53],[[],[[52,[-1]]],53],[[],[[52,[-1]]],53],[132,[[48,[-2,-1]]],[],[[49,[-1]]]],[[],[[48,[-2,-1]]],[],[[49,[-1]]]],[[],[[48,[-2,-1]]],[],[[49,[-1]]]],[[],[[48,[-2,-1]]],[],[[49,[-1]]]],[[[6,[5]],12],[[52,[-1]]],53],[[[6,[[6,[5]]]]],[[52,[-1]]],53],[[[6,[5]]],[[52,[-1]]],53],[[[6,[5]]],[[52,[-1]]],53],[[],[[40,[-1]]],41],[[[6,[5]]],[[52,[-1]]],53],[[[6,[5]]],[[52,[-1]]],53],[35,[[52,[-1]]],53],[[[6,[[2,[[6,[5]],[6,[5]]]]]]],[[52,[-1]]],53],[31,[[48,[-2,-1]]],[],[[49,[-1]]]],[[],[[48,[-2,-1]]],[],[[49,[-1]]]],[[],[[48,[-2,-1]]],[],[[49,[-1]]]],[6,[[48,[-2,-1]]],[],[[49,[-1]]]],[[],9],[[],9],0,[[],2],[[],2],0,0,0,[6,[[2,[[13,[60]],[13,[[6,[62]]]]]]]],[[],[[15,[2,39]]]],[[19,[133,[19]],69],[[13,[[15,[2,39]]]]]],[[[11,[-1,-2]]],[[13,[[134,[-1]]]]],16,[[17,[-1]]]],[12,[[136,[135]]]],[12,[[137,[135]]]],[12,135],[120,135],[[[11,[-1,-2]]],2,16,[[17,[-1]]]],[[[11,[-1,-2]],-3],2,16,[[17,[-1]]],138],0,0,[9,2],[[],9],[[],9],[47,[[15,[2,34]]]],[[24,-1],15,139],[31,2],0,[[[11,[-1,-2]],140],2,16,[[17,[-1]]]],[[9,-1],2,[[141,[9]]]],0,0,0,0,[[],9],[[],9],0,[[[40,[-1]]],69,41],[19,69],[22,69],[66,69],[[[48,[-2,-1]]],69,[],[[49,[-1]]]],[50,69],[[[52,[-1]]],69,53],[[],142],0,[[3,30],32],[[[144,[[143,[36]]]],112],[[13,[2]]]],0,0,0,0,0,[47,12],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[66,[[15,[[100,[51]]]]]],[66,[[15,[[98,[51]]]]]],[-1,[[15,[-2]]],[],[]],[66,[[15,[[101,[51]]]]]],[66,[[15,[[102,[51]]]]]],[66,[[15,[[99,[51]]]]]],[66,[[15,[[97,[51]]]]]],[66,[[15,[[96,[51]]]]]],[-1,[[15,[-2]]],[],[]],[50,[[15,[[110,[51]]]]]],[50,[[15,[[108,[51]]]]]],[50,[[15,[107]]]],[50,[[15,[105]]]],[50,[[15,[[106,[51]]]]]],[50,[[15,[103]]]],[50,[[15,[[104,[51]]]]]],[50,[[15,[[109,[51]]]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[9,-1],[[15,[-2,9]]],77,[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[[],146],[[],146],[[],146],[[],146],[[],146],[[],146],[[],146],[[],146],[[],146],[[],146],[[],146],[[],146],[[],146],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],74],[[19,[133,[19]],69],[[13,[147]]]],[148,147],[148,147],[[],113],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,120],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[123,[67,[5]]],[[13,[[6,[5]]]]]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[149,149],[57,57],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[15,[149,64]]],65],[-1,[[15,[57,64]]],65],[[[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[[67,[5]]],[[13,[[6,[[2,[[6,[5]],68]]]]]]]],[[12,-1],[[15,[-2,64]]],65,[]],[[12,-1],[[15,[-2,64]]],65,[]],[[],57],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[-1,[[15,[149]]],70],[-1,[[15,[57]]],70],0,[69,2],[69,2],[57,[[6,[5]]]],[[149,-1],2,[75,76]],[[57,-1],2,[75,76]],[[149,149],31],[[57,57],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],0,0,[[149,80],82],[[57,80],[[15,[2,81]]]],[-1,-1,[]],[-1,-1,[]],[[[150,[-1,-2,-3,-4]]],57,151,151,151,152],[[[153,[-1,-2,-3,-4]]],57,151,151,151,152],[[[67,[5]]],[[15,[57,64]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[13,[[6,[5]]]]],[[6,[5]]]],[[149,68],[[67,[5]]]],0,0,[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[[],69],[[],69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[149,[[6,[[2,[[6,[5]],68]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[[],[[67,[68]]]],0,0,[[149,-1],15,139],[[57,-1],15,139],[149,69],[57,69],0,[[-1,[67,[5]]],[[6,[5]]],[]],[[-1,[67,[5]]],[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,145,[]],[-1,145,[]],[[],146],[[],146],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[57,-1],-2,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[[[154,[-1]],25],[[15,[2,26]]],155],[[],120],[-1,[[28,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[28,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[154,[-1]]],2,155],[[[156,[-1]]],[[156,[-1]]],[]],[[[157,[-1]]],[[157,[-1]]],155],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],69],[[],58],[[]],[-1,[[15,[[157,[-2]],64]]],65,155],[[[67,[5]]],[[15,[-1,64]]],[]],[[12,[67,[5]]],[[15,[-1,64]]],[]],[[12,-1],[[15,[-2,64]]],65,[]],[[],[[154,[-1]]],[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[69,-1,[]],[-1,[[15,[[154,[-2]]]]],70,[]],[[[157,[-1]]],71,155],0,[69,2],[69,2],[69,2],0,[[[156,[-1]],[156,[-1]]],31,[]],[[[157,[-1]],[157,[-1]]],31,155],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[[156,[-1]],80],82,[]],[[[157,[-1]],80],82,155],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[157,[-1]]],5,155],[[],[[67,[5]]]],[[[157,[-1]]],123,155],[[],[[67,[123]]]],[[[157,[-1]]],124,155],[-1,[[6,[5]]],[]],[[],69],[[],[[6,[158]]]],[[],69],[[],69],[[],69],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[157,[-1]]],31,155],[[],123],[[],123],[[],[[28,[5]]]],[[[159,[-1]]],2,155],[[],160],[[[159,[-1]]],2,155],[[],2],[[[159,[-1]],120],120,155],[[[159,[-1]]],120,155],[[],120],[[[154,[-1]],-2],15,[],139],[[],[[6,[161]]]],0,[[-1,[67,[5]]],[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,[-1,[[28,[5]]],[]],[-1,[[28,[5]]],[]],[-1,[[6,[5]]],[]],[-1,145,[]],[-1,145,[]],[-1,145,[]],[[],146],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[6,[162]]]]],"c":[56,1796],"p":[[3,"Private",1927],[15,"tuple"],[3,"H160",1928],[3,"Basic",1929],[15,"u8"],[3,"Vec",1930],[6,"AccountId",0],[6,"Nonce",0],[3,"RuntimeOrigin",0],[8,"Fn",1931],[3,"RuntimeApiImpl",0],[15,"u32"],[4,"Option",1932],[4,"ApiError",1933],[4,"Result",1934],[8,"Block",1935],[8,"CallApiAt",1933],[6,"ApplyExtrinsicResult",1936],[4,"RuntimeCall",0],[6,"PostDispatchInfoOf",1935],[6,"DispatchResultWithInfo",1936],[4,"OriginCaller",0],[4,"RawOrigin",1937],[3,"RuntimeGenesisConfig",0],[3,"Storage",1938],[3,"String",1939],[6,"AuthorityId",1940],[15,"array"],[6,"Result",1941],[3,"U256",1928],[15,"bool"],[3,"H256",1928],[6,"CallInfo",1942],[4,"DispatchError",1936],[15,"u64"],[6,"Block",0],[3,"InherentData",1943],[3,"CheckInherentsResult",1943],[4,"TransactionValidityError",1944],[4,"TimestampCall",0],[8,"Config",1945],[3,"TransactionConverter",0],[4,"RuntimeSlashReason",0],[4,"RuntimeLockId",0],[4,"RuntimeHoldReason",0],[4,"RuntimeFreezeReason",0],[4,"RuntimeTask",0],[4,"BalancesCall",0],[8,"Config",1946],[4,"RuntimeEvent",0],[3,"Runtime",0],[4,"SystemCall",0],[8,"Config",1947],[3,"ApiRef",1933],[4,"TransactionV2",1948],[6,"UncheckedExtrinsic",0],[3,"UncheckedExtrinsic",1672],[3,"CrateVersion",1949],[6,"CreateInfo",1942],[6,"BlockV2",1950],[4,"ReceiptV3",1951],[3,"TransactionStatus",1952],[6,"SetId",1953],[3,"Error",1954],[8,"Input",1955],[4,"RuntimeError",0],[15,"slice"],[3,"KeyTypeId",1956],[15,"usize"],[8,"Deserializer",1957],[6,"DispatchResultWithPostInfo",1937],[3,"PostDispatchInfo",1937],[3,"DispatchErrorWithPostInfo",1936],[3,"Permill",1958],[8,"Output",1955],[8,"Sized",1959],[8,"FnOnce",1931],[3,"StorageProof",1960],[8,"IntoIterator",1961],[3,"Formatter",1962],[3,"Error",1962],[6,"Result",1962],[6,"Origin",1963],[6,"Origin",1947],[6,"Balances",0],[6,"CallableCallFor",1937],[6,"Ethereum",0],[6,"BaseFee",0],[6,"Grandpa",0],[6,"Sudo",0],[6,"System",0],[6,"Timestamp",0],[6,"DynamicFee",0],[6,"EVM",0],[6,"HotfixSufficients",0],[4,"Error",1946],[4,"Error",1964],[4,"Error",1947],[4,"Error",1965],[4,"Error",1963],[4,"Error",1966],[4,"Error",1967],[4,"Event",1968],[4,"Event",1969],[4,"Event",1964],[4,"Event",1946],[4,"Event",1963],[4,"Event",1947],[4,"Event",1965],[4,"Event",1967],[6,"AuthorityId",1953],[3,"OpaqueKeyOwnershipProof",1953],[3,"RuntimeVersion",1970],[8,"From",1971],[6,"BlockNumber",0],[3,"BlockWeights",1972],[3,"BlockLength",1972],[15,"u128"],[6,"Multiplier",1973],[3,"Weight",1974],[4,"PostLogContent",1975],[3,"CallMetadata",1949],[15,"str"],[3,"DispatchInfo",1937],[6,"AuthorityList",1953],[6,"StorageChanges",1933],[6,"HashingFor",1935],[8,"Backend",1976],[3,"RuntimeMetadataPrefixed",1977],[3,"OpaqueMetadata",1978],[3,"NativeVersion",1970],[4,"AdjustmentDirection",1979],[6,"DispatchInfoOf",1935],[6,"ProofRecorder",1933],[6,"Balance",0],[3,"FeeDetails",1980],[3,"RuntimeDispatchInfo",1980],[8,"Extension",1981],[8,"Serializer",1982],[4,"CallContext",1983],[8,"Into",1971],[3,"SlotDuration",1984],[6,"NumberFor",1935],[3,"EquivocationProof",1953],[3,"TypeId",1985],[3,"Type",1986],[6,"TransactionValidity",1944],[4,"TransactionSource",1944],[3,"SessionKeys",1672],[3,"UncheckedExtrinsic",1987],[8,"Encode",1955],[8,"SignedExtension",1935],[3,"UncheckedExtrinsic",1988],[3,"GenesisConfig",1793],[8,"Config",1793],[3,"Pallet",1793],[4,"Call",1793],[3,"PalletInfoData",1949],[6,"BlockNumberFor",1989],[3,"StorageVersion",1949],[3,"StorageInfo",1990],[3,"TrackedStorageKey",1938],[6,"DigestItem",0],[6,"BlockId",0],[6,"SystemConfig",0],[6,"GrandpaConfig",0],[6,"TransactionPaymentConfig",0],[6,"ManualSealConfig",0],[6,"EthereumConfig",0],[6,"EVMConfig",0],[6,"EVMChainIdConfig",0],[6,"DynamicFeeConfig",0],[6,"BaseFeeConfig",0],[6,"GenesisConfig",0],[6,"AuraConfig",0],[6,"BalancesConfig",0],[6,"SignedBlock",0],[3,"ConsensusOnTimestampSet",0],[3,"FindAuthorTruncated",0],[3,"BaseFeeThreshold",0],[3,"Version",0],[3,"BlockHashCount",0],[3,"BlockWeights",0],[3,"BlockLength",0],[3,"SS58Prefix",0],[3,"MaxAuthorities",0],[3,"MinimumPeriod",0],[3,"EnableManualSeal",0],[3,"ExistentialDeposit",0],[3,"MaxLocks",0],[3,"MaxReserves",0],[3,"FeeMultiplier",0],[3,"BlockGasLimit",0],[3,"GasLimitPovSizeRatio",0],[3,"PrecompilesValue",0],[3,"WeightPerGas",0],[3,"SuicideQuickClearLimit",0],[3,"PostBlockAndTxnHashes",0],[3,"BoundDivision",0],[3,"DefaultBaseFeePerGas",0],[3,"DefaultElasticity",0],[3,"RuntimeApi",0],[3,"PalletInfo",0],[6,"Header",0],[6,"CheckedExtrinsic",0],[6,"SudoConfig",0],[13,"force_unreserve",1642],[13,"force_adjust_total_issuance",1642],[13,"transfer_allow_death",1642],[13,"force_transfer",1642],[13,"transfer_keep_alive",1642],[13,"transfer_all",1642],[13,"force_set_balance",1642],[13,"upgrade_accounts",1642],[13,"set_code",1658],[13,"set_code_without_checks",1658],[13,"apply_authorized_upgrade",1658],[13,"authorize_upgrade",1658],[13,"authorize_upgrade_without_checks",1658],[13,"set_storage",1658],[13,"kill_storage",1658],[13,"set_heap_pages",1658],[13,"kill_prefix",1658],[13,"remark",1658],[13,"remark_with_event",1658],[13,"set",1670],[6,"BlockId",1672],[6,"Header",1672],[6,"Block",1672]],"b":[[344,"impl-ConvertTransaction%3CUncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E-for-TransactionConverter"],[345,"impl-ConvertTransaction%3COpaqueExtrinsic%3E-for-TransactionConverter"],[664,"impl-From%3COriginCaller%3E-for-RuntimeOrigin"],[666,"impl-From%3CRawOrigin%3E-for-RuntimeOrigin"],[667,"impl-From%3COption%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[668,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[675,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[676,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[677,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[678,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[680,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[681,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[682,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[683,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[684,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[685,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[686,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-OriginCaller"],[688,"impl-From%3CRawOrigin%3E-for-OriginCaller"],[689,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[690,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[691,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[693,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[694,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[695,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[696,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[698,"impl-From%3CEvent%3E-for-RuntimeEvent"],[699,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[701,"impl-From%3CEvent%3E-for-RuntimeEvent"],[702,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[703,"impl-From%3CEvent%3E-for-RuntimeEvent"],[704,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[705,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[706,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[887,"impl-Get%3C_I%3E-for-Version"],[888,"impl-TypedGet-for-Version"],[889,"impl-Version"],[890,"impl-TypedGet-for-BlockHashCount"],[891,"impl-Get%3C_I%3E-for-BlockHashCount"],[892,"impl-BlockHashCount"],[893,"impl-BlockWeights"],[894,"impl-Get%3C_I%3E-for-BlockWeights"],[895,"impl-TypedGet-for-BlockWeights"],[896,"impl-Get%3C_I%3E-for-BlockLength"],[897,"impl-TypedGet-for-BlockLength"],[898,"impl-BlockLength"],[899,"impl-TypedGet-for-SS58Prefix"],[900,"impl-SS58Prefix"],[901,"impl-Get%3C_I%3E-for-SS58Prefix"],[902,"impl-TypedGet-for-MaxAuthorities"],[903,"impl-MaxAuthorities"],[904,"impl-Get%3C_I%3E-for-MaxAuthorities"],[905,"impl-MinimumPeriod"],[906,"impl-Get%3C_I%3E-for-MinimumPeriod"],[907,"impl-TypedGet-for-MinimumPeriod"],[908,"impl-EnableManualSeal"],[909,"impl-TypedGet-for-EnableManualSeal"],[910,"impl-Get%3C_I%3E-for-EnableManualSeal"],[911,"impl-ExistentialDeposit"],[912,"impl-Get%3C_I%3E-for-ExistentialDeposit"],[913,"impl-TypedGet-for-ExistentialDeposit"],[914,"impl-Get%3C_I%3E-for-MaxLocks"],[915,"impl-TypedGet-for-MaxLocks"],[916,"impl-MaxLocks"],[917,"impl-TypedGet-for-MaxReserves"],[918,"impl-MaxReserves"],[919,"impl-Get%3C_I%3E-for-MaxReserves"],[920,"impl-FeeMultiplier"],[921,"impl-TypedGet-for-FeeMultiplier"],[922,"impl-Get%3C_I%3E-for-FeeMultiplier"],[923,"impl-BlockGasLimit"],[924,"impl-TypedGet-for-BlockGasLimit"],[925,"impl-Get%3C_I%3E-for-BlockGasLimit"],[926,"impl-Get%3C_I%3E-for-GasLimitPovSizeRatio"],[927,"impl-GasLimitPovSizeRatio"],[928,"impl-TypedGet-for-GasLimitPovSizeRatio"],[929,"impl-PrecompilesValue"],[930,"impl-Get%3C_I%3E-for-PrecompilesValue"],[931,"impl-TypedGet-for-PrecompilesValue"],[932,"impl-Get%3C_I%3E-for-WeightPerGas"],[933,"impl-TypedGet-for-WeightPerGas"],[934,"impl-WeightPerGas"],[935,"impl-Get%3C_I%3E-for-SuicideQuickClearLimit"],[936,"impl-SuicideQuickClearLimit"],[937,"impl-TypedGet-for-SuicideQuickClearLimit"],[938,"impl-Get%3C_I%3E-for-PostBlockAndTxnHashes"],[939,"impl-PostBlockAndTxnHashes"],[940,"impl-TypedGet-for-PostBlockAndTxnHashes"],[941,"impl-TypedGet-for-BoundDivision"],[942,"impl-Get%3C_I%3E-for-BoundDivision"],[943,"impl-BoundDivision"],[944,"impl-DefaultBaseFeePerGas"],[945,"impl-TypedGet-for-DefaultBaseFeePerGas"],[946,"impl-Get%3C_I%3E-for-DefaultBaseFeePerGas"],[947,"impl-DefaultElasticity"],[948,"impl-Get%3C_I%3E-for-DefaultElasticity"],[949,"impl-TypedGet-for-DefaultElasticity"],[1171,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1172,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1173,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1174,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1175,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1176,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1177,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1178,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1179,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1180,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1196,"impl-Runtime"],[1197,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1198,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1199,"impl-Runtime"],[1200,"impl-Runtime"],[1201,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1228,"impl-RuntimeOrigin"],[1229,"impl-OriginTrait-for-RuntimeOrigin"],[1249,"impl-RuntimeOrigin"],[1250,"impl-OriginTrait-for-RuntimeOrigin"],[1261,"impl-OriginTrait-for-RuntimeOrigin"],[1262,"impl-RuntimeOrigin"],[1393,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1394,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1396,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1397,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1398,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1399,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1400,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1402,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1403,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1404,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[1405,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[1406,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1407,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[1408,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1409,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1733,"impl-From%3CUncheckedExtrinsic%3CAddress,+Call,+Signature,+Extra%3E%3E-for-OpaqueExtrinsic"],[1734,"impl-From%3CUncheckedExtrinsic%3CAddress,+Call,+Signature,+Extra%3E%3E-for-OpaqueExtrinsic"]]},\
"pallet_base_fee":{"doc":"","t":"IKKAKNGEIDQDQGEDGNNDQQLLLFFMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLNLLLLALLLLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BaseFeeThreshold","ideal","lower","pallet","upper","BaseFeeOverflow","BaseFeePerGas","Call","Config","DefaultBaseFeePerGas","DefaultBaseFeePerGas","DefaultElasticity","DefaultElasticity","Elasticity","Event","GenesisConfig","Module","NewBaseFeePerGas","NewElasticity","Pallet","RuntimeEvent","Threshold","__clone_box","__clone_box","__clone_box","__type_value_for_default_base_fee_per_gas","__type_value_for_default_elasticity","_marker","assimilate_storage","base_fee_per_gas","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","elasticity","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","init","init","init","integrity_test","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_feeless","min_gas_price","module_name","name","name_hash","new","new_call_variant_set_base_fee_per_gas","new_call_variant_set_elasticity","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","serialize","set_base_fee_per_gas","set_base_fee_per_gas","set_base_fee_per_gas_inner","set_elasticity","set_elasticity","set_elasticity_inner","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","elasticity","fee","elasticity","fee","set_base_fee_per_gas","set_elasticity","BaseFeePerGas","Elasticity","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"pallet_base_fee"],[5,"pallet_base_fee::pallet"],[254,"pallet_base_fee::pallet::Call"],[256,"pallet_base_fee::pallet::Event"],[258,"pallet_base_fee::pallet::dispatchables"],[260,"pallet_base_fee::pallet::storage_types"],[302,"sp_arithmetic::per_things"],[303,"dyn_clone::sealed"],[304,"primitive_types"],[305,"sp_storage"],[306,"alloc::string"],[307,"core::result"],[308,"sp_weights::weight_v2"],[309,"alloc::vec"],[310,"frame_support::traits::metadata"],[311,"parity_scale_codec::error"],[312,"parity_scale_codec::codec"],[313,"serde::de"],[314,"frame_support::dispatch"],[315,"parity_scale_codec::codec"],[316,"core::fmt"],[317,"core::fmt"],[318,"frame_support::traits::metadata"],[319,"frame_system::pallet_prelude"],[320,"core::any"],[321,"scale_info::ty"],[322,"sp_storage"]],"d":["","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","Storage type is <code>StorageValue</code> with value type <code>U256</code>.","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","","","","","Storage type is <code>StorageValue</code> with value type <code>Permill</code>.","The <code>Event</code> enum of this pallet","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","","The <code>Pallet</code> struct, the main type that implements traits …","","Lower and upper bounds for increasing / decreasing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>set_base_fee_per_gas</code>.","Create a call with the variant <code>set_elasticity</code>.","","","","","","","","","","","","See <code>Pallet::set_base_fee_per_gas</code>.","","","See <code>Pallet::set_elasticity</code>.","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,42,42,0,42,15,0,0,0,0,9,0,9,0,0,0,0,15,15,0,9,9,14,15,16,0,0,5,5,5,14,15,16,15,16,15,16,43,44,14,5,15,16,43,44,14,5,15,16,5,14,15,16,14,15,16,14,14,14,15,16,15,16,15,16,15,16,5,43,44,14,5,15,16,43,44,14,5,15,16,5,16,0,43,44,14,5,15,16,5,15,16,14,15,16,14,14,14,15,15,15,16,16,16,14,15,16,43,44,14,5,15,16,43,43,44,44,14,14,5,5,15,15,16,16,43,43,44,44,14,14,5,5,15,15,16,16,43,44,16,16,16,16,16,15,16,14,14,43,44,14,5,15,16,14,43,44,14,5,15,16,43,44,14,5,15,16,43,44,14,5,15,16,16,14,14,14,14,5,16,16,14,14,14,14,14,14,14,14,14,5,14,16,14,14,16,14,15,16,14,0,15,16,14,15,16,43,44,14,5,15,16,43,44,14,5,15,16,0,0,0,15,16,15,16,15,16,43,44,14,5,15,16,15,16,43,44,14,5,15,16,43,44,14,5,15,16,43,44,14,5,15,16,14,45,46,47,48,0,0,0,0,49,50,49,50,49,50,49,50,49,50,49,50,49,49,50,50,49,49,50,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50],"f":[0,[[],1],[[],1],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[],4],[[],1],0,[[[5,[-1]],6],[[8,[3,7]]],9],0,[[],10],[-1,[[12,[11]]],[]],[-1,[[12,[11]]],[]],[-1,[[13,[11]]],[]],[-1,[[13,[11]]],[]],[-1,[[12,[11]]],[]],[-1,[[12,[11]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1]]],3,9],[[[14,[-1]]],[[14,[-1]]],[]],[15,15],[[[16,[-1]]],[[16,[-1]]],9],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],17],[[],18],[[]],[-1,[[8,[15,19]]],20],[-1,[[8,[[16,[-2]],19]]],20,9],[[[21,[11]]],[[8,[-1,19]]],[]],[[[21,[11]]],[[8,[-1,19]]],[]],[[22,[21,[11]]],[[8,[-1,19]]],[]],[[22,[21,[11]]],[[8,[-1,19]]],[]],[[22,-1],[[8,[-2,19]]],20,[]],[[22,-1],[[8,[-2,19]]],20,[]],[[],[[5,[-1]]],9],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[-1,[[8,[[5,[-2]]]]],23,9],[[[16,[-1]]],24,9],0,[17,3],[17,3],[17,3],[17,3],[17,3],[17,3],0,[[15,-1],3,[25,26]],[[[16,[-1]],-2],3,9,[25,26]],[[[14,[-1]],[14,[-1]]],27,[]],[[15,15],27],[[[16,[-1]],[16,[-1]]],27,9],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[[14,[-1]],28],29,[]],[[15,28],29],[[[16,[-1]],28],29,9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],4],[[],1],[[[16,[-1]]],11,9],[[],[[21,[11]]]],[[[16,[-1]]],30,9],[[],[[21,[30]]]],[[[16,[-1]]],31,9],[-1,[[13,[11]]],[]],[-1,[[13,[11]]],[]],[[],17],[[],[[13,[32]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1]]],27,9],[[],[[3,[4,10]]]],[[],30],[[],30],[[],[[12,[11]]]],[[4,1],[[5,[-1]]],9],[4,[[16,[-1]]],9],[1,[[16,[-1]]],9],[[[33,[-1]]],3,9],[[],34],[[[33,[-1]]],3,9],[[[33,[-1]]],3,9],[[],3],[[[33,[-1]],10],10,9],[[[33,[-1]]],10,9],[[[33,[-1]]],10,9],[[],10],[[[5,[-1]],-2],8,9,35],[[[36,[-1]],4],37,9],0,[4,10],[[[36,[-1]],1],37,9],0,[1,10],[15,17],[[[16,[-1]]],17,9],[[],[[13,[38]]]],0,[[-1,[21,[11]]],[[13,[11]]],[]],[[-1,[21,[11]]],[[13,[11]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,0,[-1,[[12,[11]]],[]],[-1,[[12,[11]]],[]],[-1,[[12,[11]]],[]],[-1,[[12,[11]]],[]],[-1,[[13,[11]]],[]],[-1,[[13,[11]]],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[[],40],[[],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[13,[41]]]],0,0,0,0,[4,3],[1,3],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,3],[17,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],17],[[],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[16],"p":[[3,"Permill",302],[3,"Private",303],[15,"tuple"],[3,"U256",304],[3,"GenesisConfig",5],[3,"Storage",305],[3,"String",306],[4,"Result",307],[8,"Config",5],[3,"Weight",308],[15,"u8"],[15,"array"],[3,"Vec",309],[3,"Pallet",5],[4,"Event",5],[4,"Call",5],[15,"usize"],[3,"CrateVersion",310],[3,"Error",311],[8,"Input",312],[15,"slice"],[15,"u32"],[8,"Deserializer",313],[6,"DispatchResultWithPostInfo",314],[8,"Output",312],[8,"Sized",315],[15,"bool"],[3,"Formatter",316],[6,"Result",316],[15,"str"],[3,"DispatchInfo",314],[3,"PalletInfoData",310],[6,"BlockNumberFor",317],[3,"StorageVersion",310],[8,"Serializer",318],[6,"OriginFor",317],[6,"DispatchResult",314],[3,"StorageInfo",319],[3,"TypeId",320],[3,"Type",321],[3,"TrackedStorageKey",305],[8,"BaseFeeThreshold",0],[3,"DefaultBaseFeePerGas",5],[3,"DefaultElasticity",5],[13,"set_elasticity",254],[13,"set_base_fee_per_gas",254],[13,"NewElasticity",256],[13,"NewBaseFeePerGas",256],[3,"BaseFeePerGas",260],[3,"Elasticity",260]],"b":[[183,"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[184,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[187,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[188,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]},\
"pallet_dynamic_fee":{"doc":"","t":"RDGLLLLLLLLLLLLLLALLLLLLLLEIDEGQGDGLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLNLLLLLLLLLLLLALLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLMFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["INHERENT_IDENTIFIER","InherentDataProvider","InherentType","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","pallet","provide_inherent_data","try_from","try_handle_error","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Call","Config","GenesisConfig","InherentError","MinGasPrice","MinGasPriceBoundDivisor","Module","Pallet","TargetMinGasPrice","__clone_box","__clone_box","_marker","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","check_inherent","clone","clone","clone_into","clone_into","count","crate_version","create_inherent","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_fatal_error","is_feeless","is_inherent","min_gas_price","min_gas_price","module_name","name","name_hash","new_call_variant_note_min_gas_price_target","note_min_gas_price_target","note_min_gas_price_target","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","serialize","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","whitelisted_storage_keys","target","note_min_gas_price_target","MinGasPrice","TargetMinGasPrice","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"pallet_dynamic_fee"],[26,"pallet_dynamic_fee::pallet"],[209,"pallet_dynamic_fee::pallet::Call"],[210,"pallet_dynamic_fee::pallet::dispatchables"],[211,"pallet_dynamic_fee::pallet::storage_types"],[253,"sp_inherents"],[254,"core::future::future"],[255,"alloc::boxed"],[256,"core::pin"],[257,"core::result"],[258,"core::any"],[259,"dyn_clone::sealed"],[260,"sp_storage"],[261,"alloc::string"],[262,"sp_weights::weight_v2"],[263,"alloc::vec"],[264,"frame_support::traits::metadata"],[265,"core::option"],[266,"parity_scale_codec::error"],[267,"parity_scale_codec::codec"],[268,"serde::de"],[269,"frame_support::dispatch"],[270,"parity_scale_codec::codec"],[271,"core::fmt"],[272,"core::fmt"],[273,"frame_system::pallet_prelude"],[274,"frame_support::dispatch"],[275,"frame_support::traits::storage"],[276,"scale_info::ty"],[277,"sp_storage"]],"d":["","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Can be used to configure the genesis state of this pallet.","","Storage type is <code>StorageValue</code> with value type <code>U256</code>.","Bound divisor for min gas price.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","Storage type is <code>StorageValue</code> with value type <code>U256</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Create a call with the variant <code>note_min_gas_price_target</code>.","","See <code>Pallet::note_min_gas_price_target</code>.","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,0,0,0,0,0,17,0,0,0,20,21,14,14,20,21,26,21,26,21,26,20,14,21,26,20,14,21,26,14,20,20,21,20,21,20,20,20,20,21,26,21,26,21,26,21,26,14,20,14,21,26,20,14,21,26,14,21,0,20,14,21,26,21,20,21,20,20,20,21,21,21,20,21,26,20,14,21,26,20,20,14,14,21,21,26,26,20,20,14,14,21,21,26,26,21,21,21,21,21,21,26,20,20,20,14,21,26,20,20,14,21,26,20,14,21,26,20,14,21,26,26,21,20,20,14,20,20,20,21,20,21,20,20,20,20,20,20,20,20,20,14,21,20,0,21,26,20,21,20,14,21,26,20,14,21,26,0,0,0,21,26,21,26,21,26,20,14,21,26,21,20,14,21,26,20,14,21,26,20,14,21,26,20,47,0,0,0,48,49,48,49,48,49,48,49,48,49,48,49,48,48,49,49,48,48,49,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[3,4],[[7,[[6,[5]]]]]],[-1,[[8,[-2]]],[],[]],[[3,[10,[9]],[11,[9]]],[[7,[[6,[5]]]]]],[-1,[[8,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,13],2,[]],[[-1,13],2,[]],0,[[[14,[-1]],15],[[8,[2,16]]],17],[[],18],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[19,[9]]],[]],[-1,[[19,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],2,17],[4,[[8,[2]]]],[[[20,[-1]]],[[20,[-1]]],[]],[[[21,[-1]]],[[21,[-1]]],17],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],1],[[],22],[4,23],[[]],[-1,[[8,[[21,[-2]],24]]],25,17],[-1,[[8,[26,24]]],25],[[[11,[9]]],[[8,[-1,24]]],[]],[[[11,[9]]],[[8,[-1,24]]],[]],[[27,[11,[9]]],[[8,[-1,24]]],[]],[[27,[11,[9]]],[[8,[-1,24]]],[]],[[27,-1],[[8,[-2,24]]],25,[]],[[27,-1],[[8,[-2,24]]],25,[]],[[],[[14,[-1]]],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[[14,[-2]]]]],28,[]],[[[21,[-1]]],29,17],0,[1,2],[1,2],[1,2],[1,2],[[[21,[-1]],-2],2,17,[30,31]],[[[20,[-1]],[20,[-1]]],32,[]],[[[21,[-1]],[21,[-1]]],32,17],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[[20,[-1]],33],34,[]],[[[21,[-1]],33],34,17],[[26,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[[21,[-1]]],9,17],[[],[[11,[9]]]],[[[21,[-1]]],35,17],[[],[[11,[35]]]],[[[21,[-1]]],36,17],[-1,[[19,[9]]],[]],[-1,[[19,[9]]],[]],[[],1],[[],[[19,[37]]]],[[],1],[[],1],[[],1],[[],1],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,32],[[[21,[-1]]],32,17],[[],32],[[],[[2,[38,18]]]],0,[[],35],[[],35],[[],[[10,[9]]]],[38,[[21,[-1]]],17],[[[39,[-1]],38],40,17],0,[[[41,[-1]]],2,17],[[],42],[[[41,[-1]]],2,17],[[[41,[-1]]],2,17],[[],2],[[[41,[-1]],18],18,17],[[[41,[-1]]],18,17],[[[41,[-1]]],18,17],[[],18],[[[14,[-1]],-2],8,[],43],[[[21,[-1]]],1,17],[[],[[19,[44]]]],0,[[-1,[11,[9]]],[[19,[9]]],[]],[[-1,[11,[9]]],[[19,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,0,[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[19,[9]]],[]],[-1,[[19,[9]]],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[19,[46]]]],0,[38,2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[32],"p":[[15,"usize"],[15,"tuple"],[3,"InherentDataProvider",0],[3,"InherentData",253],[8,"Future",254],[3,"Box",255],[3,"Pin",256],[4,"Result",257],[15,"u8"],[15,"array"],[15,"slice"],[3,"TypeId",258],[3,"Private",259],[3,"GenesisConfig",26],[3,"Storage",260],[3,"String",261],[8,"Config",26],[3,"Weight",262],[3,"Vec",263],[3,"Pallet",26],[4,"Call",26],[3,"CrateVersion",264],[4,"Option",265],[3,"Error",266],[8,"Input",267],[4,"InherentError",26],[15,"u32"],[8,"Deserializer",268],[6,"DispatchResultWithPostInfo",269],[8,"Output",267],[8,"Sized",270],[15,"bool"],[3,"Formatter",271],[6,"Result",271],[15,"str"],[3,"DispatchInfo",269],[3,"PalletInfoData",264],[3,"U256",272],[6,"OriginFor",273],[6,"DispatchResult",269],[6,"BlockNumberFor",273],[3,"StorageVersion",264],[8,"Serializer",274],[3,"StorageInfo",275],[3,"Type",276],[3,"TrackedStorageKey",260],[13,"note_min_gas_price_target",209],[3,"MinGasPrice",211],[3,"TargetMinGasPrice",211]],"b":[[159,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[160,"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[163,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[164,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]},\
"pallet_ethereum":{"doc":"Ethereum pallet","t":"DGNNNNNNNNDDNNDDNNDDNEEEEEEDDDLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLMMMALLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLGEIGGGENENQDNGGDQNQQLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLNLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMFDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccessListItem","Block","BlockAndTxnHashes","Bytes","Call","Create","EIP1559","EIP1559","EIP2930","EIP2930","EnsureEthereumTransaction","EthereumBlockHashMapping","EthereumTransaction","Hash","IntermediateStateRoot","InvalidTransactionWrapper","Legacy","Legacy","LegacyTransactionMessage","Log","OnlyBlockHash","PostLogContent","RawOrigin","Receipt","ReturnValue","Transaction","TransactionAction","TransactionData","TransactionStatus","ValidatedTransaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","access_list","action","action","address","address","apply","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contract_address","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_payload","encode_payload","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_ethereum_transaction","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gas_limit","gas_limit","gas_price","gas_price","get","hash","hash","header","identity","identity","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","logs","logs_bloom","max_encoded_len","max_fee_per_gas","max_priority_fee_per_gas","new","nonce","nonce","ommers","pallet","proof_size_base_cost","rlp_append","rlp_append","rlp_append","rlp_append","serialize","serialize","serialize","serialize","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","storage_keys","to","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics","transaction_hash","transaction_index","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_origin","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockHash","Call","Config","CurrentBlock","CurrentReceipts","CurrentTransactionStatuses","Error","EthereumTransaction","Event","Executed","ExtraDataLength","GenesisConfig","InvalidSignature","Module","Origin","Pallet","PostLogContent","PreLogExists","RuntimeEvent","StateRoot","__clone_box","__clone_box","__clone_box","_marker","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","check_self_contained","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_block_hash","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_feeless","is_self_contained","migrate_block_v0_to_v2","module_name","name","name_hash","new_call_variant_transact","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","on_runtime_upgrade","pre_dispatch_self_contained","serialize","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","transact","transact","transaction_weight","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_self_contained","validate_transaction_in_block","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","transaction","exit_reason","extra_data","from","to","transaction_hash","transact","BlockHash","CurrentBlock","CurrentReceipts","CurrentTransactionStatuses","Pending","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_ethereum"],[659,"pallet_ethereum::pallet"],[905,"pallet_ethereum::pallet::Call"],[906,"pallet_ethereum::pallet::Event"],[911,"pallet_ethereum::pallet::dispatchables"],[912,"pallet_ethereum::pallet::storage_types"],[1017,"dyn_clone::sealed"],[1018,"primitive_types"],[1019,"frame_support::dispatch"],[1020,"fp_evm"],[1021,"frame_support::dispatch"],[1022,"alloc::vec"],[1023,"primitive_types"],[1024,"parity_scale_codec::codec"],[1025,"rlp::rlpin"],[1026,"rlp::error"],[1027,"ethereum::enveloped"],[1028,"serde::de"],[1029,"bytes::bytes_mut"],[1030,"parity_scale_codec::codec"],[1031,"core::fmt"],[1032,"core::fmt"],[1033,"ethereum::transaction"],[1034,"ethereum::transaction"],[1035,"rlp::stream"],[1036,"serde::ser"],[1037,"core::any"],[1038,"scale_info::ty"],[1039,"sp_storage"],[1040,"alloc::string"],[1041,"sp_weights::weight_v2"],[1042,"sp_runtime::transaction_validity"],[1043,"core::marker"],[1044,"frame_support::dispatch"],[1045,"frame_support::dispatch"],[1046,"frame_support::traits::metadata"],[1047,"frame_support::traits::storage"],[1048,"frame_system::pallet_prelude"]],"d":["","","","","","","EIP-1559 receipt type","EIP-1559 transaction","EIP-2930 receipt type","EIP-2930 transaction","","Returns the Ethereum block hash by number.","","","","","Legacy receipt type","Legacy transaction typeeturns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …torage type is <code>StorageMap</code> with key type <code>U256</code> and value …","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The current Ethereum block.","The current Ethereum receipts.","The current transaction statuses.","The <code>Error</code> enum of this pallet.","","The <code>Event</code> enum of this pallet","An ethereum transaction was successfully executed.","The maximum length of the extra data in the Executed event.","Can be used to configure the genesis state of this pallet.","Signature is invalid.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","The <code>Pallet</code> struct, the main type that implements traits …","What’s included in the PostLog.","Pre-log is present, therefore transact is not allowed.","The overarching event type.","How Ethereum state root is calculated.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get current block hash","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","Execute an Ethereum transaction.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Create a call with the variant <code>transact</code>.","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","Transact an Ethereum transaction.","See <code>Pallet::transact</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate an Ethereum transaction already in block","","","","","","","","","","","","","","Transact an Ethereum transaction.","Warning: Doc-Only","The current Ethereum block.","The current Ethereum receipts.","The current transaction statuses.","Current building block’s transactions and receipts.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,17,18,21,21,20,4,20,4,0,0,16,18,0,0,20,4,0,0,17,0,0,0,0,0,0,0,0,0,14,15,16,17,18,19,20,21,22,23,4,14,14,23,19,22,76,14,15,16,19,20,21,22,23,4,14,15,16,19,20,21,22,23,4,14,15,16,19,20,21,22,23,4,77,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,23,15,17,14,15,16,17,18,19,20,21,22,23,4,14,15,16,17,18,19,20,21,22,23,4,15,19,14,15,16,19,19,20,20,21,21,22,22,23,4,4,14,15,16,19,20,21,22,23,4,14,15,16,19,20,21,22,23,4,14,15,16,19,20,21,22,23,4,15,17,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,19,20,21,22,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,20,4,14,15,16,19,20,21,22,23,4,0,14,15,16,17,18,19,20,21,22,23,4,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,4,4,4,14,15,16,18,19,20,21,22,23,4,14,14,15,78,76,79,77,41,41,16,17,18,19,20,21,22,23,23,4,4,4,15,14,14,15,15,78,78,76,76,79,79,77,77,41,41,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,4,4,14,14,15,15,78,78,76,76,79,79,77,77,41,41,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,4,4,14,23,14,23,79,23,4,80,14,15,16,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,23,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,15,17,15,15,16,14,14,14,14,23,80,0,14,19,21,22,23,19,20,21,22,4,14,15,16,19,20,21,22,23,4,22,15,14,15,16,19,20,21,22,23,4,14,15,16,17,18,19,20,21,22,23,4,19,15,15,80,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,78,14,15,16,19,20,21,22,23,4,14,15,16,19,20,21,22,23,4,14,15,16,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,20,21,22,23,4,4,15,16,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,14,23,14,15,78,76,79,77,41,16,17,18,19,20,21,22,23,4,0,0,0,0,0,0,0,81,0,61,54,0,63,0,0,0,54,63,54,54,60,61,56,51,51,60,61,63,56,61,63,56,61,63,56,60,61,63,51,56,60,61,63,51,56,51,56,60,61,56,60,61,56,60,60,60,60,61,63,56,61,63,56,61,63,56,61,63,56,51,60,61,63,51,56,60,61,63,51,56,51,56,0,60,61,63,51,56,61,63,56,60,61,56,60,60,60,61,61,61,56,56,56,60,60,61,63,56,60,61,63,51,56,60,60,61,61,63,63,51,51,56,56,60,60,61,61,63,63,51,51,56,56,56,56,56,56,56,61,63,56,60,60,60,61,63,51,56,60,60,61,63,51,56,60,61,63,51,56,60,61,63,51,56,56,56,60,60,60,60,56,60,60,60,60,60,60,60,60,60,60,56,51,61,63,56,60,0,61,63,56,60,61,56,60,56,60,60,61,63,51,56,60,61,63,51,56,0,0,0,61,63,56,61,63,56,61,63,56,60,61,63,51,56,61,63,56,60,61,63,51,56,60,61,63,51,56,56,60,60,61,63,51,56,60,63,82,83,83,83,83,83,0,0,0,0,0,0,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,84,85,85,86,86,87,87,88,88,84,84,85,85,86,86,87,87,88,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,0,[[3,4],[[8,[[2,[5,6]],7]]]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[12,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],-1,[]],[[],-1,[]],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[4,4],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[-1,[[8,[14,24]]],25],[-1,[[8,[15,24]]],25],[-1,[[8,[16,24]]],25],[-1,[[8,[19,24]]],25],[26,[[8,[19,27]]]],[[[28,[9]]],[[8,[20,29]]]],[-1,[[8,[20,24]]],25],[-1,[[8,[21,24]]],25],[26,[[8,[21,27]]]],[-1,[[8,[22,24]]],25],[26,[[8,[22,27]]]],[-1,[[8,[23,24]]],25],[-1,[[8,[4,24]]],25],[[[28,[9]]],[[8,[4,29]]]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[],15],[[],17],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[-1,[[8,[19]]],31],[-1,[[8,[20]]],31],[-1,[[8,[21]]],31],[-1,[[8,[22]]],31],[-1,[[8,[4]]],31],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[30,2],[20,32],[4,32],[[14,-1],2,[33,34]],[[15,-1],2,[33,34]],[[16,-1],2,[33,34]],[[19,-1],2,[33,34]],[[20,-1],2,[33,34]],[[21,-1],2,[33,34]],[[22,-1],2,[33,34]],[[23,-1],2,[33,34]],[[4,-1],2,[33,34]],[-1,[[8,[3,35]]],[]],[[14,14],36],[[15,15],36],[[16,16],36],[[17,17],36],[[18,18],36],[[19,19],36],[[20,20],36],[[21,21],36],[[22,22],36],[[23,23],36],[[4,4],36],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[14,37],[[8,[2,38]]]],[[15,37],[[8,[2,38]]]],[[16,37],39],[[18,37],39],[[19,37],[[8,[2,38]]]],[[20,37],[[8,[2,38]]]],[[21,37],[[8,[2,38]]]],[[22,37],[[8,[2,38]]]],[[23,37],[[8,[2,38]]]],[[4,37],[[8,[2,38]]]],[-1,-1,[]],[4,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[40,41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,23],[43,4],[42,4],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,[[],13],[23,13],[4,13],0,[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,36,[]],[-1,36,[]],0,0,[[],30],0,0,[[21,[11,[9]],44,44,[45,[44]],[45,[44]],[45,[44]],44,[45,[46]],[11,[[2,[3,[11,[13]]]]]]],14],0,0,0,0,[14,46],[[19,47],2],[[21,47],2],[[22,47],2],[[23,47],2],[[19,-1],8,48],[[20,-1],8,48],[[21,-1],8,48],[[22,-1],8,48],[[4,-1],8,48],[14,30],[15,30],[16,30],[19,30],[20,30],[21,30],[22,30],[23,30],[4,30],0,0,[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-1]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[20,[[45,[9]]]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[4,[[45,[9]]]],[-1,49,[]],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[[[51,[-1]],52],[[8,[2,53]]],54],[[],55],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[51,[-1]]],2,54],[[[56,[-1]]],[[45,[[8,[3,57]]]]],[58,59,54]],[[[60,[-1]]],[[60,[-1]]],[]],[61,61],[[[56,[-1]]],[[56,[-1]]],54],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],30],[[],62],[[],[[45,[13]]]],[[]],[-1,[[8,[61,24]]],25],[-1,[[8,[[63,[-2]],24]]],25,[]],[-1,[[8,[[56,[-2]],24]]],25,54],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,[28,[9]]],[[8,[-1,24]]],[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[12,-1],[[8,[-2,24]]],25,[]],[[],[[51,[-1]]],[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[-1,[[8,[[51,[-2]]]]],31,[]],[[[56,[-1]]],64,54],0,[30,2],[30,2],[30,2],[30,2],[30,2],[[61,-1],2,[33,34]],[[[63,[-1]],-2],2,[],[33,34]],[[[56,[-1]],-2],2,54,[33,34]],[[[60,[-1]],[60,[-1]]],36,[]],[[61,61],36],[[[56,[-1]],[56,[-1]]],36,54],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[3,4,[45,[65]]],[[8,[[2,[[45,[3]],[45,[3]],6]],7]]]],[[[60,[-1]],37],39,[]],[[61,37],39],[[[63,[-1]],37],39,54],[[[56,[-1]],37],39,54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[[56,[-1]]],9,54],[[],[[28,[9]]]],[[[56,[-1]]],35,54],[[],[[28,[35]]]],[[[56,[-1]]],66,54],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[[],30],[[],[[11,[67]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],36,54],[[[56,[-1]]],36,[58,59,54]],[[],55],[[],35],[[],35],[[],[[10,[9]]]],[4,[[56,[-1]]],54],[[[68,[-1]]],2,54],[[],69],[[[68,[-1]]],2,54],[[[68,[-1]]],2,54],[[],2],[[[68,[-1]],55],55,54],[[[68,[-1]]],55,54],[[[68,[-1]]],55,54],[[],55],[[],55],[[[56,[-1]],3,70,30],[[45,[[8,[2,57]]]]],[58,59,54]],[[[51,[-1]],-2],8,[],48],[61,30],[[[63,[-1]]],30,[]],[[[56,[-1]]],30,54],[[],[[11,[71]]]],0,[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[[-1,[28,[9]]],[[11,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[72,[-1]],4],64,54],0,[14,[[2,[[45,[55]],[45,[46]]]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,0,[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[11,[9]]],[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[[],50],[[],50],[[],50],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]],3,70,30],[[45,[73]]],[58,59,54]],[[3,4],[[8,[2,57]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[11,[74]]]],[[-1,55],[[75,[5]]],[]],0,0,0,0,0,0,[4,2],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,-1,[]],[30,2],[30,2],[30,2],[30,2],[30,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],30],[[],30],[[],30],[[],30],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[672],"p":[[3,"Private",1017],[15,"tuple"],[3,"H160",1018],[4,"Transaction",0],[3,"PostDispatchInfo",1019],[4,"CallOrCreateInfo",1020],[6,"DispatchErrorWithPostInfo",1019],[4,"Result",1021],[15,"u8"],[15,"array"],[3,"Vec",1022],[15,"u32"],[3,"H256",1018],[3,"TransactionData",0],[3,"TransactionStatus",0],[4,"RawOrigin",0],[4,"PostLogContent",0],[4,"ReturnValue",0],[3,"Log",0],[4,"Receipt",0],[4,"TransactionAction",0],[3,"AccessListItem",0],[3,"LegacyTransactionMessage",0],[3,"Error",1023],[8,"Input",1024],[3,"Rlp",1025],[4,"DecoderError",1026],[15,"slice"],[4,"EnvelopedDecoderError",1027],[15,"usize"],[8,"Deserializer",1028],[3,"BytesMut",1029],[8,"Output",1024],[8,"Sized",1030],[15,"str"],[15,"bool"],[3,"Formatter",1031],[3,"Error",1031],[6,"Result",1031],[4,"TransactionValidationError",1032],[3,"InvalidTransactionWrapper",0],[3,"LegacyTransaction",1033],[4,"TransactionV1",1033],[3,"U256",1018],[4,"Option",1034],[15,"u64"],[3,"RlpStream",1035],[8,"Serializer",1036],[3,"TypeId",1037],[3,"Type",1038],[3,"GenesisConfig",659],[3,"Storage",1039],[3,"String",1040],[8,"Config",659],[3,"Weight",1041],[4,"Call",659],[4,"TransactionValidityError",1042],[8,"Send",1030],[8,"Sync",1030],[3,"Pallet",659],[4,"Event",659],[3,"CrateVersion",1043],[4,"Error",659],[6,"DispatchResultWithPostInfo",1019],[3,"Config",1044],[3,"DispatchInfo",1019],[3,"PalletInfoData",1043],[6,"BlockNumberFor",1045],[3,"StorageVersion",1043],[6,"DispatchInfoOf",1046],[3,"StorageInfo",1047],[6,"OriginFor",1045],[6,"TransactionValidity",1042],[3,"TrackedStorageKey",1039],[3,"DispatchErrorWithPostInfo",1048],[3,"ValidatedTransaction",0],[3,"EthereumBlockHashMapping",0],[3,"EnsureEthereumTransaction",0],[3,"IntermediateStateRoot",0],[6,"Block",0],[6,"Origin",659],[13,"transact",905],[13,"Executed",906],[3,"Pending",912],[3,"CurrentBlock",912],[3,"CurrentReceipts",912],[3,"CurrentTransactionStatuses",912],[3,"BlockHash",912]],"b":[[138,"impl-Decode-for-Log"],[139,"impl-Decodable-for-Log"],[140,"impl-EnvelopedDecodable-for-ReceiptV3"],[141,"impl-Decode-for-ReceiptV3"],[142,"impl-Decode-for-TransactionAction"],[143,"impl-Decodable-for-TransactionAction"],[144,"impl-Decode-for-AccessListItem"],[145,"impl-Decodable-for-AccessListItem"],[147,"impl-Decode-for-TransactionV2"],[148,"impl-EnvelopedDecodable-for-TransactionV2"],[315,"impl-From%3CTransactionV1%3E-for-TransactionV2"],[316,"impl-From%3CLegacyTransaction%3E-for-TransactionV2"],[832,"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[833,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[836,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[837,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[838,"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E"],[839,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]},\
"pallet_evm":{"doc":"EVM Pallet","t":"DINSGNINGNDDNNNGNDDDIDDDNNNDDEEEEENNIDNNNIDDNNNNNNEIQDNNNIINNNNNNNIEIDGINNNNNCCNNNDNQNENNNNDSCLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKKKMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMKMMMMMMMMKLMMMMMMMMMMMMMMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLKMMMLLMMMLKMKMMAKLKKKMKLALLLLLLLLLLMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLAKLMMMMMMGGGQNQQEQQINNQEENNQNQQNNNQDNNNNGQQDNQQNQQQGQNNQQNQLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLNLNLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQIDLLKKKLLLMLLLLLLLLLLALLLLLKLMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDILLLLLLLLLLLLLLLLLLLLKL","n":["Account","AddressMapping","Answer","BASE","BalanceOf","BalanceTooLow","BlockHashMapping","CallErrorAsFatal","CallInfo","CallTooDeep","CodeMetadata","Context","CreateCollision","CreateContractLimit","CreateEmpty","CreateInfo","DesignatedInvalid","EVMCurrencyAdapter","EnsureAccountId20","EnsureAddressNever","EnsureAddressOrigin","EnsureAddressRoot","EnsureAddressSame","EnsureAddressTruncated","Err","Error","Error","EvmConfig","ExecutionInfo","ExitError","ExitFatal","ExitReason","ExitRevert","ExitSucceed","Fatal","Fatal","FeeCalculator","FixedGasWeightMapping","GasLimitTooHigh","GasLimitTooLow","GasPriceTooLow","GasWeightMapping","HashedAddressMapping","IdentityAddressMapping","InvalidChainId","InvalidCode","InvalidFeeInput","InvalidJump","InvalidRange","InvalidSignature","IsPrecompileResult","LinearCostPrecompile","LiquidityInfo","Log","MaxNonce","NotSupported","Ok","OnChargeEVMTransaction","OnCreate","Other","Other","OutOfFund","OutOfGas","OutOfGas","OutOfOffset","PCUnderflow","Precompile","PrecompileFailure","PrecompileHandle","PrecompileOutput","PrecompileResult","PrecompileSet","PriorityFeeTooHigh","Returned","Revert","Revert","Reverted","Runner","RunnerError","StackOverflow","StackUnderflow","Stopped","SubstrateBlockHashMapping","Succeed","Success","Suicided","TransactionValidationError","TxNonceTooHigh","TxNonceTooLow","UnhandledInterrupt","UnknownError","Vicinity","WORD","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","address","address","apparent_value","balance","berlin","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_l64_after_gas","call_stack_limit","call_stipend","caller","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_address","context","correct_and_deposit_fee","correct_and_deposit_fee","create_contract_limit","create_increase_nonce","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decrease_clears_refund","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disallow_executable_format","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty_considered_exists","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_address_origin","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err_on_call_with_more_gas","estimate","execute","execute","execute","exit_reason","exit_reason","exit_reason","exit_status","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_primitive","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frontier","gas_access_list_address","gas_access_list_storage_key","gas_account_access_cold","gas_balance","gas_call","gas_expbyte","gas_ext_code","gas_ext_code_hash","gas_limit","gas_price","gas_sload","gas_sload_cold","gas_sstore_reset","gas_sstore_set","gas_storage_read_warm","gas_suicide","gas_suicide_new_account","gas_to_weight","gas_to_weight","gas_transaction_call","gas_transaction_create","gas_transaction_non_zero_data","gas_transaction_zero_data","has_base_fee","has_bitwise_shifting","has_chain_id","has_create2","has_delegate_call","has_ext_code_hash","has_push0","has_return_data","has_revert","has_self_balance","hash","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","increase_state_access_gas","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_account_id","into_account_id","into_account_id","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_error","is_fatal","is_precompile","is_revert","is_static","is_succeed","istanbul","log","logs","logs","logs","london","max_encoded_len","max_initcode_size","max_refund_quotient","memory_limit","merge","min_gas_price","nonce","on_create","origin","output","pallet","pay_priority_fee","pay_priority_fee","record_cost","record_external_cost","refund_external_cost","refund_sstore_clears","remaining_gas","rlp_append","runner","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shanghai","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sstore_gas_metering","sstore_revert_under_stipend","stack_limit","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics","try_address_origin","try_address_origin","try_address_origin","try_address_origin","try_address_origin","try_address_origin","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","used_gas","used_gas","used_gas","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warm_coinbase_address","weight_info","weight_info","weight_info","weight_to_gas","weight_to_gas","weights","withdraw_fee","withdraw_fee","extra_cost","is_precompile","exit_status","exit_status","exit_status","output","AccountCodes","AccountCodesMetadata","AccountStorages","AddressMapping","BalanceLow","BlockGasLimit","BlockHashMapping","Call","CallOrigin","ChainId","Config","Created","CreatedFailed","Currency","Error","Event","Executed","ExecutedFailed","FeeCalculator","FeeOverflow","FindAuthor","GasLimitPovSizeRatio","GasLimitTooHigh","GasLimitTooLow","GasPriceTooLow","GasWeightMapping","GenesisConfig","InvalidChainId","InvalidNonce","InvalidSignature","Log","Module","OnChargeTransaction","OnCreate","Pallet","PaymentOverflow","PrecompilesType","PrecompilesValue","Reentrancy","Runner","RuntimeEvent","SuicideQuickClearLimit","Suicided","Timestamp","TransactionMustComeFromEOA","Undefined","WeightInfo","WeightPerGas","WithdrawFailed","WithdrawOrigin","__clone_box","__clone_box","__clone_box","_marker","account_basic","account_code_metadata","accounts","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","call","call","clone","clone","clone","clone_into","clone_into","clone_into","config","count","crate_version","create","create","create2","create2","create_account","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_author","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_account_empty","is_feeless","module_name","name","name_hash","new_call_variant_call","new_call_variant_create","new_call_variant_create2","new_call_variant_withdraw","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","remove_account","remove_account_if_empty","serialize","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw","withdraw","access_list","access_list","access_list","address","gas_limit","gas_limit","gas_limit","init","init","input","max_fee_per_gas","max_fee_per_gas","max_fee_per_gas","max_priority_fee_per_gas","max_priority_fee_per_gas","max_priority_fee_per_gas","nonce","nonce","nonce","salt","source","source","source","target","value","value","value","value","address","address","address","address","log","call","create","create2","withdraw","AccountCodes","AccountCodesMetadata","AccountStorages","Suicided","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","Error","Runner","RunnerError","borrow","borrow_mut","call","create","create2","deref","deref_mut","drop","error","fmt","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","stack","try_from","try_into","type_id","unchecked_into","unique_saturated_into","validate","vzip","weight","Recorded","Runner","SubstrateStackState","__clone_box","basic","block_base_fee_per_gas","block_coinbase","block_difficulty","block_gas_limit","block_hash","block_number","block_randomness","block_timestamp","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","chain_id","clear","clone","clone_into","code","code_hash","code_size","create","create2","default","default","deleted","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enter","eq","equivalent","equivalent","equivalent","exists","exit_commit","exit_discard","exit_revert","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gas_price","inc_nonce","info_mut","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_clear","is_cold","is_empty","is_storage_cold","log","metadata","metadata_mut","new","origin","original_storage","record_external_cost","record_external_dynamic_opcode_cost","record_external_operation","recorded","refund_external_cost","reset_balance","reset_storage","set_code","set_deleted","set_storage","storage","to_owned","touch","transfer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate","vzip","vzip","vzip","weight_info","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","withdraw","withdraw"],"q":[[0,"pallet_evm"],[1045,"pallet_evm::IsPrecompileResult"],[1047,"pallet_evm::PrecompileFailure"],[1051,"pallet_evm::pallet"],[1334,"pallet_evm::pallet::Call"],[1362,"pallet_evm::pallet::Event"],[1367,"pallet_evm::pallet::dispatchables"],[1371,"pallet_evm::pallet::storage_types"],[1455,"pallet_evm::runner"],[1486,"pallet_evm::runner::stack"],[1610,"pallet_evm::weights"],[1634,"dyn_clone::sealed"],[1635,"alloc::vec"],[1636,"primitive_types"],[1637,"primitive_types"],[1638,"core::option"],[1639,"core::clone"],[1640,"primitive_types"],[1641,"core::result"],[1642,"parity_scale_codec::codec"],[1643,"parity_scale_codec::codec"],[1644,"rlp::error"],[1645,"serde::de"],[1646,"serde::de"],[1647,"parity_scale_codec::codec"],[1648,"core::cmp"],[1649,"core::fmt"],[1650,"core::fmt"],[1651,"core::convert"],[1652,"sp_core::crypto"],[1653,"rlp::stream"],[1654,"serde::ser"],[1655,"serde::ser"],[1656,"core::any"],[1657,"scale_info::ty"],[1658,"sp_storage"],[1659,"alloc::string"],[1660,"frame_system::pallet_prelude"],[1661,"frame_support::dispatch"],[1662,"frame_support::traits::metadata"],[1663,"frame_support::dispatch"],[1664,"sp_storage"],[1665,"frame_support::dispatch"],[1666,"fp_evm"],[1667,"evm::executor::stack::executor"],[1668,"evm_core::opcode"],[1669,"evm_gasometer"],[1670,"evm_gasometer"]],"d":["Basic account information.","Trait to be implemented for evm address mapping.","","","Type alias for currency balance.","The transaction balance is too low","A trait for getting a block hash by number.","The environment explicitly set call errors as fatal error.","","Call stack is too deep (runtime).","","Context of the runtime.","Create opcode encountered collision (runtime).","Create init code exceeds limit (runtime).","Attempt to create an empty account (runtime, unused).","","Encountered the designated invalid opcode.","Implements the transaction payment for a pallet …","Ensure that the address is AccountId20.","Ensure that the origin never happens.","","Ensure that the origin is root.","Ensure that the EVM address is the same as the Substrate …","Ensure that the address is truncated hash of the origin. …","Contains the error value","Machine returns a normal EVM error.","Reverts the state changes and consume all the gas.","Runtime configuration.","","Exit error reason.","Exit fatal reason.","Exit reason.","Exit revert reason.","Exit succeed reason.","Machine encountered an error that is not supposed to be …","Mark this failure as fatal, and all EVM execution stacks …","Trait that outputs the current transaction gas price.","","The transaction gas limit is too hign","The transaction gas limit is too low","The transaction gas price is too low","A mapping function that converts Ethereum gas to Substrate …","Hashed address mapping.","Identity address mapping.","The chain id is incorrect","Invalid opcode during execution or starting byte is 0xef. …","The transaction fee input is invalid","Jump destination is invalid.","An opcode accesses memory region, but the region is …","The transaction signature is invalid","","","","","Nonce reached maximum value of 2^64-1 …","The operation is not supported.","Contains the success value","Handle withdrawing, refunding and depositing of …","","Other normal errors.","Other fatal errors.","Not enough fund to start the execution (runtime).","","Execution runs out of gas (runtime).","An opcode accesses external information, but the request …","PC underflowed (unused).","One single precompile used by EVM engine.","Data returned by a precompile in case of failure.","Handle provided to a precompile to interact with the EVM.","Data returned by a precompile on success.","","A set of precompiles.","The transaction priority fee is too high","Machine encountered an explicit return.","Machine encountered an explicit revert.","Reverts the state changes. Returns the provided error …","Machine encountered an explicit revert.","","","Trying to push into a stack over stack limit.","Trying to pop from an empty stack.","Machine encountered an explicit stop.","Returns the Substrate block hash by number.","Machine has succeeded.","Success return type.","Machine encountered an explicit suicide.","Transaction validation errors","The transaction nonce is too high","The transaction nonce is too low","The trap (interrupt) is unhandled.","Unknown error","External input from the transaction.","","","","","","","","","","","","","","","","","Execution address.","","Apparent value of the EVM.","Account balance.","Berlin hard fork configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Perform subcall in provided context. Precompile specifies …","Take l64 for callcreate after gas.","Call limit.","Call stipend.","Caller of the EVM.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retreive the code address (what is the address of the …","Retreive the context in which the precompile is executed.","After the transaction was executed the actual fee can be …","","Create contract limit.","Whether create transactions and create opcode increases …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","EIP-3529","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","EIP-3541","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether empty account is considered exists.","","","","","","","","","","","Perform the origin check.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to throw out of gas error when …","Whether the gasometer is running in estimate mode.","Try to execute the precompile with given <code>handle</code> which …","","Tries to execute a precompile in the precompile set. If …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Frontier hard fork configuration.","Gas paid per address in transaction access list (see …","Gas paid per storage key in transaction access list (see …","Gas paid for accessing cold account.","Gas paid for BALANCE opcode.","Gas paid for CALL opcode.","Gas paid for EXP opcode for every byte.","Gas paid for extcode.","Gas paid for extcodehash.","Retreive the gas limit of this call.","Current transaction gas price.","Gas paid for SLOAD opcode.","Gas paid for cold SLOAD opcode.","Gas paid for sstore reset.","Gas paid for sstore set.","Gas paid for accessing ready storage.","Gas paid for SUICIDE opcode.","Gas paid for SUICIDE opcode when it hits a new account.","","","Gas paid for a message call transaction.","Gas paid for a contract creation transaction.","Gas paid for non-zero data in a transaction.","Gas paid for zero data in a transaction.","Has ext block fee. See EIP-3198","Has bitwise shifting.","Has chain ID.","Has create2.","Has delegate call.","Has ext code hash.","Has PUSH0 opcode. See EIP-3855","Has return data.","Has revert.","Has self balance.","","","","","","","","","","","","EIP-2929","","","","","","","","","","","","","","","","","","","","","","","","","","","Retreive the input data the precompile is called with.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the exit is error.","Whether the exit is fatal.","Check if the given address is a precompile. Should only be …","Whether the exit is revert.","Is the precompile call is done statically.","Whether the exit is succeeded.","Istanbul hard fork configuration.","Record a log.","","","","london hard fork configuration.","","EIP-3860, maximum size limit of init_code.","EIP-3529","Memory limit.","The Merge (Paris) hard fork configuration.","Return the minimal required gas price.","Account nonce.","","Origin of the transaction.","","The <code>pallet</code> module in each FRAME pallet hosts the most …","Introduced in EIP1559 to handle the priority tip.","","Record cost to the Runtime gasometer.","Record Substrate specific cost.","Refund Substrate specific cost.","Gas paid for sstore refund.","Retreive the remaining gas.","","","","","","","","","","","","Shanghai hard fork configuration.","","","","","","","","","","","","EIP-1283.","EIP-1706.","Stack limit.","","","","","","","","","","","","","","","","","","","","","","","","","","Try with originutogenerated weights for pallet_evm","Before the transaction is executed the payment of the …","","","","","","","","Storage type is <code>StorageMap</code> with key type <code>H160</code> and value …","Storage type is <code>StorageMap</code> with key type <code>H160</code> and value …","Storage type is <code>StorageDoubleMap</code> with key1 type H160, key2 …","Mapping from address to account id.","Not enough balance to perform action","The block gas limit. Can be a simple constant, or an …","Block number to block hash.","Contains a variant per dispatchable extrinsic that this …","Allow the origin to call on behalf of given address.","Chain ID of EVM.","Configuration trait of this pallet.","A contract has been created at given address.","A contract was attempted to be created, but the execution …","Currency type for withdraw and balance storage.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","A contract has been executed successfully with states …","A contract has been executed with errors. States are …","Calculator for current gas price.","Calculating total fee overflowed","Find author for the current block.","Gas limit Pov size ratio.","Gas limit is too high.","Gas limit is too low.","Gas price is too low.","Maps Ethereum gas to Substrate weight.","Can be used to configure the genesis state of this pallet.","The chain id is invalid.","Nonce is invalid","the signature is invalid.","Ethereum events from contracts.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","To handle fee deduction for EVM transactions. An example …","Called on create calls, used to record owner","The <code>Pallet</code> struct, the main type that implements traits …","Calculating total payment overflowed","Precompiles associated with this EVM engine.","","EVM reentrancy","EVM execution runner.","The overarching event type.","Define the quick clear limit of storage clearing when a …","Storage type is <code>StorageMap</code> with key type <code>H160</code> and value …","Get the timestamp for the current block.","EIP-3607,","Undefined error.","Weight information for extrinsics in this pallet.","Weight corresponding to a gas unit.","Withdraw fee failed","Allow the origin to withdraw on behalf of given address.","","","","","Get the account basic in EVM format.","Get the account metadata (hash and size) from storage if …","","","","","","","","","","","","","","","","","","","","","","","","Issue an EVM call operation. This is similar to a message …","See <code>Pallet::call</code>.","","","","","","","EVM config used in the module.","","","Issue an EVM create operation. This is similar to a …","See <code>Pallet::create</code>.","Issue an EVM create2 operation.","See <code>Pallet::create2</code>.","Create an account.","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","Get the author using the FindAuthor trait.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Check whether an account is empty.","","","","","Create a call with the variant <code>call</code>.","Create a call with the variant <code>create</code>.","Create a call with the variant <code>create2</code>.","Create a call with the variant <code>withdraw</code>.","","","","","","","","Remove an account.","Remove an account if its empty.","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Withdraw balance from EVM into currency/balances pallet.","See <code>Pallet::withdraw</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Issue an EVM call operation. This is similar to a message …","Issue an EVM create operation. This is similar to a …","Issue an EVM create2 operation.","Withdraw balance from EVM into currency/balances pallet.","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","EVM stack-based runner.","","","","","","","","","","","Substrate backend for EVM.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create a new backend with given vicinity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_evm using the Substrate node and …","Weight functions needed for pallet_evm.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,53,97,0,45,0,24,0,23,0,0,23,23,23,0,23,0,0,0,0,0,0,0,98,15,26,0,0,0,0,0,0,0,15,26,0,0,45,45,45,0,0,0,45,23,45,23,23,45,0,0,99,0,23,24,98,0,0,23,24,23,53,23,23,23,0,0,0,0,0,0,45,19,15,26,22,0,0,23,23,19,0,15,100,19,0,45,45,24,45,0,97,0,16,14,3,17,15,19,20,21,22,23,24,25,26,27,14,20,14,21,3,16,17,15,19,20,21,22,23,24,27,16,17,15,19,20,21,22,23,24,27,16,17,15,19,20,21,22,23,24,27,101,102,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,44,3,3,3,14,16,21,16,14,3,17,15,19,20,21,22,23,24,25,26,27,16,14,3,17,15,19,20,21,22,23,24,25,26,27,44,44,99,111,3,3,20,16,17,15,19,20,20,21,22,23,24,27,16,17,15,19,20,21,22,23,24,27,16,17,15,19,20,21,22,23,24,27,16,17,15,19,20,21,22,23,24,27,3,16,21,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,16,17,15,19,20,21,22,23,24,3,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,3,16,17,15,19,20,21,22,23,24,27,100,16,17,15,19,20,21,22,23,24,25,26,27,16,16,16,17,17,17,15,15,15,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,3,3,112,97,113,82,84,17,25,45,16,14,3,17,15,19,20,21,22,23,24,25,26,27,45,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,15,15,15,15,19,20,21,22,23,24,25,26,26,27,45,45,16,16,14,14,103,103,104,104,105,105,106,106,107,107,108,108,109,109,102,102,110,110,3,3,111,111,53,53,17,17,15,15,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,45,45,45,16,16,14,14,103,103,104,104,105,105,106,106,107,107,108,108,109,109,102,102,110,110,3,3,111,111,53,53,17,17,15,15,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,3,3,3,3,3,3,3,3,3,44,16,3,3,3,3,3,3,3,114,110,3,3,3,3,3,3,3,3,3,3,3,3,3,3,27,16,17,15,19,20,21,22,23,24,27,3,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,44,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,115,108,109,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,16,21,15,15,113,15,44,15,3,44,82,84,17,3,27,3,3,3,3,116,21,117,16,25,0,99,111,44,44,44,3,44,20,0,16,17,15,19,20,21,22,23,24,3,27,16,17,15,19,20,21,22,23,24,27,3,3,3,16,17,15,19,20,21,22,23,24,27,16,14,3,17,15,19,20,21,22,23,24,25,26,27,20,100,103,104,105,106,107,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,16,17,15,19,20,21,22,23,24,27,16,17,15,19,20,21,22,23,24,27,16,17,15,19,20,21,22,23,24,27,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,17,15,19,20,21,22,23,24,27,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,82,84,17,82,84,17,45,16,14,103,104,105,106,107,108,109,102,110,3,111,53,17,15,19,20,21,22,23,24,25,26,27,3,82,84,17,114,110,0,99,111,118,118,119,120,121,120,0,0,0,61,60,61,61,0,61,61,0,68,68,61,0,0,68,68,61,60,61,61,60,60,60,61,0,60,60,60,68,0,61,61,0,60,61,61,60,61,61,61,0,61,60,60,61,61,60,61,67,68,69,62,67,67,62,62,67,68,60,69,68,60,69,68,60,69,67,68,60,62,69,67,68,60,62,69,62,67,69,67,68,69,67,68,69,61,67,67,67,69,67,69,67,67,68,60,69,68,60,69,68,60,69,68,60,69,62,67,68,60,62,69,67,68,60,62,69,62,69,0,67,68,60,62,69,68,60,69,67,68,69,67,67,67,68,68,68,69,69,69,67,67,68,60,69,67,68,60,60,62,69,67,67,68,68,60,60,62,62,69,69,67,67,68,68,60,60,62,62,69,69,69,69,69,69,69,68,60,69,67,67,67,68,60,62,69,67,67,68,60,62,69,67,68,60,62,69,67,68,60,62,69,67,69,67,67,67,69,69,69,69,67,67,67,67,67,67,67,67,67,62,68,60,69,67,0,68,60,69,67,68,69,67,68,60,62,69,67,68,60,62,69,0,0,0,68,60,69,68,60,69,68,60,69,67,68,60,62,69,68,60,69,67,68,60,62,69,67,68,60,62,69,67,68,60,62,69,67,60,67,69,122,123,124,125,122,123,124,123,124,122,122,123,124,122,123,124,122,123,124,124,122,123,124,122,125,122,123,124,126,127,128,129,130,0,0,0,0,0,0,0,0,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,131,132,132,133,133,134,134,131,131,132,132,133,133,134,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,135,0,0,83,83,135,135,135,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,135,83,83,0,0,0,88,87,87,87,87,87,87,87,87,87,87,89,88,87,89,88,89,87,88,88,88,87,87,87,89,89,89,88,87,87,89,88,87,89,88,87,89,88,87,88,88,88,88,87,87,87,87,87,89,88,87,87,89,89,88,88,87,87,89,89,88,88,87,87,87,87,89,88,87,89,88,87,89,88,87,89,88,88,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,87,87,87,89,88,87,89,88,87,89,88,87,89,88,87,89,88,89,87,89,88,87,0,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,137,136],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,[[],3],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[7,8],[7,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,9,[11,[10]],[6,[4]],[11,[12]],13,14],[[2,[15,[6,[4]]]]],[]],0,0,0,0,[[],-1,[]],[[],-1,[]],[16,16],[14,14],[3,3],[[[17,[-1]]],[[17,[-1]]],18],[15,15],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,9,[]],[-1,14,[]],[[9,28,28]],[[9,28,28]],0,0,0,[-1,[[30,[16,29]]],31],[-1,[[30,[[17,[-2]],29]]],31,32],[-1,[[30,[15,29]]],31],[-1,[[30,[19,29]]],31],[-1,[[30,[20,29]]],31],[33,[[30,[20,34]]]],[-1,[[30,[21,29]]],31],[-1,[[30,[22,29]]],31],[-1,[[30,[23,29]]],31],[-1,[[30,[24,29]]],31],[-1,[[30,[27,29]]],31],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],0,[[],16],[[],21],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[-1,[[30,[16]]],37],[-1,[[30,[[17,[-2]]]]],37,38],[-1,[[30,[15]]],37],[-1,[[30,[19]]],37],[-1,[[30,[20]]],37],[-1,[[30,[21]]],37],[-1,[[30,[22]]],37],[-1,[[30,[23]]],37],[-1,[[30,[24]]],37],0,[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],[36,2],0,[[16,-1],2,[39,40]],[[[17,[-1]],-2],2,41,[39,40]],[[15,-1],2,[39,40]],[[19,-1],2,[39,40]],[[20,-1],2,[39,40]],[[21,-1],2,[39,40]],[[22,-1],2,[39,40]],[[23,-1],2,[39,40]],[[24,-1],2,[39,40]],[[27,-1],2,[39,40]],[[9,-1],[[30,[42]]],[]],[[16,16],13],[[[17,[-1]],[17,[-1]]],13,43],[[15,15],13],[[19,19],13],[[20,20],13],[[21,21],13],[[22,22],13],[[23,23],13],[[24,24],13],[[25,25],13],[[26,26],13],[[27,27],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,0,[-1,[[30,[25,26]]],44],[[[35,[4]],12],[[30,[[2,[19,[6,[4]]]],26]]]],[[-1,-2],[[11,[[30,[25,26]]]]],[],44],0,0,0,0,[[45,46],[[30,[2,47]]]],[[16,46],[[30,[2,47]]]],[[14,46],[[30,[2,47]]]],[[3,46],[[30,[2,47]]]],[[[17,[-1]],46],[[30,[2,47]]],48],[[15,46],[[30,[2,47]]]],[[19,46],[[30,[2,47]]]],[[20,46],[[30,[2,47]]]],[[21,46],[[30,[2,47]]]],[[22,46],[[30,[2,47]]]],[[23,46],[[30,[2,47]]]],[[24,46],[[30,[2,47]]]],[[25,46],[[30,[2,47]]]],[[26,46],[[30,[2,47]]]],[[27,46],49],[-1,-1,[]],[4,45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,15],[-1,-1,[]],[19,15],[24,15],[22,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,26],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],45],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],3],0,0,0,0,0,0,0,0,[-1,[[11,[12]]],[]],0,0,0,0,0,0,0,0,[[12,13],50],[[12,13],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],0,[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[-1,[[35,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,-1,[]],[9,-1,[[51,[9]]]],[9,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[15,13],[15,13],[[-1,9,12],53,[]],[15,13],[-1,13,[]],[15,13],[[],3],[[-1,9,[6,[8]],[6,[4]]],[[30,[2,23]]],[]],0,0,0,[[],3],[[],36],0,0,0,[[],3],[[],[[2,[28,50]]]],0,[[9,9],2],0,0,0,[[],2],[[],2],[[-1,12],[[30,[2,23]]],[]],[[-1,[11,[12]],[11,[12]],[11,[12]]],[[30,[2,23]]],[]],[[-1,[11,[12]],[11,[12]]],2,[]],0,[-1,12,[]],[[20,54],2],0,[[16,-1],30,55],[[[17,[-1]],-2],30,56,55],[[15,-1],30,55],[[19,-1],30,55],[[20,-1],30,55],[[21,-1],30,55],[[22,-1],30,55],[[23,-1],30,55],[[24,-1],30,55],[[],3],0,[16,36],[[[17,[-1]]],36,41],[15,36],[19,36],[20,36],[21,36],[22,36],[23,36],[24,36],[27,36],0,0,0,[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[9,-1],[[30,[-1]]],[]],[[9,-1],[[30,[9,-1]]],[]],[[9,-2],[[30,[2,-2]]],[],[]],[[9,-1],[[30,[-2,-1]]],[],[]],[[9,-1],[[30,[52,-1]]],[]],[[9,-1],[[30,[57,-1]]],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[50,12],[50,12],0,[[9,28],[[30,[[60,[-1]]]]],[]],[[9,28],[[30,[[60,[-1]]]]],61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[9,[[2,[21,50]]]],[9,27],0,[[[62,[-1]],63],[[30,[2,64]]],61],[[],50],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[62,[-1]]],2,61],[[[65,[-1]],9,9,[6,[4]],28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],66,61],0,[[[67,[-1]]],[[67,[-1]]],[]],[[[68,[-1]]],[[68,[-1]]],61],[[[69,[-1]]],[[69,[-1]]],61],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],3],[[],36],[[],70],[[[65,[-1]],9,[6,[4]],28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],66,61],0,[[[65,[-1]],9,[6,[4]],8,28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],66,61],0,[[9,[6,[4]]],2],[[]],[-1,[[30,[[68,[-2]],29]]],31,61],[-1,[[30,[[60,[-2]],29]]],31,[]],[-1,[[30,[[69,[-2]],29]]],31,61],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,[35,[4]]],[[30,[-1,29]]],[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[7,-1],[[30,[-2,29]]],31,[]],[[],[[62,[-1]]],[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[-1,[[30,[[62,[-2]]]]],37,[]],[[[69,[-1]]],66,61],0,[36,2],[36,2],[36,2],[36,2],[36,2],[[[68,[-1]],-2],2,61,[39,40]],[[[60,[-1]],-2],2,[],[39,40]],[[[69,[-1]],-2],2,61,[39,40]],[[[67,[-1]],[67,[-1]]],13,[]],[[[68,[-1]],[68,[-1]]],13,61],[[[69,[-1]],[69,[-1]]],13,61],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],9],[[[67,[-1]],46],49,[]],[[[68,[-1]],46],49,61],[[[60,[-1]],46],49,61],[[[69,[-1]],46],49,61],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,[[60,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[69,[-1]]],4,61],[[],[[35,[4]]]],[[[69,[-1]]],71,61],[[],[[35,[71]]]],[[[69,[-1]]],72,61],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[[],36],[[],[[6,[73]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,13],[[[69,[-1]]],13,61],[[],71],[[],71],[[],[[5,[4]]]],[[9,9,[6,[4]],28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],[[69,[-1]]],61],[[9,[6,[4]],28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],[[69,[-1]]],61],[[9,[6,[4]],8,28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],[[69,[-1]]],61],[[9,[74,[-1]]],[[69,[-1]]],61],[[[75,[-1]]],2,61],[[],76],[[[75,[-1]]],2,61],[[],2],[[[75,[-1]],50],50,61],[[[75,[-1]]],50,61],[[],50],[9,2],[9,2],[[[62,[-1]],-2],30,[],55],[[[68,[-1]]],36,61],[[[60,[-1]]],36,[]],[[[69,[-1]]],36,61],[[],[[6,[77]]]],0,[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[[-1,[35,[4]]],[[6,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],0,0,0,[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[5,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,[[6,[4]]],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[],59],[[],59],[[],59],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[6,[78]]]],[[-1,50],[[80,[79]]],[]],[[[65,[-1]],9,[74,[-1]]],81,61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9,[6,[4]],28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],2],[[9,[6,[4]],28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],2],[[9,[6,[4]],8,28,12,28,[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]]],2],[[9,[74,[-1]]],2,61],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,2],[36,2],[36,2],[36,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],36],[[],36],[[],36],[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[9,9,[6,[4]],28,12,[11,[28]],[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]],13,13,[11,[50]],[11,[12]],3],[[30,[82,83]]]],[[9,[6,[4]],28,12,[11,[28]],[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]],13,13,[11,[50]],[11,[12]],3],[[30,[84,83]]]],[[9,[6,[4]],8,28,12,[11,[28]],[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]],13,13,[11,[50]],[11,[12]],3],[[30,[84,83]]]],[36,-1,[]],[36,-1,[]],[36,2],0,[[[83,[-1]],46],49,[48,[86,[85]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,[11,[9]],[6,[4]],28,12,[11,[28]],[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]],13,[11,[50]],[11,[12]],3],[[30,[2,83]]]],[-1,-2,[],[]],0,0,0,0,[[-1,1],2,[]],[[[87,[-1]],9],21,61],[[[87,[-1]]],28,61],[[[87,[-1]]],9,61],[[[87,[-1]]],28,61],[[[87,[-1]]],28,61],[[[87,[-1]],28],8,61],[[[87,[-1]]],28,61],[[[87,[-1]]],[[11,[8]]],61],[[[87,[-1]]],28,61],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,9,[6,[4]],28,12,[11,[28]],[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]],13,13,[11,[50]],[11,[12]],3],[[30,[82,83]]]],[[[87,[-1]]],28,61],[[],-1,[]],[88,88],[[-1,-2],2,[],[]],[[[87,[-1]],9],[[6,[4]]],61],[[[87,[-1]],9],8,61],[[[87,[-1]],9],28,61],[[9,[6,[4]],28,12,[11,[28]],[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]],13,13,[11,[50]],[11,[12]],3],[[30,[84,83]]]],[[9,[6,[4]],8,28,12,[11,[28]],[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]],13,13,[11,[50]],[11,[12]],3],[[30,[84,83]]]],[[],[[89,[-1]]],[90,61]],[[],88],[[[87,[-1]],9],13,61],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,-1,[]],[36,2],[36,2],[36,2],[[[87,[-1]],12,13],2,61],[[88,88],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[87,[-1]],9],13,61],[[[87,[-1]]],[[30,[2,23]]],61],[[[87,[-1]]],[[30,[2,23]]],61],[[[87,[-1]]],[[30,[2,23]]],61],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[[87,[-1]]],28,61],[[[87,[-1]],9],[[30,[2,23]]],61],[[[87,[-1]]],[[2,[[11,[91]],88]]],61],[[],36],[[],36],[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[[[87,[-1]],9],13,61],[[[87,[-1]],9],13,61],[[[87,[-1]],9,8],13,61],[[[87,[-1]],9,[6,[8]],[6,[4]]],2,61],[[[87,[-1]]],92,61],[[[87,[-1]]],92,61],[[16,92,[11,[91]]],[[87,[-1]]],61],[[[87,[-1]]],9,61],[[[87,[-1]],9,8],[[11,[8]]],61],[[[87,[-1]],[11,[12]],[11,[12]],[11,[12]]],[[30,[2,23]]],61],[[[87,[-1]],93,94,95],[[30,[2,23]]],61],[[[87,[-1]],96],[[30,[2,23]]],61],[[[87,[-1]]],88,61],[[[87,[-1]],[11,[12]],[11,[12]]],2,61],[[[87,[-1]],9],2,61],[[[87,[-1]],9],2,61],[[[87,[-1]],9,[6,[4]]],2,61],[[[87,[-1]],9],2,61],[[[87,[-1]],9,8,8],2,61],[[[87,[-1]],9,8],8,61],[-1,-2,[],[]],[[[87,[-1]],9],2,61],[[[87,[-1]],10],[[30,[2,23]]],61],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,[11,[9]],[6,[4]],28,12,[11,[28]],[11,[28]],[11,[28]],[6,[[2,[9,[6,[8]]]]]],13,[11,[50]],[11,[12]],3],[[30,[2,83]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[87,[-1]]],[[11,[91]]],61],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[36,-1,[]],[36,-1,[]],[36,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],50],[[],50]],"c":[1082],"p":[[3,"Private",1634],[15,"tuple"],[3,"EvmConfig",0],[15,"u8"],[15,"array"],[3,"Vec",1635],[15,"u32"],[3,"H256",1636],[3,"H160",1636],[3,"Transfer",1637],[4,"Option",1638],[15,"u64"],[15,"bool"],[3,"Context",0],[4,"ExitReason",0],[3,"Vicinity",0],[3,"ExecutionInfo",0],[8,"Clone",1639],[4,"ExitSucceed",0],[3,"Log",0],[3,"Account",0],[4,"ExitRevert",0],[4,"ExitError",0],[4,"ExitFatal",0],[3,"PrecompileOutput",0],[4,"PrecompileFailure",0],[3,"CodeMetadata",0],[3,"U256",1636],[3,"Error",1640],[4,"Result",1641],[8,"Input",1642],[8,"Decode",1642],[3,"Rlp",1643],[4,"DecoderError",1644],[15,"slice"],[15,"usize"],[8,"Deserializer",1645],[8,"Deserialize",1645],[8,"Output",1642],[8,"Sized",1646],[8,"Encode",1642],[3,"BadOrigin",1647],[8,"PartialEq",1648],[8,"PrecompileHandle",0],[4,"TransactionValidationError",0],[3,"Formatter",1649],[3,"Error",1649],[8,"Debug",1649],[6,"Result",1649],[3,"Weight",1650],[8,"From",1651],[3,"AccountId32",1652],[4,"IsPrecompileResult",0],[3,"RlpStream",1653],[8,"Serializer",1654],[8,"Serialize",1654],[3,"AccountId20",1655],[3,"TypeId",1656],[3,"Type",1657],[4,"Error",1051],[8,"Config",1051],[3,"GenesisConfig",1051],[3,"Storage",1658],[3,"String",1659],[6,"OriginFor",1660],[6,"DispatchResultWithPostInfo",1661],[3,"Pallet",1051],[4,"Event",1051],[4,"Call",1051],[3,"CrateVersion",1662],[15,"str"],[3,"DispatchInfo",1661],[3,"PalletInfoData",1662],[6,"BalanceOf",0],[6,"BlockNumberFor",1660],[3,"StorageVersion",1662],[3,"StorageInfo",1663],[3,"TrackedStorageKey",1658],[3,"PostDispatchInfo",1661],[3,"DispatchErrorWithPostInfo",1664],[6,"DispatchResult",1661],[6,"CallInfo",0],[3,"RunnerError",1455],[6,"CreateInfo",0],[4,"DispatchError",1664],[8,"Into",1651],[3,"SubstrateStackState",1486],[3,"Recorded",1486],[3,"Runner",1486],[8,"Default",1665],[3,"WeightInfo",1666],[3,"StackSubstateMetadata",1667],[3,"Opcode",1668],[4,"GasCost",1669],[4,"StorageTarget",1669],[4,"ExternalOperation",1670],[8,"LinearCostPrecompile",0],[6,"PrecompileResult",0],[8,"OnChargeEVMTransaction",0],[8,"EnsureAddressOrigin",0],[8,"BlockHashMapping",0],[3,"SubstrateBlockHashMapping",0],[3,"EnsureAddressSame",0],[3,"EnsureAddressRoot",0],[3,"EnsureAddressNever",0],[3,"EnsureAddressTruncated",0],[3,"EnsureAccountId20",0],[3,"IdentityAddressMapping",0],[3,"HashedAddressMapping",0],[3,"FixedGasWeightMapping",0],[3,"EVMCurrencyAdapter",0],[8,"Precompile",0],[8,"PrecompileSet",0],[8,"GasWeightMapping",0],[8,"AddressMapping",0],[8,"FeeCalculator",0],[8,"OnCreate",0],[13,"Answer",1045],[13,"Error",1047],[13,"Revert",1047],[13,"Fatal",1047],[13,"call",1334],[13,"create",1334],[13,"create2",1334],[13,"withdraw",1334],[13,"Created",1362],[13,"CreatedFailed",1362],[13,"Executed",1362],[13,"ExecutedFailed",1362],[13,"Log",1362],[3,"AccountCodes",1371],[3,"AccountCodesMetadata",1371],[3,"AccountStorages",1371],[3,"Suicided",1371],[8,"Runner",1455],[3,"SubstrateWeight",1610],[8,"WeightInfo",1610]],"b":[[243,"impl-Decode-for-Log"],[244,"impl-Decodable-for-Log"],[472,"impl-From%3CExitError%3E-for-ExitReason"],[474,"impl-From%3CExitSucceed%3E-for-ExitReason"],[475,"impl-From%3CExitFatal%3E-for-ExitReason"],[476,"impl-From%3CExitRevert%3E-for-ExitReason"]]},\
"pallet_evm_chain_id":{"doc":"EVM chain ID pallet","t":"AEGIDGDLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLCCCLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLL","n":["pallet","Call","ChainId","Config","GenesisConfig","Module","Pallet","__clone_box","__clone_box","_marker","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","chain_id","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","serialize","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","ChainId","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_evm_chain_id"],[1,"pallet_evm_chain_id::pallet"],[137,"pallet_evm_chain_id::pallet::storage_types"],[158,"dyn_clone::sealed"],[159,"sp_storage"],[160,"alloc::string"],[161,"core::result"],[162,"sp_weights::weight_v2"],[163,"alloc::vec"],[164,"frame_support::traits::metadata"],[165,"parity_scale_codec::error"],[166,"parity_scale_codec::codec"],[167,"serde::de"],[168,"frame_support::dispatch"],[169,"core::fmt"],[170,"core::fmt"],[171,"frame_support::traits::metadata"],[172,"frame_support::traits::storage"],[173,"core::any"],[174,"scale_info::ty"],[175,"sp_storage"]],"d":["The <code>pallet</code> module in each FRAME pallet hosts the most …","Contains a variant per dispatchable extrinsic that this …","The EVM chain ID.","Configuration trait of this pallet.","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The EVM chain ID.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,12,13,3,3,12,13,13,13,12,3,13,12,3,13,3,3,12,13,12,13,12,12,12,13,13,13,13,3,12,3,13,12,3,13,3,13,0,12,3,13,12,13,12,12,12,13,13,13,12,13,12,3,13,12,12,3,3,13,13,12,12,3,3,13,13,12,13,13,13,13,13,13,12,12,12,3,13,12,12,3,13,12,3,13,12,3,13,13,12,12,12,12,12,12,12,12,12,12,3,12,0,13,12,13,12,3,13,12,3,13,0,0,0,13,13,13,12,3,13,13,12,3,13,12,3,13,12,3,13,12,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36],"f":[0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[[[3,[-1]],4],[[6,[2,5]]],7],[[],8],[-1,[[10,[9]]],[]],[-1,[[11,[9]]],[]],[-1,[[10,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],2,7],0,[[[12,[-1]]],[[12,[-1]]],[]],[[[13,[-1]]],[[13,[-1]]],7],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],14],[[],15],[[]],[-1,[[6,[[13,[-2]],16]]],17,7],[[[18,[9]]],[[6,[-1,16]]],[]],[[19,[18,[9]]],[[6,[-1,16]]],[]],[[19,-1],[[6,[-2,16]]],17,[]],[[],[[3,[-1]]],[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[-1,[[6,[[3,[-2]]]]],20,[]],[[[13,[-1]]],21,7],0,[14,2],[14,2],[14,2],[[[12,[-1]],[12,[-1]]],22,[]],[[[13,[-1]],[13,[-1]]],22,7],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[[12,[-1]],23],24,[]],[[[13,[-1]],23],24,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],25],[[[13,[-1]]],9,7],[[],[[18,[9]]]],[[[13,[-1]]],26,7],[[],[[18,[26]]]],[[[13,[-1]]],27,7],[-1,[[11,[9]]],[]],[[],14],[[],[[11,[28]]]],[[],14],[[],14],[[],14],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1]]],22,7],[[],26],[[],26],[[],[[10,[9]]]],[[[29,[-1]]],2,7],[[],30],[[[29,[-1]]],2,7],[[],2],[[[29,[-1]],8],8,7],[[[29,[-1]]],8,7],[[],8],[[[3,[-1]],-2],6,[],31],[[],[[11,[32]]]],0,[[-1,[18,[9]]],[[11,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],0,0,0,[-1,[[10,[9]]],[]],[-1,[[10,[9]]],[]],[-1,[[11,[9]]],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[],34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[11,[35]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[14,-1,[]],[14,-1,[]],[14,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[5],"p":[[3,"Private",158],[15,"tuple"],[3,"GenesisConfig",1],[3,"Storage",159],[3,"String",160],[4,"Result",161],[8,"Config",1],[3,"Weight",162],[15,"u8"],[15,"array"],[3,"Vec",163],[3,"Pallet",1],[4,"Call",1],[15,"usize"],[3,"CrateVersion",164],[3,"Error",165],[8,"Input",166],[15,"slice"],[15,"u32"],[8,"Deserializer",167],[6,"DispatchResultWithPostInfo",168],[15,"bool"],[3,"Formatter",169],[6,"Result",169],[15,"u64"],[15,"str"],[3,"DispatchInfo",168],[3,"PalletInfoData",164],[6,"BlockNumberFor",170],[3,"StorageVersion",164],[8,"Serializer",171],[3,"StorageInfo",172],[3,"TypeId",173],[3,"Type",174],[3,"TrackedStorageKey",159],[3,"ChainId",137]],"b":[]},\
"pallet_evm_precompile_blake2":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLL","n":["Blake2F","borrow","borrow_mut","deref","deref_mut","drop","execute","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_evm_precompile_blake2"],[22,"fp_evm::precompile"],[23,"evm::executor::stack::precompile"],[24,"core::result"],[25,"core::any"]],"d":["","","","","","","Format of <code>input</code>: [4 bytes for rounds][64 bytes for h][128 …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,3,4],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[6,"PrecompileResult",22],[8,"PrecompileHandle",23],[4,"Result",24],[3,"TypeId",25],[3,"Blake2F",0]],"b":[]},\
"pallet_evm_precompile_bls12377":{"doc":"","t":"DDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Bls12377G1Add","Bls12377G1Mul","Bls12377G1MultiExp","Bls12377G2Add","Bls12377G2Mul","Bls12377G2MultiExp","Bls12377MapG1","Bls12377MapG2","Bls12377Pairing","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_evm_precompile_bls12377"],[198,"fp_evm::precompile"],[199,"evm::executor::stack::precompile"],[200,"core::result"],[201,"core::any"]],"d":["Bls12377G1Add implements EIP-2539 G1Add precompile.","Bls12377G1Mul implements EIP-2539 G1Mul precompile.","Bls12377G1MultiExp implements EIP-2539 G1MultiExp …","Bls12377G2Add implements EIP-2539 G2Add precompile.","Bls12377G2Mul implements EIP-2539 G2Mul precompile.","","Bls12377MapG1 implements EIP-2539 MapG1 precompile.","Bls12377MapG2 implements EIP-2539 MapG2 precompile.","Bls12377Pairing implements EIP-2539 Pairing precompile.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implements EIP-2539 G1Add precompile.","Implements EIP-2539 G1Mul precompile.","Implements EIP-2539 G1MultiExp precompile. G1 …","Implements EIP-2539 G2Add precompile.","Implements EIP-2539 G2MUL precompile logic.","Implements EIP-2539 G2MultiExp precompile logic","Implements EIP-2539 Pairing precompile logic.","Implements EIP-2539 Map_To_G1 precompile.","Implements EIP-2539 Map_FP2_TO_G2 precompile logic.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[6,"PrecompileResult",198],[8,"PrecompileHandle",199],[4,"Result",200],[3,"TypeId",201],[3,"Bls12377G1Add",0],[3,"Bls12377G1Mul",0],[3,"Bls12377G1MultiExp",0],[3,"Bls12377G2Add",0],[3,"Bls12377G2Mul",0],[3,"Bls12377G2MultiExp",0],[3,"Bls12377Pairing",0],[3,"Bls12377MapG1",0],[3,"Bls12377MapG2",0]],"b":[]},\
"pallet_evm_precompile_bls12381":{"doc":"","t":"DDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Bls12381G1Add","Bls12381G1Mul","Bls12381G1MultiExp","Bls12381G2Add","Bls12381G2Mul","Bls12381G2MultiExp","Bls12381MapG1","Bls12381MapG2","Bls12381Pairing","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_evm_precompile_bls12381"],[198,"fp_evm::precompile"],[199,"evm::executor::stack::precompile"],[200,"core::result"],[201,"core::any"]],"d":["Bls12381 implements EIP-2537 G1Add precompile.","Bls12381G1Mul implements EIP-2537 G1Mul precompile.","Bls12381G1MultiExp implements EIP-2537 G1MultiExp …","Bls12381G2Add implements EIP-2537 G2Add precompile.","Bls12381G2Mul implements EIP-2537 G2Mul precompile.","","Bls12381MapG1 implements EIP-2537 MapG1 precompile.","Bls12381MapG2 implements EIP-2537 MapG2 precompile.","Bls12381Pairing implements EIP-2537 Pairing precompile.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implements EIP-2537 G1Add precompile.","Implements EIP-2537 G1Mul precompile.","Implements EIP-2537 G1MultiExp precompile. G1 …","Implements EIP-2537 G2Add precompile.","Implements EIP-2537 G2MUL precompile logic.","Implements EIP-2537 G2MultiExp precompile logic","Implements EIP-2537 Pairing precompile logic.","Implements EIP-2537 Map_To_G1 precompile.","Implements EIP-2537 Map_FP2_TO_G2 precompile logic.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15,7,8,9,10,11,12,13,14,15],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[6,"PrecompileResult",198],[8,"PrecompileHandle",199],[4,"Result",200],[3,"TypeId",201],[3,"Bls12381G1Add",0],[3,"Bls12381G1Mul",0],[3,"Bls12381G1MultiExp",0],[3,"Bls12381G2Add",0],[3,"Bls12381G2Mul",0],[3,"Bls12381G2MultiExp",0],[3,"Bls12381Pairing",0],[3,"Bls12381MapG1",0],[3,"Bls12381MapG2",0]],"b":[]},\
"pallet_evm_precompile_bn128":{"doc":"","t":"DDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Bn128Add","Bn128Mul","Bn128Pairing","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","execute","execute","execute","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"pallet_evm_precompile_bn128"],[66,"fp_evm::precompile"],[67,"evm::executor::stack::precompile"],[68,"core::result"],[69,"core::any"]],"d":["The Bn128Add builtin","The Bn128Mul builtin","The Bn128Pairing builtin","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,7,8,8,9,9,7,7,8,8,9,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[-1,3,4],[-1,3,4],[-1,3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[6,"PrecompileResult",66],[8,"PrecompileHandle",67],[4,"Result",68],[3,"TypeId",69],[3,"Bn128Add",0],[3,"Bn128Mul",0],[3,"Bn128Pairing",0]],"b":[]},\
"pallet_evm_precompile_bw6761":{"doc":"","t":"DDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Bw6761G1Add","Bw6761G1Mul","Bw6761G1MultiExp","Bw6761G2Add","Bw6761G2Mul","Bw6761G2MultiExp","Bw6761Pairing","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_evm_precompile_bw6761"],[154,"fp_evm::precompile"],[155,"evm::executor::stack::precompile"],[156,"core::result"],[157,"core::any"]],"d":["Bw6761G1Add implements EIP-3026 G1Add precompile.","Bw6761G1Mul implements EIP-3026 G1Mul precompile.","Bw6761G1MultiExp implements EIP-3026 G1MultiExp precompile.","Bw6761G2Add implements EIP-3026 G2Add precompile.","Bw6761G2Mul implements EIP-3026 G2Mul precompile.","","Bw6761Pairing implements EIP-3026 Pairing precompile.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implements EIP-3026 G1Add precompile.","Implements EIP-3026 G1Mul precompile.","Implements EIP-3026 G1MultiExp precompile. G1 …","Implements EIP-3026 G2Add precompile.","Implements EIP-3026 G2MUL precompile logic.","Implements EIP-3026 G2MultiExp precompile logic","Implements EIP-3026 Pairing precompile logic.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,7,8,8,9,9,10,10,11,11,12,12,13,13,7,7,8,8,9,9,10,10,11,11,12,12,13,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13,7,8,9,10,11,12,13],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[6,"PrecompileResult",154],[8,"PrecompileHandle",155],[4,"Result",156],[3,"TypeId",157],[3,"Bw6761G1Add",0],[3,"Bw6761G1Mul",0],[3,"Bw6761G1MultiExp",0],[3,"Bw6761G2Add",0],[3,"Bw6761G2Mul",0],[3,"Bw6761G2MultiExp",0],[3,"Bw6761Pairing",0]],"b":[]},\
"pallet_evm_precompile_curve25519":{"doc":"","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Curve25519Add","Curve25519ScalarMul","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","execute","execute","execute","execute","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"pallet_evm_precompile_curve25519"],[46,"evm_core::error"],[47,"alloc::vec"],[48,"evm::executor::stack::precompile"],[49,"core::result"],[50,"evm::executor::stack::precompile"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,13,14,13,14,13,14,13,14,13,14,13,13,14,14,13,14,13,13,14,14,13,13,14,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,[[9,[10,8]]],11],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,[[9,[10,8]]],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[15,"u8"],[15,"slice"],[15,"u64"],[4,"ExitSucceed",46],[3,"Vec",47],[4,"PrecompileFailure",48],[4,"Result",49],[3,"PrecompileOutput",48],[8,"PrecompileHandle",48],[3,"TypeId",50],[3,"Curve25519Add",0],[3,"Curve25519ScalarMul",0]],"b":[]},\
"pallet_evm_precompile_dispatch":{"doc":"","t":"DILLLLLLLLLLLLLLLLLLLLKL","n":["Dispatch","DispatchValidateT","borrow","borrow_mut","deref","deref_mut","drop","execute","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","validate_before_dispatch","vzip"],"q":[[0,"pallet_evm_precompile_dispatch"],[24,"fp_evm::precompile"],[25,"evm::executor::stack::precompile"],[26,"core::result"],[27,"core::any"],[28,"evm::executor::stack::precompile"]],"d":["","Dispatch validation trait.","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,9],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,3,4],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[8,[7]]],[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[6,"PrecompileResult",24],[8,"PrecompileHandle",25],[4,"Result",26],[3,"TypeId",27],[4,"PrecompileFailure",25],[4,"Option",28],[3,"Dispatch",0],[8,"DispatchValidateT",0]],"b":[]},\
"pallet_evm_precompile_ed25519":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLL","n":["Ed25519Verify","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_evm_precompile_ed25519"],[23,"evm_core::error"],[24,"alloc::vec"],[25,"evm::executor::stack::precompile"],[26,"core::result"],[27,"evm::executor::stack::precompile"]],"d":["","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,[[9,[10,8]]],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[15,"u8"],[15,"slice"],[15,"u64"],[4,"ExitSucceed",23],[3,"Vec",24],[4,"PrecompileFailure",25],[4,"Result",26],[3,"PrecompileOutput",25],[8,"PrecompileHandle",25],[3,"TypeId",27],[3,"Ed25519Verify",0]],"b":[]},\
"pallet_evm_precompile_modexp":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLL","n":["Modexp","borrow","borrow_mut","deref","deref_mut","drop","execute","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_evm_precompile_modexp"],[22,"fp_evm::precompile"],[23,"evm::executor::stack::precompile"],[24,"core::result"],[25,"core::any"]],"d":["","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,3,4],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[6,"PrecompileResult",22],[8,"PrecompileHandle",23],[4,"Result",24],[3,"TypeId",25],[3,"Modexp",0]],"b":[]},\
"pallet_evm_precompile_sha3fips":{"doc":"","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Sha3FIPS256","Sha3FIPS512","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","execute","execute","execute","execute","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"pallet_evm_precompile_sha3fips"],[46,"evm_core::error"],[47,"alloc::vec"],[48,"evm::executor::stack::precompile"],[49,"core::result"],[50,"evm::executor::stack::precompile"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,13,14,13,14,13,14,13,14,13,14,13,13,14,14,13,14,13,13,14,14,13,13,14,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,[[9,[10,8]]],11],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,[[9,[10,8]]],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[15,"u8"],[15,"slice"],[15,"u64"],[4,"ExitSucceed",46],[3,"Vec",47],[4,"PrecompileFailure",48],[4,"Result",49],[3,"PrecompileOutput",48],[8,"PrecompileHandle",48],[3,"TypeId",50],[3,"Sha3FIPS256",0],[3,"Sha3FIPS512",0]],"b":[]},\
"pallet_evm_precompile_simple":{"doc":"","t":"DDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ECRecover","ECRecoverPublicKey","Identity","Ripemd160","Sha256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_evm_precompile_simple"],[115,"evm_core::error"],[116,"alloc::vec"],[117,"evm::executor::stack::precompile"],[118,"core::result"],[119,"evm::executor::stack::precompile"]],"d":["The ecrecover precompile.","The ECRecoverPublicKey precompile. Similar to ECRecover, …","The identity precompile.","The ripemd precompile.","The sha256 precompile.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,13,14,14,15,15,16,16,17,17,13,14,15,16,17,13,13,14,14,15,15,16,16,17,17,13,13,14,14,15,15,16,16,17,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17,13,14,15,16,17],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,[[9,[10,8]]],11],[-1,[[9,[10,8]]],11],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,[[9,[10,8]]],11],[-1,[[9,[10,8]]],11],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,[[9,[10,8]]],11],[[[4,[3]],5],[[9,[[2,[6,[7,[3]]]],8]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[15,"u8"],[15,"slice"],[15,"u64"],[4,"ExitSucceed",115],[3,"Vec",116],[4,"PrecompileFailure",117],[4,"Result",118],[3,"PrecompileOutput",117],[8,"PrecompileHandle",117],[3,"TypeId",119],[3,"Identity",0],[3,"ECRecover",0],[3,"Ripemd160",0],[3,"Sha256",0],[3,"ECRecoverPublicKey",0]],"b":[]},\
"pallet_evm_test_vector_support":{"doc":"","t":"DLLLLLMLLLLLLLLLMMLLMLLLLMLLLLLLFFLLLLLL","n":["MockHandle","borrow","borrow_mut","call","code_address","context","context","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","gas_limit","gas_limit","gas_used","init","input","input","into","into_mut","into_ref","is_static","is_static","log","new","record_cost","record_external_cost","refund_external_cost","remaining_gas","test_precompile_failure_test_vectors","test_precompile_test_vectors","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_evm_test_vector_support"],[40,"primitive_types"],[41,"evm_runtime::handler"],[42,"core::option"],[43,"alloc::vec"],[44,"evm_runtime::context"],[45,"evm_core::error"],[46,"primitive_types"],[47,"alloc::string"],[48,"core::any"]],"d":["","","","Perform subcall in provided context. Precompile specifies …","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Tests a precompile against the ethereum consensus tests …","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,[4,[3]],[6,[5]],[4,[7]],8,9],[[11,[10,[6,[5]]]]]],[1,2],[1,9],0,[12,-1,[]],[12,-1,[]],[12,11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[1,[[4,[7]]]],0,0,[[],12],[1,[[13,[5]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,8],0,[[1,2,[6,[14]],[6,[5]]],[[16,[11,15]]]],[[[6,[5]],[4,[7]],9],1],[[1,7],[[16,[11,15]]]],[[1,[4,[7]],[4,[7]],[4,[7]]],[[16,[11,15]]]],[[1,[4,[7]],[4,[7]]],11],[1,7],[17,[[16,[11,18]]]],[17,[[16,[11,18]]]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"MockHandle",0],[3,"H160",40],[3,"Transfer",41],[4,"Option",42],[15,"u8"],[3,"Vec",43],[15,"u64"],[15,"bool"],[3,"Context",44],[4,"ExitReason",45],[15,"tuple"],[15,"usize"],[15,"slice"],[3,"H256",40],[4,"ExitError",45],[4,"Result",46],[15,"str"],[3,"String",47],[3,"TypeId",48]],"b":[]},\
"pallet_hotfix_sufficients":{"doc":"","t":"ICKAAQEIENGDQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLMFDILLLLLLLLLLKLLLLLLLLLLL","n":["AddressMapping","WeightInfo","into_account_id","pallet","weights","AddressMapping","Call","Config","Error","MaxAddressCountExceeded","Module","Pallet","WeightInfo","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","hotfix_inc_account_sufficients","hotfix_inc_account_sufficients","identity","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","new_call_variant_hotfix_inc_account_sufficients","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","addresses","hotfix_inc_account_sufficients","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","hotfix_inc_account_sufficients","hotfix_inc_account_sufficients","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_hotfix_sufficients"],[5,"pallet_hotfix_sufficients::pallet"],[157,"pallet_hotfix_sufficients::pallet::Call"],[158,"pallet_hotfix_sufficients::pallet::dispatchables"],[159,"pallet_hotfix_sufficients::weights"],[183,"primitive_types"],[184,"dyn_clone::sealed"],[185,"sp_weights::weight_v2"],[186,"alloc::vec"],[187,"frame_support::traits::metadata"],[188,"parity_scale_codec::error"],[189,"core::result"],[190,"parity_scale_codec::codec"],[191,"frame_support::dispatch"],[192,"parity_scale_codec::codec"],[193,"core::fmt"],[194,"core::fmt"],[195,"frame_support::traits::metadata"],[196,"core::any"],[197,"scale_info::ty"],[198,"sp_storage"],[199,"frame_support::dispatch"]],"d":["Trait to be implemented for evm address mapping.","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","Autogenerated weights for pallet_hotfix_sufficients","Mapping from address to account id.","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","Maximum address count exceeded","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","Weight information for extrinsics in this pallet.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","Increment <code>sufficients</code> for existing accounts having a …","See <code>Pallet::hotfix_inc_account_sufficients</code>.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a call with the variant …","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Increment <code>sufficients</code> for existing accounts having a …","Weights for pallet_hotfix_sufficients using the Substrate …","Weight functions needed for pallet_hotfix_sufficients.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Storage: System Account (r:1000 w:1000) Proof: System …","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,37,0,0,10,0,0,0,13,0,0,10,8,9,8,13,9,13,9,13,9,8,13,9,8,13,9,8,9,8,9,8,8,8,13,9,13,9,13,9,13,9,8,13,9,8,13,9,9,0,8,13,9,13,9,8,9,8,8,8,9,9,9,8,13,9,8,13,9,8,8,13,13,9,9,8,8,13,13,9,9,9,9,9,9,9,8,9,13,9,8,8,8,13,9,8,8,13,9,8,13,9,8,13,9,9,8,8,8,9,8,8,8,8,8,8,8,13,9,8,0,13,9,8,9,8,13,9,8,13,9,0,0,0,13,9,13,9,13,9,8,13,9,13,9,8,13,9,8,13,9,8,13,9,8,13,38,0,0,0,39,39,39,39,39,39,39,39,39,39,40,39,39,39,39,39,39,39,39,39,39,39],"f":[0,0,[1,-1,[]],0,0,0,0,0,0,0,0,0,0,[[-1,2],3,[]],[[-1,2],3,[]],[[],4],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[7,[5]]],[]],[-1,[[7,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[-1]]],[[8,[-1]]],[]],[[[9,[-1]]],[[9,[-1]]],10],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],11],[[],12],[[]],[-1,[[15,[[13,[-2]],14]]],16,[]],[-1,[[15,[[9,[-2]],14]]],16,10],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[[[9,[-1]]],19,10],0,[11,3],[11,3],[11,3],[[[13,[-1]],-2],3,[],[20,21]],[[[9,[-1]],-2],3,10,[20,21]],[[[8,[-1]],[8,[-1]]],22,[]],[[[9,[-1]],[9,[-1]]],22,10],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[[8,[-1]],23],24,[]],[[[13,[-1]],23],24,10],[[[9,[-1]],23],24,10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[9,[-1]]],5,10],[[],[[17,[5]]]],[[[9,[-1]]],25,10],[[],[[17,[25]]]],[[[9,[-1]]],26,10],[[[27,[-1]],[7,[1]]],19,10],0,[-1,[[7,[5]]],[]],[-1,[[7,[5]]],[]],[[],11],[[],[[7,[28]]]],[[],11],[[],11],[[],11],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],22,10],[[],25],[[],25],[[],[[6,[5]]]],[[[7,[1]]],[[9,[-1]]],10],[[[29,[-1]]],3,10],[[],30],[[[29,[-1]]],3,10],[[],3],[[[29,[-1]],4],4,10],[[[29,[-1]]],4,10],[[],4],[[[13,[-1]]],11,[]],[[[9,[-1]]],11,10],[[],[[7,[31]]]],0,[[-1,[17,[5]]],[[7,[5]]],[]],[[-1,[17,[5]]],[[7,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[7,[5]]],[]],[-1,[[7,[5]]],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[[],33],[[],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[7,[34]]]],[[-1,4],[[36,[35]]],[]],0,[[[7,[1]]],3],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[11,-1,[]],[11,-1,[]],[11,3],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[18,4],[18,4],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[10],"p":[[3,"H160",183],[3,"Private",184],[15,"tuple"],[3,"Weight",185],[15,"u8"],[15,"array"],[3,"Vec",186],[3,"Pallet",5],[4,"Call",5],[8,"Config",5],[15,"usize"],[3,"CrateVersion",187],[4,"Error",5],[3,"Error",188],[4,"Result",189],[8,"Input",190],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo",191],[8,"Output",190],[8,"Sized",192],[15,"bool"],[3,"Formatter",193],[6,"Result",193],[15,"str"],[3,"DispatchInfo",191],[6,"OriginFor",194],[3,"PalletInfoData",187],[6,"BlockNumberFor",194],[3,"StorageVersion",187],[3,"StorageInfo",195],[3,"TypeId",196],[3,"Type",197],[3,"TrackedStorageKey",198],[3,"PostDispatchInfo",191],[3,"DispatchErrorWithPostInfo",199],[8,"AddressMapping",0],[13,"hotfix_inc_account_sufficients",157],[3,"SubstrateWeight",159],[8,"WeightInfo",159]],"b":[]},\
"precompile_utils":{"doc":"","t":"NGNIOOAKOOXXAAAAAAAAFFIKKKKKKFFIKFFFFFKDEDDDNENDINDNNDDIEDIDDNDDDINNDNLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLKLLLLLLFLLMKLLLLLLMLLLLLLLLLLMLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCICDCCCCDCCCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLOLLKCCCCCLLLLLLMLLLLLLLLLLLXLLLKKKKLLLLLLLLCLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCYYACCCCCCCAACCCCIYDDDCCDLLLLLLLLLLALLLLLLLFCCLLLLLLLLLLFCCFLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLALLLLKLLLLLFKLLLLLLLLLLLLLLLLLLLLLLKLLLGDGDDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNLLLFLLLLLLLLLLLLLLLLLLLLLLLLLDINNRNNIGNQNNDIENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLKLLLLLLLLLLLLLLLLLLKLLLKLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLMMNDNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLALLFLLFFLLLLLLLALLLLLLALLLLALLLLLLLDDDDDDDDDDDLFFLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLDDGDILLMLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMLLLLLLLLLLMMLMMLLMLLMLLLLLLLLMLMLLMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLL","n":["Err","EvmResult","Ok","Precompile","assert_event_emitted","assert_event_not_emitted","evm","execute","keccak256","mock_account","precompile","precompile_name_from_address","precompile_set","prelude","solidity","substrate","testing","costs","handle","logs","call_cost","log_costs","PrecompileHandleExt","check_function_modifier","read_after_selector","read_u32_selector","record_db_read","record_log_costs","record_log_costs_manual","using_precompile_handle","with_precompile_handle","LogExt","compute_cost","log0","log1","log2","log3","log4","record","AcceptDelegateCall","AddressType","AddressU64","CallableByContract","CallableByPrecompile","Contract","DiscriminantResult","EOA","ForAllSelectors","IsActivePrecompile","None","OnlyFrom","OutOfGas","Precompile","PrecompileAt","PrecompileCheckSummary","PrecompileChecks","PrecompileKind","PrecompileSetBuilder","PrecompileSetFragment","PrecompileSetStartingWith","PrecompilesInRangeInclusive","Prefixed","RemovedPrecompileAt","RestrictiveHandle","RevertPrecompile","SelectorFilter","Single","Some","SubcallWithMaxNesting","Unknown","__clone_box","__clone_box","__clone_box","accept_delegate_call","accept_delegate_call","accept_delegate_call","allow_subcalls","allow_subcalls","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","callable_by_precompile","callable_by_precompile","callable_by_precompile","callable_by_precompile_summary","callable_by_precompile_summary","callable_by_smart_contract","callable_by_smart_contract","callable_by_smart_contract","callable_by_smart_contract_summary","callable_by_smart_contract_summary","check_function_modifier","clone","clone","clone","clone_into","clone_into","clone_into","code_address","context","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gas_limit","get","get_address_type","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_active_precompile","is_active_precompile","is_active_precompile","is_active_precompile","is_active_precompile","is_active_precompile","is_active_precompile","is_allowed","is_allowed","is_allowed","is_precompile","is_precompile","is_precompile","is_precompile","is_precompile","is_precompile","is_precompile","is_precompile_or_fail","is_static","log","name","new","new","new","new","new","new","new","precompile_kind","prepare_test","read_after_selector","read_u32_selector","record_cost","record_db_read","record_external_cost","record_log_costs","record_log_costs_manual","recursion_limit","recursion_limit","recursion_limit","refund_external_cost","remaining_gas","serialize","serialize","summarize_checks","summarize_checks","summarize_checks","summarize_checks","summarize_checks","summarize_checks","summarize_checks","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","used_addresses","used_addresses","used_addresses","used_addresses","used_addresses","used_addresses","used_addresses","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Address","BacktraceExt","BoundedBytes","BoundedString","BoundedVec","Convert","DiscriminantResult","EvmResult","InjectBacktrace","LogExt","MayRevert","PrecompileHandle","PrecompileHandleExt","PrecompileOutput","Revert","RevertExt","RevertReason","RuntimeHelper","String","TryDispatchError","UnboundedBytes","UnboundedString","_","_","__clone_box","__clone_box","add","add_assign","as_byte_slice","as_bytes","as_cow_c_str","as_cow_c_str","as_cow_c_str","as_cow_c_str","as_diffable_str","as_mut","as_mut_str","as_mut_string","as_mut_string","as_mut_vec","as_ref","as_ref","as_ref","as_ref","as_slice_of","as_str","as_str","as_str","as_str","as_str","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","can_decode","capacity","clear","clear","clear","clone","clone","clone_from","clone_into","clone_into","cmp","code_address","consume","context","decode","decode","decode","decode_all","decode_all_with_depth_limit","decode_value","decode_with_depth_limit","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","der_cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drain","drop","drop","encode","encode","encode_hex","encode_hex_upper","encode_to","encode_value","encode_with","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exit_status","extend","extend","extend","extend","extend","extend","extend_from_within","extend_one","extend_one","extend_one","extend_one","extend_one","extend_reserve","extend_reserve","finish","finish","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_mut","from_mut","from_mut","from_mut","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_raw_parts","from_ref","from_ref","from_ref","from_ref","from_str","from_utf16","from_utf16_lossy","from_utf16be","from_utf16be_lossy","from_utf16le","from_utf16le_lossy","from_utf8","from_utf8_lossy","from_utf8_unchecked","gas_limit","get_hash","get_hash","hash","identity","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","input","insert","insert_str","into","into","into_boxed_str","into_bytes","into_c_str","into_c_str","into_c_str","into_c_str","into_deserializer","into_mut","into_mut","into_raw_parts","into_ref","into_ref","into_searcher","into_with_c_str","into_with_c_str","into_with_c_str","into_with_c_str","is_clear","is_contained_in","is_empty","is_prefix_of","is_static","is_suffix_of","keccak256","leak","len","log","log0","log1","log2","log3","log4","ne","ne","ne","new","no_expansion","no_expansion","output","par_drain","par_extend","par_extend","par_extend","par_extend","par_extend","parse_formatted","partial_cmp","partial_cmp","partial_cmp","pop","precompile","push","push_str","record","record_cost","record_external_cost","refund_external_cost","remaining_gas","remove","remove_matches","replace_append","replace_append","replace_range","reserve","reserve_exact","retain","revert","rlp_append","serialize","serialize","shrink_to","shrink_to_fit","size_hint","solidity","split_off","strip_prefix_of","strip_suffix_of","tag","to_keyed_vec","to_owned","to_owned","to_socket_addrs","to_string","to_string_lossy","to_string_lossy","to_string_lossy","to_string_lossy","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_reserve","try_reserve_exact","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","value_cmp","value_len","vzip","vzip","with_capacity","write_char","write_formatted","write_formatted","write_str","write_string","zeroize","Codec","Codec","Codec","codec","decode_arguments","decode_event_data","decode_return_value","encode_arguments","encode_event_data","encode_return_value","encode_with_selector","modifier","revert","Address","BoundedBytes","BoundedString","BoundedVec","Codec","Codec","Convert","Reader","String","UnboundedBytes","UnboundedString","Writer","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","bytes","clone","clone","clone","clone_into","clone_into","clone_into","converted","decode_arguments","decode_event_data","decode_return_value","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_arguments","encode_event_data","encode_return_value","encode_with_selector","expect_arguments","fmt","fmt","fmt","from","from","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","has_static_size","has_static_size","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_explicit_tuple","native","new","new","new_skip_selector","new_with_selector","read","read","read","read_pointer","read_raw_bytes","read_till_end","selector","signature","signature","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","write","write","write","write_pointer","BoundedBytes","BoundedBytesString","BoundedString","BytesKind","StringKind","UnboundedBytes","UnboundedString","__clone_box","__clone_box","__clone_box","as_bytes","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","has_static_size","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","read","signature","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","write","Address","BoundedVec","__clone_box","__clone_box","as_u64","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","has_static_size","has_static_size","init","init","into","into","into_mut","into_mut","into_ref","into_ref","is_clear","read","read","signature","signature","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","write","write","FunctionModifier","NonPayable","Payable","View","__clone_box","borrow","borrow_mut","check_function_modifier","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Backtrace","BacktraceExt","CursorOverflow","Custom","ERROR_SELECTOR","Err","ExpectedAtLeastNArguments","InjectBacktrace","MayRevert","Ok","Output","PointerToOutofBound","ReadOutOfBounds","Revert","RevertExt","RevertReason","UnknownSelector","ValueIsTooLarge","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_what","clear","custom","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","in_array","in_array","in_array","in_array","in_array","in_field","in_field","in_field","in_field","in_field","in_tuple","in_tuple","in_tuple","in_tuple","in_tuple","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_clear","is_empty","map_in_tuple_to_field","map_in_tuple_to_field","map_in_tuple_to_field","map_in_tuple_to_field","map_reason","map_reason","map_reason","new","new","read_out_of_bounds","revert","revert_as_bytes","to_encoded_bytes","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value_is_too_large","vzip","vzip","vzip","what","what","Evm","RuntimeHelper","Substrate","TryDispatchError","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","db_read_gas_cost","db_write_gas_cost","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","record_weight_v2_cost","refund_weight_v2_cost","to_owned","try_dispatch","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","PrettyLog","__clone_box","account","borrow","borrow_mut","check_precompile_implements_solidity_interfaces","clone","clone_into","compute_selector","decode_revert_message","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","execution","fmt","from","from_mut","from_mut","from_ref","from_ref","handle","init","into","into_mut","into_ref","modifier","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","AddressInPrefixedSet","Alice","Bob","Charlie","CryptoAlith","CryptoBaltathar","CryptoCarleth","David","MockAccount","Precompile1","Zero","__clone_box","alith_secret_key","baltathar_secret_key","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","charleth_secret_key","clone","clone_into","cmp","convert","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_u64","has_prefix","has_prefix_u32","identity","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_account_id","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","max_encoded_len","partial_cmp","serialize","size_hint","to_keyed_vec","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","without_prefix","zero","PrecompileTesterExt","PrecompilesTester","borrow","borrow_mut","deref","deref_mut","drop","execute_error","execute_none","execute_returns","execute_returns_raw","execute_reverts","execute_some","expect_cost","expect_log","expect_no_logs","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","prepare_test","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","with_static_call","with_subcall_handle","with_target_gas","with_value","MockHandle","Subcall","SubcallHandle","SubcallOutput","SubcallTrait","__clone_box","__clone_box","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","check_function_modifier","clone","clone","clone_into","clone_into","code_address","code_address","context","context","context","cost","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gas_limit","gas_limit","gas_used","init","init","init","input","input","input","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_static","is_static","is_static","log","logs","logs","new","out_of_gas","output","read_after_selector","read_u32_selector","reason","record_cost","record_db_read","record_external_cost","record_log_costs","record_log_costs_manual","refund_external_cost","remaining_gas","revert","subcall_handle","succeed","target_gas","to_owned","to_owned","transfer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","PrecompilesModifierTester","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","test_default_modifier","test_payable_modifier","test_view_modifier","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"precompile_utils"],[17,"precompile_utils::evm"],[20,"precompile_utils::evm::costs"],[22,"precompile_utils::evm::handle"],[31,"precompile_utils::evm::logs"],[39,"precompile_utils::precompile_set"],[541,"precompile_utils::prelude"],[866,"precompile_utils::solidity"],[879,"precompile_utils::solidity::codec"],[1006,"precompile_utils::solidity::codec::bytes"],[1112,"precompile_utils::solidity::codec::native"],[1188,"precompile_utils::solidity::modifier"],[1221,"precompile_utils::solidity::revert"],[1354,"precompile_utils::solidity::revert::RevertReason"],[1356,"precompile_utils::substrate"],[1411,"precompile_utils::testing"],[1448,"precompile_utils::testing::account"],[1739,"precompile_utils::testing::execution"],[1776,"precompile_utils::testing::handle"],[1890,"precompile_utils::testing::modifier"],[1915,"evm::executor::stack::precompile"],[1916,"core::result"],[1917,"primitive_types"],[1918,"evm_runtime"],[1919,"evm_core::error"],[1920,"ethereum::log"],[1921,"core::ops::function"],[1922,"core::option"],[1923,"primitive_types"],[1924,"alloc::vec"],[1925,"primitive_types"],[1926,"evm_runtime::handler"],[1927,"evm_runtime::context"],[1928,"evm_core::error"],[1929,"pallet_evm::pallet"],[1930,"serde::de"],[1931,"fp_evm::precompile"],[1932,"bounded_collections"],[1933,"evm::executor::stack::precompile"],[1934,"core::fmt"],[1935,"core::fmt"],[1936,"core::any"],[1937,"core::iter::traits::iterator"],[1938,"core::ffi::c_str"],[1939,"alloc::borrow"],[1940,"rustix::backend::io::errno"],[1941,"rustix::backend::io::errno"],[1942,"std::path"],[1943,"byte_slice_cast"],[1944,"byte_slice_cast"],[1945,"core::cmp"],[1946,"rlp::rlpin"],[1947,"rlp::error"],[1948,"der::error"],[1949,"der::reader"],[1950,"parity_scale_codec::error"],[1951,"parity_scale_codec::codec"],[1952,"der::header"],[1953,"parity_wasm::io"],[1954,"alloc::string"],[1955,"core::ops::range"],[1956,"der::writer"],[1957,"core::iter::traits::collect"],[1958,"parity_scale_codec::codec"],[1959,"bs58::encode"],[1960,"der::length"],[1961,"bytes::bytes_mut"],[1962,"serde_json::value"],[1963,"bytes::bytes"],[1964,"core::iter::traits::collect"],[1965,"sp_runtime::runtime_string"],[1966,"url"],[1967,"der::asn1::utf8_string"],[1968,"wasmparser::validator::types"],[1969,"alloc::boxed"],[1970,"rayon::iter"],[1971,"alloc::string"],[1972,"core::hash"],[1973,"serde::de"],[1974,"num_format::format"],[1975,"num_format::parsing"],[1976,"tracing_core::field"],[1977,"tracing_core::field"],[1978,"regex::regex::string"],[1979,"core::ops::function"],[1980,"parity_wasm::elements"],[1981,"parity_wasm::io"],[1982,"alloc::vec::into_iter"],[1983,"std::io::error"],[1984,"der::asn1::any"],[1985,"alloc::collections"],[1986,"scale_info::ty"],[1987,"num_format::to_formatted_string"],[1988,"std::os::fd::owned"],[1989,"io_lifetimes::portability"],[1990,"io_lifetimes::portability"],[1991,"core::cmp"],[1992,"frame_support::dispatch"],[1993,"core::ops::function"]],"d":["Contains the error value","Alias for Result returning an EVM precompile error.","Contains the success value","One single precompile used by EVM engine.","Panics if an event is not found in the system log of events","","","Try to execute the precompile with given <code>handle</code> which …","","","","","Provide utils to assemble precompiles and precompilesets …","","Provides utilities for compatibility with Solidity tooling.","Utils related to Substrate features:","","Cost calculations. TODO: PR EVM to make those cost …","","","","","","Check that a function call is compatible with the context …","Returns a reader of the input, skipping the selector.","Read the selector from the input data.","Record cost of one DB read manually. The max encoded …","Record cost of logs.","Record cost of a log manually. This can be useful to …","","","Extension trait allowing to record logs into a …","","Create a 0-topic log.","Create a 1-topic log.","Create a 2-topics log.","Create a 3-topics log.","Create a 4-topics log.","","Precompile can be called using DELEGATECALL/CALLCODE.","The type of EVM address.","","","Precompiles are allowed to call this precompile.","The code is greater than 5-bytes, potentially a Smart …","","No code is stored at the address, therefore is EOA.","","Allows to know if a precompile is active or not. This …","","","","The 5-byte magic constant for a precompile is stored at …","Wraps a stateless precompile: a type implementing the …","","Trait representing checks that can be made on a precompile …","","Wraps a tuple of <code>PrecompileSetFragment</code> to make a real …","A fragment of a PrecompileSet. Should be implemented as is …","Wraps an inner PrecompileSet with all its addresses …","Wraps a precompileset fragment into a range, and will skip …","","A precompile that was removed from a precompile set. Still …","","Make a precompile that always revert. Can be useful when …","","","","Precompile is able to do subcalls with provided nesting …","The code stored at the address is less than 5 bytes, but …","","","","Does this precompile supports being called with …","","","Is this precompile able to do subcalls?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this precompile callable by a precompile?","","","Summarize the checks when being called by a precompile.","","Is this precompile callable by a smart contract?","","","Summarize the checks when being called by a smart contract.","","Check that a function call is compatible with the context …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute the fragment.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Retrieves the type of address demarcated by <code>AddressType</code>.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is the provided address an active precompile, a precompile …","","","","","","","","","","Is the provided address a precompile in this fragment?","","","","","","","","","","","Instanciate the fragment.","","","","","","Create a new instance of the PrecompileSet.","","","Returns a reader of the input, skipping the selector.","Read the selector from the input data as u32.","","","","Record cost of logs.","Record cost of a log manualy. This can be useful to record …","Is there a limit to the amount of recursions this …","","","","","","","Summarize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the list of addresses covered by this fragment.","","","","","","Return the list of addresses contained in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handle provided to a precompile to interact with the EVM.","","Data returned by a precompile on success.","","","","","A UTF-8–encoded, growable string.","","","","","","","","","","","Returns a byte slice of this <code>String</code>’s contents.","","","","","","","Converts a <code>String</code> into a mutable string slice.","","","Returns a mutable reference to the contents of this <code>String</code>.","","","","","","","","","Extracts a string slice containing the entire <code>String</code>.","","","","","","","","","","","Perform subcall in provided context. Precompile specifies …","","Returns this <code>String</code>’s capacity, in bytes.","","Truncates this <code>String</code>, removing all contents.","","","","","","","","Retreive the code address (what is the address of the …","","Retreive the context in which the precompile is executed.","","","","","","","","Creates an empty <code>String</code>.","","","","","","","","","","","","","","Removes the specified range from the string in bulk, …","","","","Encode this value as ASN.1 DER using the provided <code>Writer</code>.","","","","","","Compute the length of this value in bytes when encoded as …","","","","","","","","","","","","","","","","","","","","","","Copies elements from <code>src</code> range to the end of the string.","","","","","","","","","","","","","Returns the argument unchanged.","","Allocates an owned <code>String</code> from a single character.","Converts a <code>&amp;String</code> into a <code>String</code>.","","Returns the argument unchanged.","","","","Converts a <code>&amp;mut str</code> into a <code>String</code>.","Converts a <code>&amp;str</code> into a <code>String</code>.","Converts a clone-on-write string to an owned instance of …","Converts the given boxed <code>str</code> slice to a <code>String</code>. It is …","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","","","","","Creates a new <code>String</code> from a length, capacity, and pointer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Decode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing …","Decode a UTF-16BE–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16BE–encoded slice <code>v</code> into a <code>String</code>, …","Decode a UTF-16LE–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16LE–encoded slice <code>v</code> into a <code>String</code>, …","Converts a vector of bytes to a <code>String</code>.","Converts a slice of bytes to a string, including invalid …","Converts a vector of bytes to a <code>String</code> without checking …","Retreive the gas limit of this call.","","","","","","","","","","","","","","","","","","","Retreive the input data the precompile is called with.","Inserts a character into this <code>String</code> at a byte position.","Inserts a string slice into this <code>String</code> at a byte position.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>String</code> into a Box&lt;str&gt;.","Converts a <code>String</code> into a byte vector.","","","","","","","","Decomposes a <code>String</code> into its raw components.","","","","","","","","","","Returns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>…","","Is the precompile call is done statically.","","","Consumes and leaks the <code>String</code>, returning a mutable …","Returns the length of this <code>String</code>, in bytes, not <code>char</code>s or …","Record a log.","","","","","","","","","Creates a new empty <code>String</code>.","","","","","","","","","","","","","","Removes the last character from the string buffer and …","","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends a given string slice onto the end of this <code>String</code>.","","Record cost to the Runtime gasometer.","Record Substrate specific cost.","Refund Substrate specific cost.","Retreive the remaining gas.","Removes a <code>char</code> from this <code>String</code> at a byte position and …","Remove all matches of pattern <code>pat</code> in the <code>String</code>.","","","Removes the specified range in the string, and replaces it …","Reserves capacity for at least <code>additional</code> bytes more than …","Reserves the minimum capacity for at least <code>additional</code> …","Retains only the characters specified by the predicate.","","","","","Shrinks the capacity of this <code>String</code> with a lower bound.","Shrinks the capacity of this <code>String</code> to match its length.","","","Splits the string into two at the given byte index.","","","","","","","","","","","","","Shortens this <code>String</code> to the specified length.","","","","","","","Tries to reserve capacity for at least <code>additional</code> bytes …","Tries to reserve the minimum capacity for at least …","","","","","","","","","","","","","","","","Creates a new empty <code>String</code> with at least the specified …","","","","","","","","","","Solidity encoding following the Contract ABI Specification","","","","","","","","Provide checks related to function modifiers …","Utilities to work with revert messages with support for …","","","","","Data that can be encoded/encoded followiong the Solidity …","","Adapter to parse data as a first type then convert it to …","Wrapper around an EVM input slice.","A UTF-8–encoded, growable string.","","","Help build an EVM input/output data.","","","","","","","","","","","","","","","","","","","Decode the value from its Solidity ABI format. If <code>T</code> is a …","","","","","","","","","","","","","Encode the value into its Solidity ABI format. If <code>T</code> is a …","","","Encode the value as the arguments of a Solidity function …","Check the input has at least the correct amount of …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Create a Reader.","Creates a new empty output builder (without selector).","Create a Reader while skipping an initial selector.","Creates a new empty output builder with provided selector. …","","Read data from the input.","","Reads a pointer, returning a reader targetting the pointed …","Read raw bytes from the input. Doesn’t handle any …","Read remaining bytes","Extracts the selector from the start of the input, or …","","","","","","","","","","","","","","","","","","","","","","","","","Write data of requested type.","","Writes a pointer to given data. The data will be appended …","","The <code>bytes/string</code> type of Solidity. It is different from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>address</code> type of Solidity. H160 could represent 2 types …","Wrapper around a Vec that provides a max length bound on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Represents modifiers a Solidity function can be annotated …","Function that modifies the state but refuse receiving …","Function that modifies the state and accept funds.","Function that doesn’t modify the state.","","","","Check that a function call is compatible with the context …","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Backtrace of an revert. Built depth-first. Implement …","Additional function for everything having a Backtrace.","The reading cursor overflowed. This should realistically …","A custom revert reason if other variants are not …","Generic error to build abi-encoded revert output. See: …","Contains the error value","Used by a check that the input contains at least N static …","Allows to inject backtrace data.","Represent the result of a computation that can revert.","Contains the success value","Output type of the injection. Should be a type that can …","A pointer (used for structs and arrays) points out of …","Tried to read data out of bounds.","An revert returned by various functions in …","Additional functions for Revert and MayRevert.","Possible revert reasons.","An unknown selector has been provided.","A value is too large to fit in the wanted type. For …","","","","","","","For all <code>RevertReason</code> variants that have a <code>what</code> field, …","","Create a <code>RevertReason::Custom</code> from anything that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Occurs in an array at provided index.","","","","","Occurs in a field.","","","","","Occurs in a tuple.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Check if the backtrace is empty.","Map last tuple entry into a field. Does nothing if last …","","","","Map the reason while keeping the same backtrace.","","","Create a new empty backtrace.","Create a new <code>Revert</code> with a <code>RevertReason</code> and an empty …","Create a <code>RevertReason::ReadOutOfBounds</code> from anything that …","Generate an encoded revert from a simple String. Returns a …","Generate an encoded revert from a simple String. Returns a …","Transforms the revert into its bytes representation (from …","","","","","","","","","","","","","","","","","","","Create a <code>RevertReason::ValueIsTooLarge</code> from anything that …","","","","What was being read?","What was being read?","","Helper functions requiring a Substrate runtime. This …","","","","","","","","","","Cost of a Substrate DB read in gas.","Cost of a Substrate DB write in gas.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Try to dispatch a Substrate call. Return an error if there …","","","","","","","","","","","","","","","","","","","","","Computes a solidity selector from a given string","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute the precompile set and check it returns provided …","Execute the precompile set and expect no precompile to …","Execute the precompile set and check it returns provided …","Execute the precompile set and check it returns provided …","Execute the precompile set and check if it reverts. Take a …","Execute the precompile set and expect some precompile to …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Mock handle to write tests for precompiles.","","","","","","","","","","","","","","Perform subcall in provided context. Precompile specifies …","Check that a function call is compatible with the context …","","","","","Retreive the code address (what is the address of the …","","Retreive the context in which the precompile is executed.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Retreive the gas limit of this call.","","","","","","Retreive the input data the precompile is called with.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Is the precompile call is done statically.","","","","","","","","","Returns a reader of the input, skipping the selector.","Read the selector from the input data as u32.","","","","","Record cost of logs.","Record cost of a log manualy. This can be useful to record …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[9,0,9,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,175,175,175,175,175,0,0,0,176,0,0,0,0,0,176,0,0,0,0,0,41,0,41,0,0,33,0,33,41,0,0,0,0,0,0,0,0,35,0,0,0,0,35,33,0,41,33,35,36,46,177,36,46,178,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,27,46,182,36,46,182,46,181,36,46,181,27,33,35,36,33,35,36,27,27,37,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,184,179,180,35,36,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,41,39,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,177,178,178,179,179,180,180,181,181,182,182,183,183,27,27,43,43,47,47,50,50,51,51,52,52,37,37,33,33,35,35,36,36,41,41,177,177,178,178,179,179,180,180,181,181,182,182,183,183,27,27,43,43,47,47,50,50,51,51,52,52,37,37,33,33,35,35,36,36,41,41,27,183,0,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,27,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,57,43,47,50,51,52,37,184,179,180,39,43,47,50,51,52,37,0,27,27,36,39,43,47,50,51,52,37,36,37,27,27,27,27,27,27,27,46,178,36,27,27,35,36,39,43,47,50,51,52,37,33,35,36,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,39,43,47,50,51,52,37,177,178,179,180,181,182,183,27,43,47,50,51,52,37,33,35,36,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,1,31,31,1,31,31,4,31,31,31,31,31,1,31,31,1,31,31,4,31,4,31,31,31,31,31,31,31,31,31,31,31,31,31,1,31,31,1,31,31,31,31,31,1,31,31,31,31,31,31,31,31,31,1,31,31,31,31,31,31,31,1,1,1,31,31,31,1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,1,31,31,1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,1,1,31,31,31,31,31,31,31,31,1,1,31,31,31,31,31,31,31,31,31,31,31,31,4,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,1,31,4,31,31,1,31,31,31,31,31,31,31,31,1,31,31,1,31,31,31,31,31,31,31,31,31,31,4,31,0,31,31,4,0,0,0,0,0,31,31,31,31,31,31,1,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,4,4,4,4,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,0,31,31,31,31,31,1,31,31,31,31,31,31,31,31,1,31,31,31,1,31,31,31,31,31,31,1,31,31,1,31,1,31,31,31,31,1,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,136,137,12,136,137,12,136,137,136,0,12,136,137,12,136,137,137,0,0,0,136,12,136,137,12,136,137,12,136,137,0,0,0,0,12,12,136,137,12,136,137,137,137,137,137,137,137,12,12,136,136,137,137,12,12,136,136,137,137,137,138,137,12,136,137,12,136,137,12,136,137,12,136,137,138,0,12,136,12,136,138,12,137,12,12,12,0,138,137,12,136,137,12,136,137,12,136,137,12,136,137,12,136,137,12,136,137,12,136,137,138,136,137,136,0,0,0,0,0,0,0,145,146,131,131,131,145,146,131,145,146,131,145,146,131,145,146,131,145,146,131,145,146,131,145,146,131,145,146,131,145,145,145,146,146,146,131,131,131,145,146,131,145,146,131,131,131,131,131,131,131,145,145,146,146,131,131,145,145,146,146,131,131,131,145,146,131,145,146,131,145,146,131,145,146,131,131,131,145,146,131,145,146,131,145,146,131,145,146,131,145,146,131,145,146,131,145,146,131,131,0,0,147,148,147,147,148,147,148,147,147,148,147,148,147,147,148,147,148,147,148,147,148,147,147,147,148,148,148,147,148,147,147,148,148,148,148,147,147,148,148,147,147,148,148,147,148,147,148,147,148,147,148,147,148,147,147,148,147,148,147,148,147,148,147,148,147,148,147,148,147,148,147,148,147,148,0,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,150,150,0,11,150,0,0,11,185,150,150,0,0,0,150,150,151,150,32,151,150,32,32,151,150,151,151,150,32,151,150,32,151,150,32,151,150,32,151,151,151,150,150,150,32,32,32,151,150,32,32,151,150,32,32,151,151,150,150,32,32,151,151,150,150,32,32,185,11,151,150,32,185,11,151,150,32,185,11,151,150,32,151,150,32,151,150,32,151,150,32,151,150,32,151,151,186,11,151,32,187,11,32,151,32,150,0,0,32,151,150,32,151,150,32,151,150,32,151,150,32,151,150,32,151,150,32,150,151,150,32,188,189,153,0,153,0,152,153,152,153,152,152,152,152,152,153,152,153,152,153,152,153,152,153,152,153,153,152,152,153,153,152,152,153,152,153,152,153,152,153,152,152,152,152,152,153,152,153,152,153,152,153,152,153,152,153,152,0,157,0,157,157,0,157,157,0,0,157,157,157,157,157,157,157,0,157,157,157,157,157,157,0,157,157,157,157,0,157,157,157,157,157,157,157,0,0,0,0,0,0,0,0,0,0,0,158,0,0,158,158,158,158,163,159,161,160,168,166,165,167,162,164,158,163,159,161,160,168,166,165,167,162,164,0,158,158,158,158,158,158,158,158,158,158,158,158,158,163,159,161,160,168,166,165,167,162,164,158,163,159,161,160,168,166,165,167,162,164,158,158,163,159,161,160,168,166,165,167,162,164,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,163,159,161,160,168,166,165,167,162,164,158,158,163,163,159,159,161,161,160,160,168,168,166,166,165,165,167,167,162,162,164,164,158,158,163,163,159,159,161,161,160,160,168,168,166,166,165,165,167,167,162,162,164,164,158,158,158,158,158,163,159,161,160,168,166,165,167,162,164,158,163,159,161,160,168,166,165,167,162,164,158,158,163,159,161,160,168,166,165,167,162,164,158,163,159,161,160,168,166,165,167,162,164,158,158,158,158,158,158,158,158,163,159,161,160,168,166,165,167,162,164,158,163,159,161,160,168,166,165,167,162,164,158,158,158,158,163,159,161,160,168,166,165,167,162,164,158,158,163,159,161,160,168,166,165,167,162,164,158,163,159,161,160,168,166,165,167,162,164,158,158,163,159,161,160,168,166,165,167,162,164,158,158,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,190,58,58,58,58,58,58,58,58,58,58,0,0,0,0,0,172,173,172,171,172,173,171,172,173,171,171,172,173,172,173,171,171,171,171,172,173,171,172,173,171,172,173,171,172,173,172,173,171,172,173,171,171,172,172,173,173,171,171,172,172,173,173,171,171,171,171,172,173,171,171,172,171,172,173,171,172,173,171,172,173,171,171,172,171,171,173,171,173,173,171,171,173,171,171,171,171,171,171,171,173,171,173,172,172,173,172,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,0,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174],"f":[0,0,0,0,0,0,0,[-1,[[3,[1,2]]],4],0,0,0,0,0,0,0,0,0,0,0,0,[[5,6],7],[[8,8],[[9,[7]]]],0,[[-1,10],11,[]],[-1,[[11,[12]]],[]],[-1,[[11,[13]]],[]],[[-1,8],[[3,[14,15]]],[]],[[-1,[17,[16]]],9,[]],[[-1,8,8],9,[]],[[4,-1],-2,18,[]],[-1,[[19,[-2]]],18,[]],0,[-1,[[9,[7]]],[]],[[-1,-2],16,[[21,[20]]],[[21,[[23,[22]]]]]],[[-1,-2,-3],16,[[21,[20]]],[[21,[24]]],[[21,[[23,[22]]]]]],[[-1,-2,-3,-4],16,[[21,[20]]],[[21,[24]]],[[21,[24]]],[[21,[[23,[22]]]]]],[[-1,-2,-3,-4,-5],16,[[21,[20]]],[[21,[24]]],[[21,[24]]],[[21,[24]]],[[21,[[23,[22]]]]]],[[-1,-2,-3,-4,-5,-6],16,[[21,[20]]],[[21,[24]]],[[21,[24]]],[[21,[24]]],[[21,[24]]],[[21,[[23,[22]]]]]],[[-1,-2],9,[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,25],14,[]],[[-1,25],14,[]],[[-1,25],14,[]],[[],[[19,[26]]]],[[],[[19,[26]]]],0,[[],[[19,[26]]]],[[],[[19,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]],20,[19,[28]],[23,[22]],[19,[7]],26,29],[[14,[30,[23,[22]]]]],4],[[20,[19,[13]]],[[19,[26]]]],[[20,[19,[13]]],[[19,[26]]]],0,[[],[[19,[31]]]],[[],[[19,[31]]]],[[20,[19,[13]]],[[19,[26]]]],[[20,[19,[13]]],[[19,[26]]]],0,[[],[[19,[31]]]],[[],[[19,[31]]]],[[-1,10],[[3,[14,32]]],[]],[[[33,[-1]]],[[33,[-1]]],34],[35,35],[36,36],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[[27,[-1]]],20,4],[[[27,[-1]]],29,4],[[],[[37,[-1,-2]]],38,39],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[[],31],[[],31],[[],31],[-1,[[3,[35]]],40],[-1,[[3,[36]]],40],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[[41,41],26],[[-1,-2],[[19,[42]]],[],4],[[[43,[-1,-2,-3]],-4],[[19,[42]]],[[44,[20]]],45,46,4],[[[47,[-1,-2,-3]],-4],[[19,[42]]],[[44,[[17,[22]]]]],[48,49],46,4],[[[50,[-1]],-2],[[19,[42]]],[[44,[20]]],4],[[[51,[-1]],-2],[[19,[42]]],[[44,[20]]],4],[[[52,[[14,[-1,-2]],-3]],-4],[[19,[42]]],[[44,[20]]],[[44,[20]]],39,4],[[[37,[-1,-2]],-3],[[19,[42]]],38,39,4],[[[33,[-1]],53],54,55],[[35,53],54],[[36,53],54],[[41,53],54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[27,[-1]]],[[19,[7]]],4],[[],20],[[-1,20],[[3,[41,15]]],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[27,[-1]]],[[17,[22]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,20,7],56,[]],[[[43,[-1,-2,-3]],20,7],56,[[44,[20]]],[],[]],[[[47,[-1,-2,-3]],20,7],56,[],[],[]],[[[50,[-1]],20,7],56,[]],[[[51,[-1]],20,7],56,[]],[[[52,[[14,[-1,-2]],-3]],20,7],56,[],[],57],[[[37,[-1,-2]],20,7],56,[],57],[[20,[19,[13]]],26],[[20,[19,[13]]],26],[[20,[19,[13]]],26],[[-1,20,7],56,[]],[[[43,[-1,-2,-3]],20,7],56,[[44,[20]]],45,46],[[[47,[-1,-2,-3]],20,7],56,[[44,[[17,[22]]]]],[48,49],46],[[[50,[-1]],20,7],56,[[44,[20]]]],[[[51,[-1]],20,7],56,[[44,[20]]]],[[[52,[[14,[-1,-2]],-3]],20,7],56,[[44,[20]]],[[44,[20]]],39],[[[37,[-1,-2]],20,7],56,38,39],[[20,7],[[9,[26]]]],[[[27,[-1]]],26,4],[[[27,[-1]],20,[23,[24]],[23,[22]]],[[3,[14,15]]],4],0,[[],-1,[]],[[],[[43,[-1,-2,-3]]],[[44,[20]]],45,46],[[],[[47,[-1,-2,-3]]],[[44,[[17,[22]]]]],[48,49],46],[[],[[50,[-1]]],[[44,[20]]]],[[],[[51,[-1]]],[[44,[20]]]],[[],[[52,[[14,[-1,-2]],-3]]],[[44,[20]]],[[44,[20]]],39],[[],[[37,[-1,-2]]],38,39],0,[[-1,-2,-3,-4],[[58,[-5]]],[],[[21,[20]]],[[21,[20]]],[[21,[[23,[22]]]]],[]],[-1,[[3,[12,32]]],[]],[-1,[[3,[13,32]]],[]],[[[27,[-1]],7],[[3,[14,15]]],4],[[-1,8],[[3,[14,15]]],[]],[[[27,[-1]],[19,[7]],[19,[7]],[19,[7]]],[[3,[14,15]]],4],[[-1,[17,[16]]],[[3,[14,2]]],[]],[[-1,8,8],[[3,[14,2]]],[]],[[],[[19,[[19,[59]]]]]],[[],[[19,[[19,[59]]]]]],0,[[[27,[-1]],[19,[7]],[19,[7]]],14,4],[[[27,[-1]]],7,4],[[35,-1],3,60],[[36,-1],3,60],[-1,[[23,[36]]],[]],[[[43,[-1,-2,-3]]],[[23,[36]]],[[44,[20]]],45,46],[[[47,[-1,-2,-3]]],[[23,[36]]],[[44,[[17,[22]]]]],[48,49],46],[[[50,[-1]]],[[23,[36]]],[[44,[20]]]],[[[51,[-1]]],[[23,[36]]],[[44,[20]]]],[[[52,[[14,[-1,-2]],-3]]],[[23,[36]]],[[44,[20]]],[[44,[20]]],39],[[[37,[-1,-2]]],[[23,[36]]],38,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[20]]],[]],[[[43,[-1,-2,-3]]],[[23,[20]]],[[44,[20]]],45,46],[[[47,[-1,-2,-3]]],[[23,[20]]],[[44,[[17,[22]]]]],[48,49],46],[[[50,[-1]]],[[23,[20]]],[[44,[20]]]],[[[51,[-1]]],[[23,[20]]],[[44,[20]]]],[[[52,[[14,[-1,-2]],-3]]],[[23,[20]]],[[44,[20]]],[[44,[20]]],39],[[],[[0,[62]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,25],14,[]],[[-1,25],14,[]],[[31,63],31],[[31,63],14],[-1,[[17,[22]]],[]],[31,[[17,[22]]]],[31,[[3,[[65,[64]],66]]]],[31,[[3,[[65,[64]],67]]]],[31,[[3,[[65,[64]],66]]]],[31,[[3,[[65,[64]],67]]]],[31,63],[31,63],[31,63],[31,31],[31,31],[31,[[23,[22]]]],[31,68],[31,63],[31,[[17,[22]]]],[31,69],[-1,[[3,[[17,[-2]],70]]],[],71],[31,[[3,[63,66]]]],[31,[[3,[63,66]]]],[31,[[3,[63,67]]]],[31,63],[31,[[3,[63,67]]]],[-1,[[72,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[72,[22]]],[]],[-1,-2,[],[]],[31,63],[-1,-2,[],[]],[-1,-2,[],[]],[31,63],[-1,-2,[],[]],[[-1,20,[19,[28]],[23,[22]],[19,[7]],26,29],[[14,[30,[23,[22]]]]],[]],[73,26],[31,8],[31,14],[31,14],[[],-1,[]],[1,1],[31,31],[[31,31],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[31,31],74],[-1,20,[]],[[31,63],14],[-1,29,[]],[75,[[3,[31,76]]]],[-1,[[3,[-2,77]]],78,[]],[-1,[[3,[31,79]]],80],[[[17,[22]]],[[3,[-1,79]]],[]],[[13,[17,[22]]],[[3,[-1,79]]],[]],[[-1,81],[[3,[31,77]]],78],[[13,-1],[[3,[-2,79]]],80,[]],[[],31],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],[[3,[74,77]]],[],[]],[8,-1,[]],[31,63],[8,-1,[]],[8,-1,[]],[31,63],[8,-1,[]],[-1,[[3,[31]]],82],[-1,[[3,[31]]],40],[[31,-1],83,[[84,[8]]]],[8,14],[8,14],[-1,[[23,[22]]],[]],[[-1,-2],[[3,[14,77]]],[],85],[-1,-2,[],[[87,[86]]]],[-1,-2,[],[[87,[86]]]],[[-1,-2],14,[],[88,89]],[[31,-1],[[3,[14,77]]],85],[[31,8,-1],[[3,[8,90]]],18],[-1,[[3,[91,77]]],[]],[[1,1],26],[[31,[65,[63]]],26],[[31,92],26],[[31,63],26],[[31,93],26],[[31,63],26],[[31,31],26],[[31,94],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],0,[[31,-1],14,95],[[31,-1],14,95],[[31,-1],14,95],[[31,-1],14,95],[[31,-1],14,95],[[31,-1],14,95],[[31,-1],14,[[84,[8]]]],[[31,63],14],[[31,31],14],[[31,[65,[63]]],14],[[31,86],14],[[31,86],14],[[31,8],14],[[31,8],14],[31,31],[31,31],[[1,53],[[3,[14,96]]]],[[31,53],[[3,[14,96]]]],[[31,53],[[3,[14,96]]]],[-1,-1,[]],[97,31],[86,31],[31,31],[98,31],[-1,-1,[]],[99,31],[100,31],[101,31],[63,31],[63,31],[[[65,[63]]],31],[[[102,[63]]],31],[-1,31,95],[-1,31,95],[-1,31,95],[-1,31,95],[-1,31,95],[-1,31,95],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,31,103],[-1,31,103],[-1,31,103],[-1,31,103],[-1,31,103],[[22,8,8],31],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[63,[[3,[31]]]],[[[17,[59]]],[[3,[31,104]]]],[[[17,[59]]],31],[[[17,[22]]],[[3,[31,104]]]],[[[17,[22]]],31],[[[17,[22]]],[[3,[31,104]]]],[[[17,[22]]],31],[[[23,[22]]],[[3,[31,105]]]],[[[17,[22]]],[[65,[63]]]],[[[23,[22]]],31],[-1,[[19,[7]]],[]],[[-1,-2],7,[106,89],107],[[-1,-2],7,[106,89],107],[[31,-1],14,108],[-1,[[23,[22]]],[]],[[31,[109,[8]]],63],[[31,[110,[8]]],63],[[31,[111,[8]]],63],[[31,[112,[8]]],63],[[31,113],63],[[31,[114,[8]]],63],[[31,[114,[8]]],63],[[31,[109,[8]]],63],[[31,[111,[8]]],63],[[31,[112,[8]]],63],[[31,[110,[8]]],63],[[31,113],63],[[],8],[[],8],[-1,[[17,[22]]],[]],[[31,8,86],14],[[31,8,63],14],[-1,-2,[],[]],[-1,-2,[],[]],[31,[[102,[63]]]],[31,[[23,[22]]]],[31,[[3,[[65,[64]],66]]]],[31,[[3,[[65,[64]],66]]]],[31,[[3,[[65,[64]],67]]]],[31,[[3,[[65,[64]],67]]]],[31,[[115,[-1]]],116],[-1,-2,[],[]],[-1,-2,[],[]],[31,[[14,[22,8,8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[31,63]],[[31,-1],[[3,[-2,66]]],18,[]],[[31,-1],[[3,[-2,67]]],18,[]],[[31,-1],[[3,[-2,66]]],18,[]],[[31,-1],[[3,[-2,67]]],18,[]],[-1,26,[]],[[31,63],26],[31,26],[[31,63],26],[-1,26,[]],[[31,63],26],0,[31,63],[31,8],[[-1,20,[23,[24]],[23,[22]]],[[3,[14,15]]],[]],0,0,0,0,0,[[31,63],26],[[31,[65,[63]]],26],[[31,63],26],[[],31],[31,[[19,[[65,[63]]]]]],[31,[[19,[[65,[63]]]]]],0,[[31,-1],[],[[84,[8]]]],[[31,-1],14,103],[[31,-1],14,103],[[31,-1],14,103],[[31,-1],14,103],[[31,-1],14,103],[[-1,-2],[[3,[-3,117]]],[],118,119],[[31,92],[[19,[74]]]],[[31,94],[[19,[74]]]],[[31,31],[[19,[74]]]],[31,[[19,[86]]]],0,[[31,86],14],[[31,63],14],[[31,120,121],14],[[-1,7],[[3,[14,15]]],[]],[[-1,[19,[7]],[19,[7]],[19,[7]]],[[3,[14,15]]],[]],[[-1,[19,[7]],[19,[7]]],14,[]],[-1,7,[]],[[31,8],86],[[31,-1],14,122],[[31,123,31],14],[[31,123,31],14],[[31,-1,63],14,[[84,[8]]]],[[31,8],14],[[31,8],14],[[31,-1],14,124],0,[[31,125],14],[[31,-1],[[3,[14,126]]],127],[[31,-1],3,60],[[31,8],14],[31,14],[-1,8,[]],0,[[31,8],31],[[31,63],[[19,[63]]]],[[31,63],[[19,[63]]]],[-1,73,[]],[[-1,[17,[22]]],[[23,[22]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,[[3,[[129,[128]],130]]]],[-1,31,[]],[31,[[65,[63]]]],[31,[[65,[63]]]],[31,[[65,[63]]]],[31,[[65,[63]]]],[[31,8],14],[-1,[[3,[-2]]],[],[]],[[[131,[-1,-2]]],[[3,[31]]],[],[]],[132,[[3,[31,77]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[31,8],[[3,[14,133]]]],[[31,8],[[3,[14,133]]]],[-1,[[72,[22]]],[]],[-1,[[72,[22]]],[]],[-1,[[23,[22]]],[]],[-1,61,[]],[-1,61,[]],[[],134],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],-3,[],18,[]],[[-1,-2],[[3,[74,77]]],[],[]],[31,[[3,[91,77]]]],[-1,-2,[],[]],[-1,-2,[],[]],[8,31],[[31,86],[[3,[14,96]]]],[[31,-1,-2],[[3,[8,130]]],135,118],[[31,-1,-2],[[3,[8,130]]],135,118],[[31,63],[[3,[14,96]]]],[[-1,63],[[3,[14,96]]],[]],[31,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,25],14,[]],[[-1,25],14,[]],[[-1,25],14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[136,[[23,[22]]]],0,[12,12],[136,136],[[[137,[-1,-2]]],[[137,[-1,-2]]],34,34],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[[137,[-1,-2]]],-2,[],[]],[[[17,[22]]],[[11,[-1]]],138],0,0,[[],136],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,14],[8,14],[8,14],[-1,[[23,[22]]],138],0,0,[[13,-1],[[23,[22]]],138],[[12,8],11],[[12,53],54],[[136,53],54],[[[137,[-1,-2]],53],54,55,55],[-1,-1,[]],[-1,-1,[]],[139,-1,[]],[-1,-1,[]],[-1,[[137,[-2,-1]]],[],[]],[140,-1,[]],[140,-1,[]],[-1,-2,141,[]],[-1,-2,142,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[140,-1,[]],[[],26],[[],26],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],26],0,[[[17,[22]]],12],[[],136],[[[17,[22]]],[[11,[12]]]],[-1,136,[[21,[13]]]],[12,[[11,[-1]]],[]],[12,[[11,[-1]]],138],[12,[[11,[[137,[-2,-1]]]]],[138,21],[138,[143,[-1]]]],[12,[[11,[12]]]],[[12,8],[[11,[[17,[22]]]]]],[12,[[11,[[17,[22]]]]]],[[[17,[22]]],[[19,[13]]]],[[],31],[[],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,-1],14,[]],[[136,-1],136,138],[[136,[137,[-1,-2]]],14,[],[138,[21,[-1]]]],[[136,[23,[22]]],14],0,0,0,0,0,0,0,[[-1,25],14,[]],[[-1,25],14,[]],[[-1,25],14,[]],[[[131,[-1,-2]]],[[17,[22]]],[],[[44,[13]]]],[[[131,[-1,-2]]],[[3,[63,144]]],[],[[44,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[145,145],[146,146],[[[131,[-1,-2]]],[[131,[-1,-2]]],0,[[44,[13]]]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,14],[8,14],[8,14],[[145,145],26],[[146,146],26],[[[131,[-1,-2]],[131,[-3,-4]]],26,[],[],[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[145,53],54],[[146,53],54],[[[131,[-1,-2]],53],54,55,55],[-1,-1,[]],[-1,-1,[]],[[[17,[22]]],[[131,[-1,-2]]],[],[]],[-1,-1,[]],[31,[[131,[-1,-2]]],[],[]],[[[72,[22]]],[[131,[-1,-2]]],[],[]],[[[72,[22]]],[[131,[-1,-2]]],[],[]],[[[23,[22]]],[[131,[-1,-2]]],[],[]],[63,[[131,[-1,-2]]],[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],26],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,[[11,[[131,[-1,-2]]]]],0,[[44,[13]]]],[[],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,[131,[-1,-2]]],14,0,[[44,[13]]]],0,0,[[-1,25],14,[]],[[-1,25],14,[]],[147,[[19,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[147,147],[[[148,[-1,-2]]],[[148,[-1,-2]]],34,34],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[],147],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,14],[8,14],[[147,147],26],[[[148,[-1,-2]],[148,[-1,-2]]],26,149,149],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[147,53],54],[[[148,[-1,-2]],53],54,55,55],[20,147],[-1,-1,[]],[[[72,[-1]]],[[148,[-1,-2]]],34,[]],[[[17,[-1]]],[[148,[-1,-2]]],34,[]],[[[23,[-1]]],[[148,[-1,-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],26],[[],26],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[12,[[11,[147]]]],[12,[[11,[[148,[-1,-2]]]]],138,[[44,[13]]]],[[],31],[[],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,147],14],[[136,[148,[-1,-2]]],14,138,[[44,[13]]]],0,0,0,0,[[-1,25],14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,26,10],11],[10,10],[[-1,-2],14,[],[]],[8,-1,[]],[8,-1,[]],[8,14],[[10,10],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[32,-1],32,[[21,[31]]]],[[],-1,[]],[-1,150,[[21,[31]]]],[[],151],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,14],[8,14],[8,14],[[151,151],26],[[150,150],26],[[32,32],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[151,53],[[3,[14,96]]]],[[150,53],[[3,[14,96]]]],[[32,53],[[3,[14,96]]]],[[32,53],[[3,[14,96]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[150,32],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[-1,8],[],[]],[[[11,[-1]],8],[[11,[-1]]],[]],[[151,8],151],[[150,8],32],[[32,8],32],[[-1,-2],[],[],[[21,[31]]]],[[[11,[-1]],-2],[[11,[-1]]],[],[[21,[31]]]],[[151,-1],151,[[21,[31]]]],[[150,-1],32,[[21,[31]]]],[[32,-1],32,[[21,[31]]]],[[-1,8],[],[]],[[[11,[-1]],8],[[11,[-1]]],[]],[[151,8],151],[[150,8],32],[[32,8],32],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[151,26],[[-1,[17,[63]]],-1,[]],[[[11,[-1]],[17,[63]]],[[11,[-1]]],[]],[[151,[17,[63]]],151],[[32,[17,[63]]],32],[[-1,-2],-1,[],18],[[[11,[-1]],-2],[[11,[-1]]],[],18],[[32,-1],32,18],[[],151],[150,32],[-1,150,[[21,[31]]]],[-1,2,[[21,[31]]]],[-1,[[23,[22]]],[[21,[31]]]],[32,[[23,[22]]]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,150,[[21,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,25],14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[152,[-1]]],[[152,[-1]]],34],[[-1,-2],14,[],[]],[[],7],[[],7],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,14],[8,14],[[153,53],54],[[[152,[-1]],53],54,55],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,154],[[3,[14,15]]],4],[[-1,154,[19,[154]]],[[3,[7,15]]],4],[-1,-2,[],[]],[[-1,-2],[[3,[155,153]]],4,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,25],14,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[63]],-1],14,156],[157,157],[[-1,-2],14,[],[]],[63,13],[[[17,[22]]],[[17,[22]]]],[8,-1,[]],[8,-1,[]],[8,14],[[157,157],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],0,[[157,53],[[3,[14,96]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,25],14,[]],[[],[[72,[22]]]],[[],[[72,[22]]]],[-1,[[72,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[72,[22]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[72,[22]]]],[158,158],[[-1,-2],14,[],[]],[[158,158],74],[20,158],[-1,[[3,[158,79]]],80],[[[17,[22]]],[[3,[-1,79]]],[]],[[13,[17,[22]]],[[3,[-1,79]]],[]],[[13,-1],[[3,[-2,79]]],80,[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[3,[158]]],40],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[158,[[23,[22]]]],[[158,-1],14,[88,89]],[[158,158],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[158,53],54],[[158,53],54],[159,158],[[[72,[22]]],158],[160,158],[161,158],[162,158],[-1,-1,[]],[163,158],[164,158],[165,158],[20,158],[166,158],[7,158],[167,158],[168,158],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[7,158],[[158,[17,[22]]],26],[[158,13],26],[-1,[[23,[22]]],[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[158,158],[[19,[74]]]],[[158,-1],3,60],[158,8],[[-1,[17,[22]]],[[23,[22]]],[]],[-1,-2,[],[]],[-1,31,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[72,[22]]],[]],[-1,[[72,[22]]],[]],[-1,[[23,[22]]],[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[[],134],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[158,-1],-2,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[158,169],[[],158],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[8,-1,[]],[8,-1,[]],[8,14],[[[58,[-1]],15],14,48],[[[58,[-1]]],14,48],[[[58,[-1]],-2],14,48,138],[[[58,[-1]],[23,[22]]],14,48],[[[58,[-1]],-2],14,48,156],[[[58,[-1]]],14,48],[[[58,[-1]],7],[[58,[-1]]],48],[[[58,[-1]],16],[[58,[-1]]],48],[[[58,[-1]]],[[58,[-1]]],48],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-3,[23,[22]]],[[58,[-1]]],48,[[21,[20]]],[[21,[20]]]],[[-1,-2,-3,-4],[[58,[-1]]],[],[[21,[20]]],[[21,[20]]],[[21,[[23,[22]]]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[58,[-1]],26],[[58,[-1]]],48],[[[58,[-1]],-2],[[58,[-1]]],48,170],[[[58,[-1]],[19,[7]]],[[58,[-1]]],48],[[[58,[-1]],-2],[[58,[-1]]],48,[[21,[5]]]],0,0,0,0,0,[[-1,25],14,[]],[[-1,25],14,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[171,20,[19,[28]],[23,[22]],[19,[7]],26,29],[[14,[30,[23,[22]]]]]],[[-1,10],[[3,[14,32]]],[]],[172,172],[173,173],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[171,20],0,[171,29],0,0,0,[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,14],[8,14],[8,14],[[172,53],54],[[173,53],54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[171,[[19,[7]]]],0,0,[[],8],[[],8],[[],8],[171,[[17,[22]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[171,26],0,0,[[171,20,[23,[24]],[23,[22]]],[[3,[14,15]]]],0,0,[[20,29],171],[[],173],0,[-1,[[3,[12,32]]],[]],[-1,[[3,[13,32]]],[]],0,[[171,7],[[3,[14,15]]]],[[-1,8],[[3,[14,15]]],[]],[[171,[19,[7]],[19,[7]],[19,[7]]],[[3,[14,15]]]],[[-1,[17,[16]]],[[3,[14,2]]],[]],[[-1,8,8],[[3,[14,2]]],[]],[[171,[19,[7]],[19,[7]]],14],[171,7],[[],173],0,[[],173],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[8,-1,[]],[8,-1,[]],[8,14],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-3],[[174,[-1]]],48,[[21,[20]]],[[21,[20]]]],[[[174,[-1]],[17,[13]]],14,48],[[[174,[-1]],[17,[13]]],14,48],[[[174,[-1]],[17,[13]]],14,48],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,61,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"PrecompileOutput",541],[4,"PrecompileFailure",1915],[4,"Result",1916],[8,"PrecompileHandle",541],[3,"U256",1917],[3,"Config",1918],[15,"u64"],[15,"usize"],[6,"EvmResult",0],[4,"FunctionModifier",1188],[6,"MayRevert",1221],[3,"Reader",879],[15,"u32"],[15,"tuple"],[4,"ExitError",1919],[3,"Log",1920],[15,"slice"],[8,"FnOnce",1921],[4,"Option",1922],[3,"H160",1917],[8,"Into",1923],[15,"u8"],[3,"Vec",1924],[3,"H256",1917],[3,"Private",1925],[15,"bool"],[3,"RestrictiveHandle",39],[3,"Transfer",1926],[3,"Context",1927],[4,"ExitReason",1919],[3,"String",541],[3,"Revert",1221],[4,"DiscriminantResult",39],[8,"Clone",1928],[4,"PrecompileKind",39],[3,"PrecompileCheckSummary",39],[3,"PrecompileSetBuilder",39],[8,"Config",1929],[8,"PrecompileSetFragment",39],[8,"Deserializer",1930],[4,"AddressType",39],[6,"PrecompileResult",1931],[3,"PrecompileAt",39],[8,"Get",1932],[8,"Precompile",0],[8,"PrecompileChecks",39],[3,"PrecompileSetStartingWith",39],[8,"PrecompileSet",1915],[8,"Default",1933],[3,"RevertPrecompile",39],[3,"RemovedPrecompileAt",39],[3,"PrecompilesInRangeInclusive",39],[3,"Formatter",1934],[6,"Result",1934],[8,"Debug",1934],[4,"IsPrecompileResult",1915],[8,"IsActivePrecompile",39],[3,"PrecompilesTester",1739],[15,"u16"],[8,"Serializer",1935],[3,"TypeId",1936],[8,"Iterator",1937],[15,"str"],[3,"CStr",1938],[4,"Cow",1939],[3,"Errno",1940],[3,"Errno",1940],[3,"OsStr",1941],[3,"Path",1942],[4,"Error",1943],[8,"FromByteSlice",1943],[15,"array"],[4,"Tag",1944],[4,"Ordering",1945],[3,"Rlp",1946],[4,"DecoderError",1947],[3,"Error",1948],[8,"Reader",1949],[3,"Error",1950],[8,"Input",1951],[3,"Header",1952],[8,"Read",1953],[3,"Drain",1954],[8,"RangeBounds",1955],[8,"Writer",1956],[15,"char"],[8,"FromIterator",1957],[8,"Output",1951],[8,"Sized",1958],[4,"Error",1959],[3,"Length",1960],[3,"BytesMut",1961],[4,"Value",1962],[3,"Bytes",1963],[8,"IntoIterator",1957],[3,"Error",1934],[3,"Ss58AddressFormat",1964],[4,"RuntimeString",1965],[3,"Url",1966],[3,"Utf8StringRef",1967],[3,"KebabString",1968],[3,"Box",1969],[8,"IntoParallelIterator",1970],[3,"FromUtf16Error",1954],[3,"FromUtf8Error",1954],[8,"Hash",1971],[8,"BuildHasher",1971],[8,"Hasher",1971],[3,"RangeToInclusive",1955],[3,"RangeInclusive",1955],[3,"Range",1955],[3,"RangeTo",1955],[3,"RangeFull",1955],[3,"RangeFrom",1955],[3,"StringDeserializer",1972],[8,"Error",1930],[3,"Error",1973],[8,"Format",1974],[8,"FromFormattedStr",1975],[3,"Field",1976],[8,"Visit",1976],[8,"Pattern",1977],[3,"Captures",1978],[8,"FnMut",1921],[3,"RlpStream",1979],[4,"Error",1980],[8,"Write",1953],[4,"SocketAddr",1981],[3,"IntoIter",1982],[3,"Error",1983],[3,"BoundedBytesString",1006],[3,"AnyRef",1984],[3,"TryReserveError",1985],[3,"Type",1986],[8,"ToFormattedString",1987],[3,"Writer",879],[3,"Convert",879],[8,"Codec",879],[15,"never"],[3,"OwnedFd",1988],[8,"IntoFilelike",1989],[8,"IntoSocketlike",1989],[8,"TryInto",1923],[3,"Utf8Error",1990],[3,"BytesKind",1006],[3,"StringKind",1006],[3,"Address",1112],[3,"BoundedVec",1112],[8,"PartialEq",1945],[4,"RevertReason",1221],[3,"Backtrace",1221],[3,"RuntimeHelper",1356],[4,"TryDispatchError",1356],[3,"Weight",1991],[3,"PostDispatchInfo",1992],[8,"Fn",1921],[3,"PrettyLog",1411],[3,"MockAccount",1448],[3,"Alice",1448],[3,"Charlie",1448],[3,"Bob",1448],[3,"CryptoCarleth",1448],[3,"Zero",1448],[3,"AddressInPrefixedSet",1448],[3,"CryptoAlith",1448],[3,"Precompile1",1448],[3,"CryptoBaltathar",1448],[3,"David",1448],[15,"u128"],[8,"SubcallTrait",1776],[3,"MockHandle",1776],[3,"Subcall",1776],[3,"SubcallOutput",1776],[3,"PrecompilesModifierTester",1890],[8,"PrecompileHandleExt",22],[8,"LogExt",31],[3,"AcceptDelegateCall",39],[3,"SubcallWithMaxNesting",39],[3,"ForAllSelectors",39],[3,"OnlyFrom",39],[3,"CallableByContract",39],[3,"CallableByPrecompile",39],[3,"AddressU64",39],[8,"SelectorFilter",39],[8,"InjectBacktrace",1221],[8,"BacktraceExt",1221],[8,"RevertExt",1221],[13,"ReadOutOfBounds",1354],[13,"ValueIsTooLarge",1354],[8,"PrecompileTesterExt",1739]],"b":[[571,"impl-Arg-for-%26String"],[572,"impl-Arg-for-%26String"],[573,"impl-Arg-for-String"],[574,"impl-Arg-for-String"],[578,"impl-Target-for-%26mut+String"],[579,"impl-Target-for-String"],[581,"impl-AsRef%3COsStr%3E-for-String"],[582,"impl-AsRef%3Cstr%3E-for-String"],[583,"impl-AsRef%3C%5Bu8%5D%3E-for-String"],[584,"impl-AsRef%3CPath%3E-for-String"],[586,"impl-Arg-for-String"],[587,"impl-Arg-for-%26String"],[588,"impl-Arg-for-%26String"],[589,"impl-String"],[590,"impl-Arg-for-String"],[603,"impl-Clear-for-String"],[604,"impl-String"],[615,"impl-Decodable-for-String"],[617,"impl-Decode-for-String"],[634,"impl-Deserialize-for-String"],[635,"impl-Deserialize%3C\'de%3E-for-String"],[648,"impl-PartialEq%3CCow%3C\'a,+str%3E%3E-for-String"],[649,"impl-PartialEq%3CBytesMut%3E-for-String"],[650,"impl-PartialEq%3Cstr%3E-for-String"],[651,"impl-PartialEq%3CValue%3E-for-String"],[652,"impl-PartialEq%3C%26str%3E-for-String"],[653,"impl-PartialEq-for-String"],[654,"impl-PartialEq%3CBytes%3E-for-String"],[662,"impl-Extend%3Cchar%3E-for-String"],[663,"impl-Extend%3CString%3E-for-String"],[664,"impl-Extend%3C%26str%3E-for-String"],[665,"impl-Extend%3CCow%3C\'a,+str%3E%3E-for-String"],[666,"impl-Extend%3CBox%3Cstr%3E%3E-for-String"],[667,"impl-Extend%3C%26char%3E-for-String"],[669,"impl-Extend%3C%26str%3E-for-String"],[670,"impl-Extend%3CString%3E-for-String"],[671,"impl-Extend%3CCow%3C\'a,+str%3E%3E-for-String"],[672,"impl-Extend%3C%26char%3E-for-String"],[673,"impl-Extend%3Cchar%3E-for-String"],[674,"impl-Extend%3Cchar%3E-for-String"],[675,"impl-Extend%3C%26char%3E-for-String"],[676,"impl-Target-for-String"],[677,"impl-Target-for-%26mut+String"],[679,"impl-Debug-for-String"],[680,"impl-Display-for-String"],[682,"impl-From%3CSs58AddressFormat%3E-for-String"],[683,"impl-From%3Cchar%3E-for-String"],[684,"impl-From%3C%26String%3E-for-String"],[685,"impl-From%3CRuntimeString%3E-for-String"],[687,"impl-From%3CUrl%3E-for-String"],[688,"impl-From%3CUtf8StringRef%3C\'a%3E%3E-for-String"],[689,"impl-From%3CKebabString%3E-for-String"],[690,"impl-From%3C%26mut+str%3E-for-String"],[691,"impl-From%3C%26str%3E-for-String"],[692,"impl-From%3CCow%3C\'a,+str%3E%3E-for-String"],[693,"impl-From%3CBox%3Cstr%3E%3E-for-String"],[694,"impl-FromIterator%3CString%3E-for-String"],[695,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-String"],[696,"impl-FromIterator%3C%26str%3E-for-String"],[697,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-String"],[698,"impl-FromIterator%3C%26char%3E-for-String"],[699,"impl-FromIterator%3Cchar%3E-for-String"],[704,"impl-FromParallelIterator%3C%26str%3E-for-String"],[705,"impl-FromParallelIterator%3C%26char%3E-for-String"],[706,"impl-FromParallelIterator%3CCow%3C\'a,+str%3E%3E-for-String"],[707,"impl-FromParallelIterator%3Cchar%3E-for-String"],[708,"impl-FromParallelIterator%3CString%3E-for-String"],[729,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-String"],[730,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-String"],[731,"impl-Index%3CRange%3Cusize%3E%3E-for-String"],[732,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-String"],[733,"impl-Index%3CRangeFull%3E-for-String"],[734,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-String"],[735,"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-String"],[736,"impl-IndexMut%3CRangeToInclusive%3Cusize%3E%3E-for-String"],[737,"impl-IndexMut%3CRange%3Cusize%3E%3E-for-String"],[738,"impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-String"],[739,"impl-IndexMut%3CRangeInclusive%3Cusize%3E%3E-for-String"],[740,"impl-IndexMut%3CRangeFull%3E-for-String"],[750,"impl-Arg-for-%26String"],[751,"impl-Arg-for-String"],[752,"impl-Arg-for-%26String"],[753,"impl-Arg-for-String"],[761,"impl-Arg-for-%26String"],[762,"impl-Arg-for-%26String"],[763,"impl-Arg-for-String"],[764,"impl-Arg-for-String"],[780,"impl-PartialEq%3C%26str%3E-for-String"],[781,"impl-PartialEq%3CCow%3C\'a,+str%3E%3E-for-String"],[782,"impl-PartialEq%3Cstr%3E-for-String"],[784,"impl-Replacer-for-%26String"],[785,"impl-Replacer-for-String"],[788,"impl-ParallelExtend%3C%26char%3E-for-String"],[789,"impl-ParallelExtend%3Cchar%3E-for-String"],[790,"impl-ParallelExtend%3CString%3E-for-String"],[791,"impl-ParallelExtend%3C%26str%3E-for-String"],[792,"impl-ParallelExtend%3CCow%3C\'a,+str%3E%3E-for-String"],[794,"impl-PartialOrd%3CBytesMut%3E-for-String"],[795,"impl-PartialOrd%3CBytes%3E-for-String"],[796,"impl-PartialOrd-for-String"],[808,"impl-Replacer-for-String"],[809,"impl-Replacer-for-%26String"],[816,"impl-Serialize-for-String"],[817,"impl-Serialize-for-String"],[831,"impl-Arg-for-String"],[832,"impl-Arg-for-String"],[833,"impl-Arg-for-%26String"],[834,"impl-Arg-for-%26String"],[837,"impl-TryFrom%3CBoundedBytesString%3CK,+S%3E%3E-for-String"],[838,"impl-TryFrom%3CAnyRef%3C\'a%3E%3E-for-String"],[861,"impl-WriteFormatted-for-%26mut+String"],[862,"impl-WriteFormatted-for-String"],[1056,"impl-From%3C%26%5Bu8%5D%3E-for-BoundedBytesString%3CK,+S%3E"],[1058,"impl-From%3CString%3E-for-BoundedBytesString%3CK,+S%3E"],[1059,"impl-From%3C%5Bu8;+N%5D%3E-for-BoundedBytesString%3CK,+S%3E"],[1060,"impl-From%3C%26%5Bu8;+N%5D%3E-for-BoundedBytesString%3CK,+S%3E"],[1061,"impl-From%3CVec%3Cu8%3E%3E-for-BoundedBytesString%3CK,+S%3E"],[1062,"impl-From%3C%26str%3E-for-BoundedBytesString%3CK,+S%3E"],[1145,"impl-From%3C%5BT;+N%5D%3E-for-BoundedVec%3CT,+S%3E"],[1146,"impl-From%3C%26%5BT%5D%3E-for-BoundedVec%3CT,+S%3E"],[1147,"impl-From%3CVec%3CT%3E%3E-for-BoundedVec%3CT,+S%3E"],[1272,"impl-Display-for-Revert"],[1273,"impl-Debug-for-Revert"],[1540,"impl-Display-for-MockAccount"],[1541,"impl-Debug-for-MockAccount"],[1542,"impl-From%3CAlice%3E-for-MockAccount"],[1543,"impl-From%3C%5Bu8;+20%5D%3E-for-MockAccount"],[1544,"impl-From%3CCharlie%3E-for-MockAccount"],[1545,"impl-From%3CBob%3E-for-MockAccount"],[1546,"impl-From%3CCryptoCarleth%3E-for-MockAccount"],[1548,"impl-From%3CZero%3E-for-MockAccount"],[1549,"impl-From%3CAddressInPrefixedSet%3E-for-MockAccount"],[1550,"impl-From%3CCryptoAlith%3E-for-MockAccount"],[1551,"impl-From%3CH160%3E-for-MockAccount"],[1552,"impl-From%3CPrecompile1%3E-for-MockAccount"],[1553,"impl-From%3Cu64%3E-for-MockAccount"],[1554,"impl-From%3CCryptoBaltathar%3E-for-MockAccount"],[1555,"impl-From%3CDavid%3E-for-MockAccount"]]},\
"precompile_utils_macro":{"doc":"","t":"YOXX","n":["Codec","keccak256","precompile","precompile_name_from_address"],"q":[[0,"precompile_utils_macro"]],"d":["","","",""],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[],"b":[]},\
"precompile_utils_tests_external":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
