(function() {var implementors = {
"fp_evm":[],
"pallet_evm":[],
"pallet_evm_precompile_blake2":[["impl Precompile for <a class=\"struct\" href=\"pallet_evm_precompile_blake2/struct.Blake2F.html\" title=\"struct pallet_evm_precompile_blake2::Blake2F\">Blake2F</a>"]],
"pallet_evm_precompile_bn128":[["impl Precompile for <a class=\"struct\" href=\"pallet_evm_precompile_bn128/struct.Bn128Add.html\" title=\"struct pallet_evm_precompile_bn128::Bn128Add\">Bn128Add</a>"],["impl Precompile for <a class=\"struct\" href=\"pallet_evm_precompile_bn128/struct.Bn128Mul.html\" title=\"struct pallet_evm_precompile_bn128::Bn128Mul\">Bn128Mul</a>"],["impl Precompile for <a class=\"struct\" href=\"pallet_evm_precompile_bn128/struct.Bn128Pairing.html\" title=\"struct pallet_evm_precompile_bn128::Bn128Pairing\">Bn128Pairing</a>"]],
"pallet_evm_precompile_dispatch":[["impl&lt;T, DecodeLimit&gt; Precompile for <a class=\"struct\" href=\"pallet_evm_precompile_dispatch/struct.Dispatch.html\" title=\"struct pallet_evm_precompile_dispatch::Dispatch\">Dispatch</a>&lt;T, DecodeLimit&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Config,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::RuntimeCall: Dispatchable&lt;PostInfo = PostDispatchInfo&gt; + GetDispatchInfo + Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::RuntimeCall as Dispatchable&gt;::RuntimeOrigin: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T::AccountId&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DecodeLimit: Get&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;,</span>"]],
"pallet_evm_precompile_modexp":[["impl Precompile for <a class=\"struct\" href=\"pallet_evm_precompile_modexp/struct.Modexp.html\" title=\"struct pallet_evm_precompile_modexp::Modexp\">Modexp</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()