window.SIDEBAR_ITEMS = {"enum":[["ExitError","Exit error reason."],["ExitFatal","Exit fatal reason."],["ExitReason","Exit reason."],["ExitRevert","Exit revert reason."],["ExitSucceed","Exit succeed reason."],["InvalidEvmTransactionError",""],["IsPrecompileResult",""],["PrecompileFailure","Data returned by a precompile in case of failure."]],"mod":[["pallet","The module that hosts all the FRAME types needed to add this pallet to a runtime."],["runner",""],["weights","Autogenerated weights for pallet_evm"]],"struct":[["Account","Basic account information."],["CodeMetadata",""],["Context","Context of the runtime."],["EVMCurrencyAdapter","Implements the transaction payment for a pallet implementing the `Currency` trait (eg. the pallet_balances) using an unbalance handler (implementing `OnUnbalanced`). Similar to `CurrencyAdapter` of `pallet_transaction_payment`"],["EnsureAccountId20","Ensure that the address is AccountId20."],["EnsureAddressNever","Ensure that the origin never happens."],["EnsureAddressRoot","Ensure that the origin is root."],["EnsureAddressSame","Ensure that the EVM address is the same as the Substrate address. This only works if the account ID is `H160`."],["EnsureAddressTruncated","Ensure that the address is truncated hash of the origin. Only works if the account id is `AccountId32`."],["EvmConfig","Runtime configuration."],["ExecutionInfo",""],["FixedGasWeightMapping",""],["HashedAddressMapping","Hashed address mapping."],["IdentityAddressMapping","Identity address mapping."],["Log",""],["PrecompileOutput","Data returned by a precompile on success."],["SubstrateBlockHashMapping","Returns the Substrate block hash by number."],["Vicinity","External input from the transaction."]],"trait":[["AddressMapping","Trait to be implemented for evm address mapping."],["BlockHashMapping","A trait for getting a block hash by number."],["EnsureAddressOrigin",""],["FeeCalculator","Trait that outputs the current transaction gas price."],["GasWeightMapping","A mapping function that converts Ethereum gas to Substrate weight"],["LinearCostPrecompile",""],["OnChargeEVMTransaction","Handle withdrawing, refunding and depositing of transaction fees. Similar to `OnChargeTransaction` of `pallet_transaction_payment`"],["OnCreate",""],["Precompile","One single precompile used by EVM engine."],["PrecompileHandle","Handle provided to a precompile to interact with the EVM."],["PrecompileSet","A set of precompiles."]],"type":[["BalanceOf","Type alias for currency balance."],["CallInfo",""],["CreateInfo",""],["PrecompileResult",""]]};